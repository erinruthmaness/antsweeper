{"version":3,"sources":["Components/Background/Nav/Nav.module.css","Components/Menu/NavDropdown/NavDropdown.module.css","Components/Game/CalcScreen/CalcScreen.module.css","Components/Game/Controls/Controls.module.css","Components/Game/Square/Square.module.css","Components/Game/Board/Board.module.css","Components/Menu/NavButton/NavButton.module.css","Components/Background/Window/Window.module.css","Components/Game/FaceButton/FaceButton.module.css","Components/Game/SquaresWrapper/SquaresWrapper.module.css","Components/Background/Footer/Footer.module.css","App.module.css","utils/store/initialState/paramLevels.js","utils/reducers/roundReducer.js","utils/store/initialState/round.js","utils/store/roundContext.js","utils/store/paramsContext.js","Components/Menu/GameOptionsMenu/GameOptionsMenu.js","Components/Menu/NavDropdown/NavDropdown.js","Components/Menu/NavButton/NavButton.js","Components/Background/Nav/Nav.js","utils/logic/icons.js","utils/reducers/boardReducer.js","utils/store/initialState/board.js","Components/Game/FaceButton/FaceButton.js","utils/logic/helpers.js","Components/Game/CalcScreen/CalcScreen.js","Components/Game/Controls/Controls.js","utils/logic/read.js","Components/Game/Square/Square.js","Components/Game/SquaresWrapper/SquaresWrapper.js","utils/logic/setup/buildBlankBoard.js","utils/logic/setup/buildNeighborhood.js","utils/logic/setup/addAnts.js","utils/logic/update.js","Components/Game/Board/Board.js","Components/Background/Window/Window.js","Components/Background/Footer/Footer.js","App.js","index.js"],"names":["module","exports","levels","beginner","rows","cols","ants","level","intermediate","expert","roundReducer","state","action","type","console","log","ready","started","payload","initialRound","defaultContext","set","start","lost","won","reset","roundContext","React","createContext","RoundCtxProvider","props","useReducer","roundState","dispatchRound","Provider","value","children","setParameters","params","paramContext","ParamCtxProvider","useState","setParams","newParam","GameOptionsMenu","paramCtx","useContext","roundCtx","className","styles","dropdown_menu_contents","dropdown_menu_section","onClick","dismiss","map","lvl","handleSelect","selected","charAt","toUpperCase","slice","NavDropdown","dropdown_menu","dropdown_menu__overlay","which","NavButton","dropdown","setDropDown","handleClick","prevState","dropdown_wrapper","dropdown_choice","buttonText","Nav","page_nav","menu_bar","menu_bar__left","String","fromCharCode","game_title","menu_bar__right","wc_box","disabled","wc_minimize","wc_maximize","wc_close","squares","unclicked","clicked","ant","flag","faces","sleeping","smiling","yelling","upsideDown","exploded","shades","xEyes","sweating","winking","boardReducer","board","face","getInitialBoard","paramContextOBJ","parameters","antList","flags","FaceButton","control_button","assessDigit","string","num","toString","CalcScreen","displayNum","display","padStart","split","calc_screen","id","digit","digitIdx","calc_screen__digit","num_top","digit_half","num_bottom","Controls","clock","setClock","firstClick","clockStarted","setClockStarted","useEffect","timer","inProgress","setInterval","prevTime","clearInterval","board_controls","calc_screen__wrapper","face_button__wrapper","startGame","squareHandler","squareResponse","whichClick","whichFace","touchStart","flagged","touchEnd","count","mouseDown","whichNum","squareProps","boardHandler","routeClick","clickedSquare","remFlags","leftClick","rightClick","sq","revealed","square","nearbyAnts","wasClicked","clickType","wasTouched","touchLength","Square","countRef","useRef","parseClick","event","eventString","gameOver","nativeEvent","downResult","changeFace","updateSquare","parseTouch","current","endResult","leftOrRight","row","col","grid_square","clicked_square","unclickedAnt","first_ant","onMouseDown","e","onMouseUp","undefined","onTouchStart","onTouchEnd","onContextMenu","preventDefault","Array","isArray","SquaresWrapper","boardGrid","index","board_row","key","handleSquareClick","setFace","gameInProgress","buildBlankBoard","from","rowIndex","colIndex","neighbors","buildSquare","buildRow","myIndex","length","buildNeighborhood","wholeBoard","thisRow","thisCol","rowAbove","myRow","rowBelow","concat","buildAnthill","starterArray","idx","i","array","j","Math","floor","random","shuffle","assignAnts","boardState","boardArea","antArray","counter","antMasterlist","forEach","cell","push","antInFirstClick","reservedNeighborhood","foundMatch","some","el","addAnts","newBoard","numAnts","neighborhood","filter","recursiveUncover","centerSquare","Board","paramsContext","dispatchBoard","restartRound","useCallback","clickedNeighborhood","boardWithAnts","allAnts","updateGrid","updateAction","indexOf","gameParams","unclickedSafe","checkForWin","startingSquare","updatedBoard","uncoverNeighbors","window__inner","board__outer","board__inner","newFace","Window","main_window","Footer","windows_footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e717624e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_nav\":\"Nav_page_nav__32hbe\",\"menu_bar\":\"Nav_menu_bar__1Wd_V\",\"menu_bar__left\":\"Nav_menu_bar__left__2NIfd\",\"game_title\":\"Nav_game_title__1sJIF\",\"menu_bar__right\":\"Nav_menu_bar__right__3fjxf\",\"windows95_button\":\"Nav_windows95_button__1wMlA\",\"wc_box\":\"Nav_wc_box__1Y4PR\",\"wc_minimize\":\"Nav_wc_minimize__HgzvC\",\"wc_maximize\":\"Nav_wc_maximize__1kmjj\",\"wc_close\":\"Nav_wc_close__37RhD\",\"dropdown_menu\":\"Nav_dropdown_menu__3MjM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown_menu__overlay\":\"NavDropdown_dropdown_menu__overlay__1vh5w\",\"dropdown_menu\":\"NavDropdown_dropdown_menu__24OSv\",\"dropdown_menu_contents\":\"NavDropdown_dropdown_menu_contents__3DXNI\",\"dropdown_menu_section\":\"NavDropdown_dropdown_menu_section__3rA6W\",\"selected\":\"NavDropdown_selected__1ciF4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calc_screen\":\"CalcScreen_calc_screen__3Jm5D\",\"calc_screen__digit\":\"CalcScreen_calc_screen__digit__oHexV\",\"digit_half\":\"CalcScreen_digit_half__3hRzf\",\"digit_0\":\"CalcScreen_digit_0__2hMxY\",\"num_top\":\"CalcScreen_num_top__3D59g\",\"num_bottom\":\"CalcScreen_num_bottom__1Zo0E\",\"digit_4\":\"CalcScreen_digit_4__v_OyT\",\"digit_1\":\"CalcScreen_digit_1__3RcD3\",\"digit_7\":\"CalcScreen_digit_7__2sjK1\",\"digit_2\":\"CalcScreen_digit_2__2rVcQ\",\"digit_5\":\"CalcScreen_digit_5__2wuv2\",\"digit_3\":\"CalcScreen_digit_3__3ZfAq\",\"digit_9\":\"CalcScreen_digit_9__3zGtB\",\"digit_6\":\"CalcScreen_digit_6__39qNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_controls\":\"Controls_board_controls__1JNZk\",\"calc_screen__wrapper\":\"Controls_calc_screen__wrapper___eClM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_square\":\"Square_grid_square__3dfUa\",\"clicked_square\":\"Square_clicked_square__1MzAG\",\"nearbys_0\":\"Square_nearbys_0__3plNI\",\"nearbys_1\":\"Square_nearbys_1__2iPhU\",\"nearbys_2\":\"Square_nearbys_2__2DZsw\",\"nearbys_3\":\"Square_nearbys_3__1Trt5\",\"nearbys_4\":\"Square_nearbys_4__20VH4\",\"nearbys_5\":\"Square_nearbys_5__1c659\",\"nearbys_6\":\"Square_nearbys_6__1o2Ev\",\"nearbys_7\":\"Square_nearbys_7__1kEkC\",\"nearbys_8\":\"Square_nearbys_8__38SI4\",\"first_ant\":\"Square_first_ant__3lNBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window__inner\":\"Board_window__inner__2hVC3\",\"board__outer\":\"Board_board__outer__1Ibmj\",\"board__inner\":\"Board_board__inner__1X72h\",\"beginner\":\"Board_beginner__1Vunc\",\"intermediate\":\"Board_intermediate__2FQXG\",\"expert\":\"Board_expert__11op2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown_wrapper\":\"NavButton_dropdown_wrapper__1fgg3\",\"dropdown_choice\":\"NavButton_dropdown_choice__2Lgkn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_window\":\"Window_main_window__2_sgA\",\"beginner\":\"Window_beginner__RV9Qn\",\"intermediate\":\"Window_intermediate__2oKcM\",\"expert\":\"Window_expert__3zkuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control_button\":\"FaceButton_control_button__1dOGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_row\":\"SquaresWrapper_board_row__2PoFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"windows_footer\":\"Footer_windows_footer__ht17i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1EnJK\"};","const levels = {\r\n  beginner: {\r\n    rows: 8,\r\n    cols: 8,\r\n    ants: 10,\r\n    level: \"beginner\"\r\n  },\r\n  intermediate: {\r\n    rows: 16,\r\n    cols: 16,\r\n    ants: 40,\r\n    level: \"intermediate\"\r\n  },\r\n  expert: {\r\n    rows: 24,\r\n    cols: 24,\r\n    ants: 99,\r\n    level: \"expert\"\r\n  },\r\n};\r\n\r\nexport default levels;\r\n","const roundReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"BOARD_SET\":\r\n        console.log(\"ROUND REDUCER board set\")\r\n      return { ...state, ready: true, started: false };\r\n    case \"START_ROUND\":\r\n        console.log(\"ROUND REDUCER start round\")\r\n      return { ...state, started: true };\r\n    case \"WON\":\r\n    case \"LOST\":\r\n        console.log(\"ROUND REDUCER won/last\")\r\n      return { ...state, ready: false };\r\n    case \"RESET\":\r\n        console.log(\"ROUND REDUCER reset\")\r\n      return { ...action.payload };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default roundReducer;\r\n","const initialRound = {\r\n  ready: false,\r\n  started: false,\r\n};\r\n\r\nexport default initialRound;\r\n","import React, { useReducer } from \"react\";\r\nimport roundReducer from \"../reducers/roundReducer\";\r\nimport initialRound from \"./initialState/round\";\r\n\r\n//for IDE completion\r\nconst defaultContext = {\r\n  ready: null,\r\n  started: null,\r\n  set: {\r\n    ready: () => {},\r\n    start: () => {},\r\n    lost: () => {},\r\n    won: () => {},\r\n    reset: () => {},\r\n  },\r\n};\r\nconst roundContext = React.createContext(defaultContext);\r\nexport default roundContext;\r\n\r\nexport const RoundCtxProvider = (props) => {\r\n  const [roundState, dispatchRound] = useReducer(roundReducer, initialRound);\r\n\r\n  const set = {\r\n    ready: () => {\r\n      dispatchRound({ type: \"BOARD_SET\" });\r\n    },\r\n    start: () => {\r\n      dispatchRound({ type: \"START_ROUND\" });\r\n    },\r\n    lost: () => {\r\n      dispatchRound({ type: \"LOST\" });\r\n    },\r\n    won: () => {\r\n      dispatchRound({ type: \"WON\" });\r\n    },\r\n    reset: () => {\r\n      dispatchRound({ type: \"RESET\", payload: { ...initialRound } });\r\n    },\r\n  };\r\n\r\n  return (\r\n    <roundContext.Provider value={{ ...roundState, set: set }}>\r\n      {props.children}\r\n    </roundContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport levels from \"./initialState/paramLevels\";\r\nimport { RoundCtxProvider } from \"./roundContext\";\r\n\r\n//for IDE completion\r\nconst defaultContext = {\r\n  rows: null,\r\n  cols: null,\r\n  ants: null,\r\n  setParameters: (params) => {},\r\n};\r\nconst paramContext = React.createContext(defaultContext);\r\nexport default paramContext;\r\n\r\nexport const ParamCtxProvider = (props) => {\r\n  const [params, setParams] = useState(levels.beginner);\r\n\r\n  const setParameters = (newParam) => {\r\n    setParams(newParam);\r\n    console.log(\"PARAMS CONTEXT changing params\");\r\n  };\r\n\r\n  return (\r\n    <paramContext.Provider\r\n      value={{\r\n        ...params,\r\n        setParameters: setParameters,\r\n      }}\r\n      // reset={reset}\r\n      // triggerReset={triggerReset}\r\n    >\r\n      <RoundCtxProvider>{props.children}</RoundCtxProvider>\r\n    </paramContext.Provider>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport paramContext from \"../../../utils/store/paramsContext\";\r\nimport roundContext from \"../../../utils/store/roundContext\";\r\nimport levels from \"../../../utils/store/initialState/paramLevels\";\r\nimport styles from \"../NavDropdown/NavDropdown.module.css\";\r\n// import styles from \"./GameOptionsMenu.module.css\";\r\n\r\nconst GameOptionsMenu = (props) => {\r\n  const gameLevels = [\"beginner\", \"intermediate\", \"expert\"];\r\n  const paramCtx = useContext(paramContext);\r\n  const roundCtx = useContext(roundContext);\r\n\r\n  const handleSelect = (lvl) => {\r\n    props.dismiss();\r\n    paramCtx.setParameters(levels[lvl]);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    props.dismiss();\r\n    roundCtx.set.reset();\r\n  };\r\n\r\n  return (\r\n    <li className={styles.dropdown_menu_contents}>\r\n      <ul className={styles.dropdown_menu_section}>\r\n        <li onClick={handleReset}>New Game</li>\r\n      </ul>\r\n      <ul className={styles.dropdown_menu_section}>\r\n        {gameLevels.map((lvl) => {\r\n          return (\r\n            <li\r\n              key={`level-${lvl}`}\r\n              onClick={() => handleSelect(lvl)}\r\n              className={paramCtx.level === lvl ? styles.selected : null}\r\n            >\r\n              {lvl.charAt(0).toUpperCase() + lvl.slice(1)}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default GameOptionsMenu;\r\n","import styles from \"./NavDropdown.module.css\";\r\nimport GameOptionsMenu from \"../GameOptionsMenu/GameOptionsMenu\";\r\n\r\nconst NavDropdown = (props) => {\r\n  return (\r\n    <ul className={styles.dropdown_menu}>\r\n      <div\r\n        className={styles.dropdown_menu__overlay}\r\n        onClick={props.dismiss}\r\n      ></div>\r\n      {props.which === \"Game\" ? <GameOptionsMenu dismiss={props.dismiss} /> : null}\r\n      {props.which === \"Help\" ? null : null}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavDropdown;\r\n","import { useState } from \"react\";\r\nimport NavDropdown from \"../NavDropdown/NavDropdown\";\r\nimport styles from \"./NavButton.module.css\";\r\n\r\nconst NavButton = (props) => {\r\n  const [dropdown, setDropDown] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setDropDown((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <li className={styles.dropdown_wrapper}>\r\n      <button className={styles.dropdown_choice} onClick={handleClick}>\r\n        {props.buttonText}\r\n      </button>\r\n      {dropdown ? (\r\n        <NavDropdown which={props.buttonText} dismiss={handleClick} />\r\n      ) : null}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavButton;\r\n","import NavButton from \"../../Menu/NavButton/NavButton\";\r\n\r\nimport styles from \"./Nav.module.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <header className={styles.page_nav}>\r\n      <section className={styles.menu_bar}>\r\n        <span className={styles.menu_bar__left}>\r\n          {String.fromCharCode(\"0xD83D\", \"0xDC1C\")}\r\n          <span className={styles.game_title}>Antsweeper</span>\r\n        </span>\r\n        <span className={`${styles.menu_bar__right} ${styles.wc_box}`} disabled>\r\n          <button className={styles.wc_minimize}></button>\r\n          <button className={styles.wc_maximize}></button>\r\n          <button className={styles.wc_close}></button>\r\n        </span>\r\n      </section>\r\n      <nav>\r\n        <ul className={styles.dropdown_menu}>\r\n          <NavButton buttonText={\"Game\"} />\r\n          <NavButton buttonText={\"Help\"} />\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","//img directories\r\nexport const squares = {\r\n    unclicked: \"\",\r\n    clicked: \"\",\r\n    ant: [\"0xD83D\", \"0xDC1C\"],\r\n    flag: [\"0xD83D\", \"0xDEA9\"],\r\n}\r\n\r\nexport const faces = {\r\n    sleeping: [\"0xD83D\", \"0xDE34\"],\r\n    smiling: [\"0xD83D\", \"0xDE0A\"],\r\n    yelling: [\"0xD83D\", \"0xDE31\"],\r\n    upsideDown: [\"0xD83D\", \"0xDE43\"],\r\n    exploded: [\"0xD83E\", \"0xDD2F\"],\r\n    shades: [\"0xD83D\", \"0xDE0E\"],\r\n    xEyes: [\"0xD83D\", \"0xDE35\"],\r\n    sweating: [\"0xD83D\", \"0xDE13\"],\r\n    winking: [\"0xD83D\", \"0xDE09\"]\r\n}","import { faces } from \"../logic/icons\";\r\n\r\nconst boardReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"RESET_BOARD\":\r\n        console.log(\"BOARD REDUCER reset board\")\r\n      return { ...action.payload };\r\n    case \"CLEAR_BOARD\":\r\n        console.log(\"BOARD REDUCER clear board\")\r\n      return { ...state, board: [] };\r\n    case \"UNCOVER_BOARD\":\r\n        console.log(\"BOARD REDUCER uncover board\")\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        face: faces.smiling,\r\n      };\r\n    case \"SET_ANTS\":\r\n        console.log(\"BOARD REDUCER set ants\")\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        face: faces.smiling,\r\n      };\r\n    case \"UPDATE_BOARD\":\r\n        console.log(\"BOARD REDUCER update board\")\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"SET_FACE\":\r\n        console.log(\"BOARD REDUCER set face\")\r\n      return {\r\n        ...state,\r\n        face: action.payload,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","import { faces } from '../../logic/icons';\r\n\r\nconst getInitialBoard = (paramContextOBJ) => {\r\n  return {\r\n    board: [],\r\n    level: paramContextOBJ.level,\r\n    parameters: {\r\n      rows: paramContextOBJ.rows,\r\n      cols: paramContextOBJ.cols,\r\n      ants: paramContextOBJ.ants,\r\n      antList: [],\r\n    },\r\n    flags: 0,\r\n    face: faces.sleeping,\r\n  };\r\n};\r\n\r\nexport default getInitialBoard;\r\n","import styles from \"./FaceButton.module.css\";\r\n\r\nconst FaceButton = (props) => {\r\n//   const clickHandler = () => {\r\n    // currentFace = [\"0xD83D, 0xDE31\"];\r\n    // props.startGame();\r\n//   };\r\n  return (\r\n    <button\r\n      className={`windows95 ${styles.control_button}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {String.fromCharCode(props.face[0], props.face[1])}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FaceButton;\r\n","//the Fisher-Yates shuffle\r\nexport const shuffle = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const assessDigit = (string, num) => {\r\n  return string + \"_\" + num.toString();\r\n};\r\n","import { assessDigit } from '../../../utils/logic/helpers'\r\nimport styles from \"./CalcScreen.module.css\";\r\n\r\n\r\nconst CalcScreen = (props) => {\r\n  let displayNum = props.display.toString().padStart(3, \"0\").split(\"\");\r\n\r\n  if (!displayNum || (displayNum === \"off\")) {\r\n    displayNum = [\"8\", \"8\", \"8\"];\r\n  }\r\n  \r\n  return (\r\n    <section className={styles.calc_screen} id={props.id}>\r\n      {displayNum.map((digit, digitIdx) => (\r\n        <div\r\n          key={`${props.id}-digit-${digitIdx}`}\r\n          className={`${styles.calc_screen__digit} ${styles[assessDigit(\"digit\", digit)]}`}\r\n        >\r\n          <div className={`${styles.num_top} ${styles.digit_half}`}></div>\r\n          <div className={`${styles.num_bottom} ${styles.digit_half}`}></div>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CalcScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport FaceButton from \"../FaceButton/FaceButton\";\r\nimport CalcScreen from \"../CalcScreen/CalcScreen\";\r\nimport styles from \"./Controls.module.css\";\r\n\r\nconst Controls = (props) => {\r\n  const [clock, setClock] = useState(\"off\");\r\n  const [clockStarted, setClockStarted] = useState(props.firstClick);\r\n\r\n  const startGameHandler = () => {\r\n    setClock(0);\r\n    // setClockStarted(true);\r\n    props.startGame();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.firstClick && !clockStarted) {\r\n      setClockStarted(true);\r\n    }\r\n    if (!props.firstClick && clockStarted) {\r\n      setClockStarted(false)\r\n    }\r\n    return () => {\r\n    };\r\n  }, [props.firstClick, clockStarted]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (clockStarted && props.inProgress && props.firstClick) {\r\n      timer = setInterval(() => {\r\n        if (clock < 1000) {\r\n          setClock((prevTime) => prevTime + 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n    if (!props.inProgress) {\r\n      clearInterval(timer);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [clock, clockStarted, props.firstClick, props.inProgress]);\r\n\r\n  return (\r\n    <nav className={styles.board_controls}>\r\n      <div className={styles.calc_screen__wrapper}>\r\n        <CalcScreen\r\n          id={\"flags\"}\r\n          display={props.inProgress || clockStarted ? props.flags : \"off\"}\r\n        />\r\n      </div>\r\n      <div className={styles.face_button__wrapper}>\r\n        <FaceButton onClick={startGameHandler} face={props.face} />\r\n      </div>\r\n      <div className={styles.calc_screen__wrapper}>\r\n        <CalcScreen\r\n          id={\"timer\"}\r\n          display={props.inProgress || clockStarted ? clock : \"off\"}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import { squares, faces } from \"./icons\";\r\n\r\n// returns { which: \"left\"/\"right\", face : \"[face code]\"}\r\nexport const squareHandler = {\r\n  squareResponse: (whichClick, whichFace) => {\r\n    return { which: whichClick, face: whichFace };\r\n  },\r\n  touchStart: (flagged) => {\r\n    if (flagged) {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.winking);\r\n    } else {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.yelling);\r\n    }\r\n  },\r\n  touchEnd: (count) => {\r\n    console.log(\"touch end count is \" + count);\r\n    //since touchStart doesn't put the face back on :D like mouseDown does\r\n    //touchEnd has to do it!\r\n    if (count > 0) {\r\n      return squareHandler.squareResponse(\"right\", faces.smiling);\r\n    } else {\r\n      return squareHandler.squareResponse(\"left\", faces.smiling);\r\n    }\r\n  },\r\n  mouseDown: (whichNum, squareProps) => {\r\n    if (whichNum === 1) {\r\n      //left click\r\n      if (squareProps.flagged) {\r\n        return squareHandler.squareResponse(\"left\", faces.winking);\r\n      } else {\r\n        //yell until mouse release\r\n        return squareHandler.squareResponse(\"left\", faces.yelling);\r\n      }\r\n    } else {\r\n      if (squareProps.flagged) {\r\n        //removing flag\r\n        return squareHandler.squareResponse(\"right\", faces.sweating);\r\n      } else {\r\n        //flag placement\r\n        return squareHandler.squareResponse(\"right\", faces.smiling);\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n//returns { square: {updated square}, face: [face code] }\r\nexport const boardHandler = {\r\n  routeClick: (clickedSquare, whichClick, remFlags) => {\r\n    if (whichClick === \"left\") {\r\n      return boardHandler.leftClick(clickedSquare, remFlags);\r\n    } else if (whichClick === \"right\") {\r\n      return boardHandler.rightClick(clickedSquare, remFlags);\r\n    }\r\n  },\r\n  leftClick: (sq, remFlags) => {\r\n    if (sq.flagged || sq.revealed) {\r\n      return { square: sq, face: faces.smiling };\r\n    } else {\r\n      if (sq.ant) {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: squares.ant,\r\n            revealed: true,\r\n          },\r\n          face: faces.exploded,\r\n          flags: remFlags,\r\n        };\r\n      } else {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n            revealed: true,\r\n          },\r\n          face: faces.smiling,\r\n          flags: remFlags,\r\n        };\r\n      }\r\n    }\r\n  },\r\n  rightClick: (sq, remFlags) => {\r\n    //removing a flag\r\n    if (sq.flagged) {\r\n      return {\r\n        square: {\r\n          ...sq,\r\n          display: squares.unclicked,\r\n          revealed: false,\r\n          flagged: false,\r\n        },\r\n        face: faces.smiling,\r\n        flags: remFlags + 1,\r\n      };\r\n    } else {\r\n      if (remFlags > 0) {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: squares.flag,\r\n            revealed: false,\r\n            flagged: true,\r\n          },\r\n          face: faces.smiling,\r\n          flags: remFlags - 1,\r\n        };\r\n      } else {\r\n        //player can't place more flags than ants\r\n        return {\r\n          square: { ...sq },\r\n          face: faces.smiling,\r\n          flags: remFlags,\r\n        };\r\n      }\r\n    }\r\n  },\r\n};\r\n","import { useRef /*, useEffect*/ } from \"react\";\r\nimport { assessDigit } from \"../../../utils/logic/helpers\";\r\nimport { squareHandler } from \"../../../utils/logic/read\";\r\nimport styles from \"./Square.module.css\";\r\n\r\n//declared outside of the component in case it might rerender & reset to default\r\n//don't need it in state because state triggers a UI change (rerender)\r\nlet wasClicked = false;\r\nlet clickType = \"left\";\r\nlet wasTouched = false;\r\nlet touchLength = 0;\r\n\r\nfunction Square(props) {\r\n  const countRef = useRef();\r\n\r\n  const reset = () => {\r\n    wasClicked = false;\r\n    clickType = \"left\";\r\n    wasTouched = false;\r\n    touchLength = 0;\r\n  };\r\n\r\n  const parseClick = (event, eventString) => {\r\n    //restore defaults real quick for people playing multiple games\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    if (\r\n      wasTouched ||\r\n      props.sq.revealed ||\r\n      (props.sq.flagged && event.nativeEvent.which === 1)\r\n    ) {\r\n      //do nothing if user is mobile, if square is already revealed,\r\n      //or if flagged and this is a left click\r\n      return;\r\n    } else if (eventString === \"down\") {\r\n      wasClicked = true;\r\n      // console.log(\"mouse down on \" + props.id);\r\n      //returns which: left or right click\r\n      //and face: what the face button should be (just :o since this is mousedown, not up)\r\n      let downResult = squareHandler.mouseDown(event.nativeEvent.which, props);\r\n      clickType = downResult.which;\r\n      props.changeFace(downResult.face);\r\n    } else if (eventString === \"up\") {\r\n      // console.log(\"mouse up on \" + props.id);\r\n      if (!wasTouched) {\r\n        updateSquare(clickType);\r\n      }\r\n    }\r\n  };\r\n\r\n  const parseTouch = (eventString) => {\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    //prevents a \"double click\" with touch firing and then mouse click firing\r\n    if (props.gameOver || wasClicked || props.sq.revealed) {\r\n      //do nothing if game is over, if user is mobile, or if square is already revealed\r\n      return;\r\n    } else if (eventString === \"start\") {\r\n      wasTouched = true;\r\n      // console.log(\"touch started on \" + props.id);\r\n      props.changeFace(squareHandler.touchStart(props.sq.flagged).face);\r\n      countRef.current = setInterval(() => {\r\n        touchLength++;\r\n        // console.log(touchLength);\r\n      }, 800);\r\n    } else if (eventString === \"end\") {\r\n      // console.log(\"touch ended on \" + props.id);\r\n      //stops timer\r\n      clearInterval(countRef.current);\r\n      //returns which: left or right click\r\n      let endResult = squareHandler.touchEnd(touchLength);\r\n      //\"left clicks\" shouldn't impact a flagged square\r\n      if (props.sq.flagged && endResult.which === \"left\") {\r\n        props.changeFace(endResult.face); //flagged squares don't get processed by Board\r\n        return;\r\n      } else {\r\n        updateSquare(endResult.which);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateSquare = (leftOrRight) => {\r\n    //reset defaults for this square, but not wasClicked/wasTouched\r\n    //because that should stay the same across the game\r\n    clickType = \"left\";\r\n    touchLength = 0;\r\n    props.onClick(props.sq.row, props.sq.col, leftOrRight);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`\r\n        windows95 \r\n        ${styles.grid_square} \r\n        ${props.sq.revealed && styles.clicked_square} \r\n        ${styles[assessDigit(\"nearbys\", props.sq.nearbyAnts)]}\r\n        ${(props.sq.revealed && props.sq.ant && !props.sq.unclickedAnt) && styles.first_ant} \r\n      `}\r\n      onMouseDown={(e) => parseClick(e, \"down\")}\r\n      onMouseUp={!wasTouched ? (e) => parseClick(e, \"up\") : undefined}\r\n      onTouchStart={() => parseTouch(\"start\")}\r\n      onTouchEnd={!wasClicked ? () => parseTouch(\"end\") : undefined}\r\n      onContextMenu={(e) => e.preventDefault()}\r\n    >\r\n      {Array.isArray(props.sq.display)\r\n        ? String.fromCharCode(props.sq.display[0], props.sq.display[1])\r\n        : props.sq.display}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import Square from \"../Square/Square\";\r\nimport styles from \"./SquaresWrapper.module.css\";\r\n\r\nconst SquaresWrapper = (props) => {\r\n  return props.boardGrid.map((row, index) => (\r\n    <div className={styles.board_row} key={`row-${index}`}>\r\n      {row.map((square) => (\r\n        <Square\r\n          key={square.key}\r\n          id={square.key}\r\n          sq={square}\r\n          onClick={props.handleSquareClick}\r\n          changeFace={props.setFace}\r\n          gameOver={!props.gameInProgress}\r\n        />\r\n      ))}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default SquaresWrapper;\r\n","import { squares } from \"../icons\";\r\n\r\n//define what each \"square\" should start out with in Board state\r\nconst buildSquare = (row, col) => {\r\n  return {\r\n    key: \"cell-\" + row + \"-\" + col,\r\n    row: row,\r\n    col: col,\r\n    ant: false,\r\n    revealed: false,\r\n    display: squares.unclicked,\r\n    flagged: false,\r\n    nearbyAnts: 0,\r\n    neighbors: [],\r\n  };\r\n};\r\n\r\n//make an array of arrays of \"squares\"\r\nconst buildBlankBoard = (rows, cols) => {\r\n  return Array.from(Array(rows), (row, rowIndex) => {\r\n    return Array.from(Array(cols), (col, colIndex) =>\r\n      buildSquare(rowIndex, colIndex)\r\n    );\r\n  });\r\n};\r\n\r\nexport default buildBlankBoard;\r\n","//takes an array and an index and returns\r\n//[the value of the index before, the specified index, and the next index]\r\n//or null if there is no index before or after\r\n// (sort of like array.slice but replacing a non-existent or negative index with null)\r\nconst buildRow = (row, myIndex) => {\r\n  return [\r\n    myIndex - 1 >= 0 ? row[myIndex - 1] : null,\r\n    row[myIndex],\r\n    myIndex + 1 < row.length ? row[myIndex + 1] : null,\r\n  ];\r\n};\r\n\r\n//takes an array of arrays and specified \"row\" and \"col\" indeces\r\n//and returns an array of nine values: essentially the value of the specified \"cell\"\r\n//and the values of all the cells that \"touch\" it in the \"grid\"\r\nexport const buildNeighborhood = (wholeBoard, thisRow, thisCol) => {\r\n  let rowAbove =\r\n    thisRow - 1 >= 0\r\n      ? buildRow(wholeBoard[thisRow - 1], thisCol)\r\n      : [null, null, null];\r\n  let myRow = buildRow(wholeBoard[thisRow], thisCol);\r\n  let rowBelow =\r\n    thisRow + 1 < wholeBoard.length\r\n      ? buildRow(wholeBoard[thisRow + 1], thisCol)\r\n      : [null, null, null];\r\n  return rowAbove.concat(myRow, rowBelow);\r\n};\r\n\r\nexport default buildNeighborhood;\r\n","import { shuffle } from \"../helpers\";\r\nimport buildNeighborhood from \"./buildNeighborhood\";\r\n\r\n//make an array of true bools\r\n//with falses equal to the number of ants shuffled in\r\nconst buildAnthill = (length, ants) => {\r\n  let starterArray = Array.from(Array(length), (square, idx) => {\r\n    return { id: idx + 1, ant: false };\r\n  });\r\n  for (let i = 0; i < ants; i++) {\r\n    starterArray[i].ant = true;\r\n  }\r\n  return shuffle(starterArray);\r\n};\r\n\r\n//spread ants randomly through new board\r\nconst assignAnts = (boardState) => {\r\n  let boardArea = boardState.parameters.rows * boardState.parameters.cols;\r\n  let antArray = buildAnthill(boardArea, boardState.parameters.ants);\r\n  let counter = boardArea - 1;\r\n  let antMasterlist = [];\r\n  boardState.board.forEach((row) => {\r\n    row.forEach((cell) => {\r\n      cell.ant = antArray[counter].ant;\r\n      counter--;\r\n      if (cell.ant) {\r\n        antMasterlist.push(cell.key);\r\n      }\r\n    });\r\n  });\r\n\r\n  return [boardState.board, antMasterlist];\r\n};\r\n\r\n//count adjacent ants\r\n//and keep track of which all adjacent squares\r\nconst findNeighbors = (board) => {\r\n  board.forEach((row, thisRow) => {\r\n    row.forEach((cell, thisCol) => {\r\n      let numAnts = 0;\r\n      let neighborhood = buildNeighborhood(board, thisRow, thisCol);\r\n      neighborhood.forEach((square) => {\r\n        if (square && square.ant) {\r\n          numAnts++;\r\n        }\r\n      });\r\n      cell.nearbyAnts = numAnts;\r\n      cell.neighbors = neighborhood.filter((el) => el !== null);\r\n    });\r\n  });\r\n  return board;\r\n};\r\n\r\nconst antInFirstClick = (antList, reservedNeighborhood) => {\r\n  let foundMatch = false;\r\n  reservedNeighborhood.forEach((sq) => {\r\n    if (sq !== null && antList.some((el) => el === sq.key)) {\r\n      foundMatch = true;\r\n    }\r\n  });\r\n  return foundMatch;\r\n};\r\n\r\nconst addAnts = (boardState, reservedNeighborhood) => {\r\n  let newBoard = boardState.board;\r\n  let antList = [];\r\n  do {\r\n    [newBoard, antList] = assignAnts(boardState);\r\n  } while (antInFirstClick(antList, reservedNeighborhood));\r\n  return [findNeighbors(newBoard), antList];\r\n};\r\n\r\nexport default addAnts;\r\n","import { squares } from \"./icons\";\r\n\r\nexport const uncoverNeighbors = (startingSquare, board) => {\r\n  //assumes a nearbyAnts === 0 starting square\r\n  let updatedBoard = board;\r\n  startingSquare.neighbors.forEach((sq) => {\r\n    if (!board[sq.row][sq.col].revealed) {\r\n      board[sq.row][sq.col] = {\r\n        ...sq,\r\n        revealed: true,\r\n        display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n      };\r\n      if (sq.nearbyAnts === 0) {\r\n        board = recursiveUncover(sq, board);\r\n      }\r\n    }\r\n  });\r\n  return updatedBoard;\r\n};\r\n\r\nexport const recursiveUncover = (centerSquare, board) => {\r\n  centerSquare.neighbors.forEach((sq) => {\r\n    if (!board[sq.row][sq.col].revealed) {\r\n      board[sq.row][sq.col] = {\r\n        ...sq,\r\n        revealed: true,\r\n        display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n      };\r\n      if (sq.nearbyAnts === 0) {\r\n        board = recursiveUncover(sq, board);\r\n      }\r\n    }\r\n  });\r\n  return board;\r\n};\r\n\r\nexport const checkForWin = (board, gameParams) => {\r\n  let unclickedSafe = gameParams.rows * gameParams.cols - gameParams.ants;\r\n  board.forEach((row, rowIndex) => {\r\n    board.forEach((col, colIndex) => {\r\n      if (\r\n        !board[rowIndex][colIndex].ant &&\r\n        board[rowIndex][colIndex].revealed\r\n      ) {\r\n        unclickedSafe--;\r\n      }\r\n    });\r\n  });\r\n  if (unclickedSafe === 0) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const detonateAnts = (board, allAnts) => {\r\n  board.forEach((row, rowIndex) => {\r\n    board.forEach((col, colIndex) => {\r\n      if (\r\n        (allAnts.indexOf(board[rowIndex][colIndex].key) !== -1) &&\r\n        !board[rowIndex][colIndex].revealed &&\r\n        !board[rowIndex][colIndex].flagged\r\n      ) {\r\n        board[rowIndex][colIndex] = {\r\n          ...board[rowIndex][colIndex],\r\n          display: squares.ant,\r\n          revealed: true,\r\n          unclickedAnt: true,\r\n        };\r\n      }\r\n    });\r\n  });\r\n  return board;\r\n};\r\n","import { useCallback, useContext, useEffect, useReducer } from \"react\";\r\n\r\nimport paramsContext from \"../../../utils/store/paramsContext\";\r\nimport boardReducer from \"../../../utils/reducers/boardReducer\";\r\nimport getInitialBoard from \"../../../utils/store/initialState/board\";\r\n\r\nimport Controls from \"../Controls/Controls\";\r\nimport SquaresWrapper from \"../SquaresWrapper/SquaresWrapper\";\r\n\r\nimport { faces } from \"../../../utils/logic/icons\";\r\nimport buildBlankBoard from \"../../../utils/logic/setup/buildBlankBoard\";\r\nimport buildNeighborhood from \"../../../utils/logic/setup/buildNeighborhood\";\r\nimport addAnts from \"../../../utils/logic/setup/addAnts\";\r\n\r\nimport { boardHandler } from \"../../../utils/logic/read\";\r\nimport {\r\n  uncoverNeighbors,\r\n  checkForWin,\r\n  detonateAnts,\r\n} from \"../../../utils/logic/update\";\r\n\r\nimport styles from \"./Board.module.css\";\r\nimport roundContext from \"../../../utils/store/roundContext\";\r\n\r\nconst Board = () => {\r\n  const paramCtx = useContext(paramsContext);\r\n  const roundCtx = useContext(roundContext);\r\n\r\n  const [boardState, dispatchBoard] = useReducer(\r\n    boardReducer,\r\n    getInitialBoard(paramCtx)\r\n  );\r\n\r\n  const restartRound = useCallback(() => {\r\n    dispatchBoard({\r\n      type: \"RESET_BOARD\",\r\n      payload: getInitialBoard(paramCtx),\r\n    });\r\n    roundCtx.set.reset();\r\n  }, [paramCtx, roundCtx.set]);\r\n\r\n  const onStart = () => {\r\n    //let happy onStart face restart a game in progress\r\n    if (roundCtx.started) {\r\n      restartRound();\r\n    }\r\n    //clear out previous round (if applicable)\r\n    dispatchBoard({ type: \"CLEAR_BOARD\" });\r\n    //fills out the board with uncovered squares, but no ants yet\r\n    dispatchBoard({\r\n      type: \"UNCOVER_BOARD\",\r\n      payload: {\r\n        board: buildBlankBoard(\r\n          boardState.parameters.rows,\r\n          boardState.parameters.cols\r\n        ),\r\n        parameters: { ...boardState.parameters },\r\n        flags: boardState.parameters.ants,\r\n      },\r\n    });\r\n    roundCtx.set.ready();\r\n  };\r\n\r\n  const handleSquareClick = useCallback(\r\n    (rowIndex, colIndex, whichClick) => {\r\n      //first click\r\n      if (!roundCtx.started) {\r\n        let clickedNeighborhood = buildNeighborhood(\r\n          boardState.board,\r\n          rowIndex,\r\n          colIndex\r\n        );\r\n        let [boardWithAnts, antList] = addAnts(boardState, clickedNeighborhood);\r\n        dispatchBoard({\r\n          type: \"SET_ANTS\",\r\n          payload: {\r\n            board: boardWithAnts,\r\n            parameters: {\r\n              ...boardState.parameters,\r\n              antList: antList,\r\n            },\r\n          },\r\n        });\r\n        roundCtx.set.start();\r\n      }\r\n\r\n      let updateGrid = [...boardState.board];\r\n      let clickedSquare = boardState.board[rowIndex][colIndex];\r\n      // console.log(\"handling a \" + whichClick + \" click for:\");\r\n      // console.log(clickedSquare);\r\n      let updateAction = boardHandler.routeClick(\r\n        clickedSquare,\r\n        whichClick,\r\n        boardState.flags\r\n      );\r\n      updateGrid[rowIndex][colIndex] = updateAction.square;\r\n      if (updateAction.square.revealed) {\r\n        //if an ant was uncovered\r\n        if (updateAction.square.ant) {\r\n          roundCtx.set.lost();\r\n          updateGrid = detonateAnts(updateGrid, boardState.parameters.antList);\r\n        }\r\n        //if the last non-ant was uncovered\r\n        if (\r\n          checkForWin(updateGrid, boardState.parameters) &&\r\n          !updateAction.square.ant\r\n        ) {\r\n          updateAction.face = faces.shades;\r\n          roundCtx.set.won();\r\n        }\r\n        //if a square with no nearby ants was uncovered\r\n        if (updateAction.square.nearbyAnts === 0) {\r\n          updateGrid = uncoverNeighbors(updateAction.square, updateGrid);\r\n        }\r\n      }\r\n      dispatchBoard({\r\n        type: \"UPDATE_BOARD\",\r\n        payload: {\r\n          board: updateGrid,\r\n          face: updateAction.face,\r\n          flags: updateAction.flags,\r\n        },\r\n      });\r\n    },\r\n    [boardState, roundCtx]\r\n  );\r\n\r\n  const handleFaceChange = (newFace) => {\r\n    dispatchBoard({ type: \"SET_FACE\", payload: newFace });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //reset board if the level has changed or if the round shouldn't be started\r\n    if (\r\n      paramCtx.level !== boardState.level ||\r\n      (!roundCtx.ready && !roundCtx.started && boardState.board.length > 0)\r\n    ) {\r\n      restartRound();\r\n    }\r\n  }, [paramCtx.level, boardState.level, boardState.board, roundCtx, restartRound]);\r\n  return (\r\n    <section className={styles.window__inner}>\r\n      <div className={styles.board__outer}>\r\n        <Controls\r\n          startGame={onStart}\r\n          inProgress={roundCtx.ready}\r\n          face={boardState.face}\r\n          flags={boardState.flags}\r\n          firstClick={roundCtx.started}\r\n        />\r\n        <section className={`${styles.board__inner} ${styles[paramCtx.level]}`}>\r\n          {boardState.board ? (\r\n            <SquaresWrapper\r\n              boardGrid={boardState.board}\r\n              handleSquareClick={handleSquareClick}\r\n              setFace={handleFaceChange}\r\n              gameInProgress={roundCtx.ready}\r\n            />\r\n          ) : null}\r\n        </section>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import { useContext } from \"react\";\r\nimport paramContext from \"../../../utils/store/paramsContext\";\r\n\r\nimport Nav from \"../Nav/Nav\";\r\nimport Board from \"../../Game/Board/Board\";\r\nimport styles from \"./Window.module.css\";\r\n\r\nconst Window = () => {\r\n  const paramCtx = useContext(paramContext);\r\n\r\n  return (\r\n    <main className={`windows95 ${styles.main_window} ${styles[paramCtx.level]}`}>\r\n      <Nav />\r\n      <Board />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Window;\r\n","import styles from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={`windows95 ${styles.windows_footer}`}>\r\n      <span></span>\r\n      <span></span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Window from './Components/Background/Window/Window';\r\nimport Footer from './Components/Background/Footer/Footer';\r\n\r\nimport styles from './App.module.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={styles.App}>\r\n      <Window />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { ParamCtxProvider } from \"./utils/store/paramsContext\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ParamCtxProvider>\r\n        <App />\r\n    </ParamCtxProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}