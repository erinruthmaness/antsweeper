{"version":3,"sources":["Components/Background/Nav/Nav.module.css","Components/Game/CalcScreen/CalcScreen.module.css","Components/Game/Controls/Controls.module.css","Components/Game/Square/Square.module.css","Components/Game/Board/Board.module.css","Components/Game/FaceButton/FaceButton.module.css","Components/Game/SquaresWrapper/SquaresWrapper.module.css","Components/Background/Window/Window.module.css","Components/Background/Footer/Footer.module.css","App.module.css","Components/Background/Nav/Nav.js","Components/Game/FaceButton/FaceButton.js","Components/Game/utils/helpers.js","Components/Game/CalcScreen/CalcScreen.js","Components/Game/Controls/Controls.js","Components/Game/utils/icons.js","Components/Game/utils/read.js","Components/Game/Square/Square.js","Components/Game/SquaresWrapper/SquaresWrapper.js","Components/Game/utils/create.js","Components/Game/utils/update.js","Components/Game/Board/Board.js","Components/Background/Window/Window.js","Components/Background/Footer/Footer.js","App.js","index.js"],"names":["module","exports","Nav","className","styles","page_nav","menu_bar","menu_bar__left","String","fromCharCode","game_title","menu_bar__right","wc_box","disabled","wc_minimize","wc_maximize","wc_close","dropdown_menu","dropdown_choice","FaceButton","props","control_button","onClick","face","buildRow","row","myIndex","length","assessDigit","string","num","toString","CalcScreen","displayNum","display","padStart","split","calc_screen","id","map","digit","digitIdx","calc_screen__digit","num_top","digit_half","num_bottom","Controls","board_controls","calc_screen__wrapper","inProgress","flags","face_button__wrapper","startGame","squares","unclicked","clicked","ant","flag","faces","sleeping","smiling","yelling","upsideDown","exploded","shades","xEyes","sweating","winking","squareHandler","squareResponse","whichClick","whichFace","which","touchStart","flagged","touchEnd","count","console","log","mouseDown","whichNum","squareProps","boardHandler","routeClick","clickedSquare","remFlags","leftClick","rightClick","sq","revealed","square","nearbyAnts","wasClicked","clickType","wasTouched","touchLength","Square","countRef","useRef","reset","parseClick","event","eventString","gameOver","nativeEvent","downResult","changeFace","updateSquare","parseTouch","current","setInterval","clearInterval","endResult","leftOrRight","col","grid_square","clicked_square","unclickedAnt","first_ant","onMouseDown","e","onMouseUp","undefined","onTouchStart","onTouchEnd","onContextMenu","preventDefault","Array","isArray","SquaresWrapper","boardGrid","index","board_row","key","handleSquareClick","setFace","gameInProgress","buildBlankBoard","rows","cols","from","rowIndex","colIndex","neighbors","buildSquare","buildAnthill","ants","starterArray","idx","i","array","j","Math","floor","random","shuffle","findNeighbors","board","forEach","thisRow","cell","thisCol","numAnts","neighborhood","wholeBoard","rowAbove","myRow","rowBelow","concat","buildNeighborhood","filter","el","boardBuilder","initBoard","cellCount","antArray","counter","antMasterlist","push","assignAnts","newGame","allAnts","finalizedBoard","recursiveUncover","centerSquare","Board","useState","setBoardGrid","setGameInProgress","antList","gameParams","setGameParams","setFlags","useCallback","updateGrid","updateAction","indexOf","unclickedSafe","checkForWin","startingSquare","updatedBoard","uncoverNeighbors","window__inner","board__outer","board__inner","Window","main_window","Footer","windows_footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4182102a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_nav\":\"Nav_page_nav__vDmiy\",\"menu_bar\":\"Nav_menu_bar__1GFe8\",\"menu_bar__left\":\"Nav_menu_bar__left__2-N_-\",\"game_title\":\"Nav_game_title__1jH2S\",\"menu_bar__right\":\"Nav_menu_bar__right__1h9Yg\",\"windows95_button\":\"Nav_windows95_button__1EptJ\",\"wc_box\":\"Nav_wc_box__1UbMO\",\"wc_minimize\":\"Nav_wc_minimize__3_MRO\",\"wc_maximize\":\"Nav_wc_maximize__229wl\",\"wc_close\":\"Nav_wc_close__2orTD\",\"dropdown_menu\":\"Nav_dropdown_menu__FWZOg\",\"dropdown_choice\":\"Nav_dropdown_choice__1O6zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calc_screen\":\"CalcScreen_calc_screen__3tjOL\",\"calc_screen__digit\":\"CalcScreen_calc_screen__digit__pVuWc\",\"digit_half\":\"CalcScreen_digit_half__tHRsU\",\"digit_0\":\"CalcScreen_digit_0__1B8dK\",\"num_top\":\"CalcScreen_num_top__1L84O\",\"num_bottom\":\"CalcScreen_num_bottom__1Ml-A\",\"digit_4\":\"CalcScreen_digit_4__1Ng4d\",\"digit_1\":\"CalcScreen_digit_1__3hmyY\",\"digit_7\":\"CalcScreen_digit_7__fJeE-\",\"digit_2\":\"CalcScreen_digit_2__11c0d\",\"digit_5\":\"CalcScreen_digit_5__3bn83\",\"digit_3\":\"CalcScreen_digit_3__2pnmt\",\"digit_9\":\"CalcScreen_digit_9__EzkXc\",\"digit_6\":\"CalcScreen_digit_6__1tb4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_controls\":\"Controls_board_controls__Ccfad\",\"calc_screen__wrapper\":\"Controls_calc_screen__wrapper__2NflD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_square\":\"Square_grid_square__1bEeJ\",\"clicked_square\":\"Square_clicked_square__3OEAd\",\"nearbys_0\":\"Square_nearbys_0__1NJh8\",\"nearbys_1\":\"Square_nearbys_1__1Gpup\",\"nearbys_2\":\"Square_nearbys_2__3-o0K\",\"nearbys_3\":\"Square_nearbys_3__uldGt\",\"nearbys_4\":\"Square_nearbys_4__3WvpZ\",\"nearbys_5\":\"Square_nearbys_5__qatkp\",\"nearbys_6\":\"Square_nearbys_6__1oNTw\",\"nearbys_7\":\"Square_nearbys_7__dYwup\",\"nearbys_8\":\"Square_nearbys_8__1-T5z\",\"first_ant\":\"Square_first_ant__Ke5RM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window__inner\":\"Board_window__inner__aoiFq\",\"board__outer\":\"Board_board__outer__3tOml\",\"board__inner\":\"Board_board__inner__3wIj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control_button\":\"FaceButton_control_button__1J2Mc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_row\":\"SquaresWrapper_board_row__2C4Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_window\":\"Window_main_window___OveE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"windows_footer\":\"Footer_windows_footer__1_U7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__23Vul\"};","import styles from \"./Nav.module.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <header className={styles.page_nav}>\r\n      <section className={styles.menu_bar}>\r\n        <span className={styles.menu_bar__left}>\r\n          {String.fromCharCode(\"0xD83D\", \"0xDC1C\")}\r\n          <span className={styles.game_title}>Antsweeper</span>\r\n        </span>\r\n        <span className={`${styles.menu_bar__right} ${styles.wc_box}`} disabled>\r\n          <button className={styles.wc_minimize}></button>\r\n          <button className={styles.wc_maximize}></button>\r\n          <button className={styles.wc_close}></button>\r\n        </span>\r\n      </section>\r\n      <section className={styles.dropdown_menu}>\r\n        <button className={styles.dropdown_choice}>Game</button>\r\n        <button className={styles.dropdown_choice}>Help</button>\r\n      </section>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import styles from \"./FaceButton.module.css\";\r\n\r\nconst FaceButton = (props) => {\r\n//   const clickHandler = () => {\r\n    // currentFace = [\"0xD83D, 0xDE31\"];\r\n    // props.startGame();\r\n//   };\r\n  return (\r\n    <button\r\n      className={`windows95 ${styles.control_button}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {String.fromCharCode(props.face[0], props.face[1])}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FaceButton;\r\n","//the Fisher-Yates shuffle\r\nexport const shuffle = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\n//takes an array and an index and returns\r\n//[the value of the index before, the specified index, and the next index]\r\n//or null if there is no index before or after\r\n// (sort of like array.slice but replacing a non-existent or negative index with null)\r\nconst buildRow = (row, myIndex) => {\r\n  return [\r\n    myIndex - 1 >= 0 ? row[myIndex - 1] : null,\r\n    row[myIndex],\r\n    myIndex + 1 < row.length ? row[myIndex + 1] : null,\r\n  ];\r\n};\r\n\r\n//takes an array of arrays and specified \"row\" and \"col\" indeces\r\n//and returns an array of nine values: essentially the value of the specified \"cell\"\r\n//and the values of all the cells that \"touch\" it in the \"grid\"\r\nexport const buildNeighborhood = (wholeBoard, thisRow, thisCol) => {\r\n  let rowAbove =\r\n    thisRow - 1 >= 0\r\n      ? buildRow(wholeBoard[thisRow - 1], thisCol)\r\n      : [null, null, null];\r\n  let myRow = buildRow(wholeBoard[thisRow], thisCol);\r\n  let rowBelow =\r\n    thisRow + 1 < wholeBoard.length\r\n      ? buildRow(wholeBoard[thisRow + 1], thisCol)\r\n      : [null, null, null];\r\n  return rowAbove.concat(myRow, rowBelow);\r\n};\r\n\r\n\r\nexport const assessDigit = (string, num) => {\r\n  return (string + \"_\" + num.toString());\r\n}\r\n","import { assessDigit } from '../utils/helpers'\r\nimport styles from \"./CalcScreen.module.css\";\r\n\r\n\r\nconst CalcScreen = (props) => {\r\n  let displayNum = props.display.toString().padStart(3, \"0\").split(\"\");\r\n\r\n  if (!displayNum || (displayNum === \"off\")) {\r\n    displayNum = [\"8\", \"8\", \"8\"];\r\n  }\r\n  \r\n  return (\r\n    <section className={styles.calc_screen} id={props.id}>\r\n      {displayNum.map((digit, digitIdx) => (\r\n        <div\r\n          key={`${props.id}-digit-${digitIdx}`}\r\n          className={`${styles.calc_screen__digit} ${styles[assessDigit(\"digit\", digit)]}`}\r\n        >\r\n          <div className={`${styles.num_top} ${styles.digit_half}`}></div>\r\n          <div className={`${styles.num_bottom} ${styles.digit_half}`}></div>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CalcScreen;\r\n","import FaceButton from \"../FaceButton/FaceButton\";\r\nimport CalcScreen from \"../CalcScreen/CalcScreen\";\r\nimport styles from \"./Controls.module.css\";\r\nconst Controls = (props) => {\r\n  return (\r\n    <nav className={styles.board_controls}>\r\n      <div className={styles.calc_screen__wrapper}>\r\n        <CalcScreen id={\"flags\"} display={props.inProgress ? props.flags : \"off\"} />\r\n      </div>\r\n      <div className={styles.face_button__wrapper}>\r\n        <FaceButton onClick={props.startGame} face={props.face} />\r\n      </div>\r\n      <div className={styles.calc_screen__wrapper}>\r\n        <CalcScreen id={\"timer\"} display={\"off\"} />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","//img directories\r\nexport const squares = {\r\n    unclicked: \"?\",\r\n    clicked: \"\",\r\n    ant: [\"0xD83D\", \"0xDC1C\"],\r\n    flag: [\"0xD83D\", \"0xDEA9\"],\r\n}\r\n\r\nexport const faces = {\r\n    sleeping: [\"0xD83D\", \"0xDE34\"],\r\n    smiling: [\"0xD83D\", \"0xDE0A\"],\r\n    yelling: [\"0xD83D\", \"0xDE31\"],\r\n    upsideDown: [\"0xD83D\", \"0xDE43\"],\r\n    exploded: [\"0xD83E\", \"0xDD2F\"],\r\n    shades: [\"0xD83D\", \"0xDE0E\"],\r\n    xEyes: [\"0xD83D\", \"0xDE35\"],\r\n    sweating: [\"0xD83D\", \"0xDE13\"],\r\n    winking: [\"0xD83D\", \"0xDE09\"]\r\n}","import { squares, faces } from \"./icons\";\r\n\r\n// returns { which: \"left\"/\"right\", face : \"[face code]\"}\r\nexport const squareHandler = {\r\n  squareResponse: (whichClick, whichFace) => {\r\n    return { which: whichClick, face: whichFace };\r\n  },\r\n  touchStart: (flagged) => {\r\n    if (flagged) {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.winking);\r\n    } else {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.yelling);\r\n    }\r\n  },\r\n  touchEnd: (count) => {\r\n    console.log(\"touch end count is \" + count);\r\n    //since touchStart doesn't put the face back on :D like mouseDown does\r\n    //touchEnd has to do it!\r\n    if (count > 0) {\r\n      return squareHandler.squareResponse(\"right\", faces.smiling);\r\n    } else {\r\n      return squareHandler.squareResponse(\"left\", faces.smiling);\r\n    }\r\n  },\r\n  mouseDown: (whichNum, squareProps) => {\r\n    if (whichNum === 1) {\r\n      //left click\r\n      if (squareProps.flagged) {\r\n        return squareHandler.squareResponse(\"left\", faces.winking);\r\n      } else {\r\n        //yell until mouse release\r\n        return squareHandler.squareResponse(\"left\", faces.yelling);\r\n      }\r\n    } else {\r\n      if (squareProps.flagged) {\r\n        //removing flag\r\n        return squareHandler.squareResponse(\"right\", faces.sweating);\r\n      } else {\r\n        //flag placement\r\n        return squareHandler.squareResponse(\"right\", faces.smiling);\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n//returns { square: {updated square}, face: [face code] }\r\nexport const boardHandler = {\r\n  routeClick: (clickedSquare, whichClick, remFlags) => {\r\n    if (whichClick === \"left\") {\r\n      return boardHandler.leftClick(clickedSquare, remFlags);\r\n    } else if (whichClick === \"right\") {\r\n      return boardHandler.rightClick(clickedSquare, remFlags);\r\n    }\r\n  },\r\n  leftClick: (sq, remFlags) => {\r\n    if (sq.flagged || sq.revealed) {\r\n      return { square: sq, face: faces.smiling };\r\n    } else {\r\n      if (sq.ant) {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: squares.ant,\r\n            revealed: true,\r\n          },\r\n          face: faces.exploded,\r\n          flags: remFlags,\r\n        };\r\n      } else {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n            revealed: true,\r\n          },\r\n          face: faces.smiling,\r\n          flags: remFlags,\r\n        };\r\n      }\r\n    }\r\n  },\r\n  rightClick: (sq, remFlags) => {\r\n    //removing a flag\r\n    if (sq.flagged) {\r\n      return {\r\n        square: {\r\n          ...sq,\r\n          display: squares.unclicked,\r\n          revealed: false,\r\n          flagged: false,\r\n        },\r\n        face: faces.smiling,\r\n        flags: remFlags + 1,\r\n      };\r\n    } else {\r\n      if (remFlags > 0) {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: squares.flag,\r\n            revealed: false,\r\n            flagged: true,\r\n          },\r\n          face: faces.smiling,\r\n          flags: remFlags - 1,\r\n        };\r\n      } else {\r\n        //player can't place more flags than ants\r\n        return {\r\n          square: { ...sq },\r\n          face: faces.smiling,\r\n          flags: remFlags,\r\n        };\r\n      }\r\n    }\r\n  },\r\n};\r\n","import { useRef /*, useEffect*/ } from \"react\";\r\nimport { assessDigit } from \"../utils/helpers\";\r\nimport { squareHandler } from \"../utils/read\";\r\nimport styles from \"./Square.module.css\";\r\n\r\n//declared outside of the component in case it might rerender & reset to default\r\n//don't need it in state because state triggers a UI change (rerender)\r\nlet wasClicked = false;\r\nlet clickType = \"left\";\r\nlet wasTouched = false;\r\nlet touchLength = 0;\r\n\r\nfunction Square(props) {\r\n  const countRef = useRef();\r\n\r\n  const reset = () => {\r\n    wasClicked = false;\r\n    clickType = \"left\";\r\n    wasTouched = false;\r\n    touchLength = 0;\r\n  };\r\n\r\n  const parseClick = (event, eventString) => {\r\n    //restore defaults real quick for people playing multiple games\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    if (\r\n      wasTouched ||\r\n      props.sq.revealed ||\r\n      (props.sq.flagged && event.nativeEvent.which === 1)\r\n    ) {\r\n      //do nothing if user is mobile, if square is already revealed,\r\n      //or if flagged and this is a left click\r\n      return;\r\n    } else if (eventString === \"down\") {\r\n      wasClicked = true;\r\n      console.log(\"mouse down on \" + props.id);\r\n      //returns which: left or right click\r\n      //and face: what the face button should be (just :o since this is mousedown, not up)\r\n      let downResult = squareHandler.mouseDown(event.nativeEvent.which, props);\r\n      clickType = downResult.which;\r\n      props.changeFace(downResult.face);\r\n    } else if (eventString === \"up\") {\r\n      console.log(\"mouse up on \" + props.id);\r\n      if (!wasTouched) {\r\n        updateSquare(clickType);\r\n      }\r\n    }\r\n  };\r\n\r\n  const parseTouch = (eventString) => {\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    //prevents a \"double click\" with touch firing and then mouse click firing\r\n    if (props.gameOver || wasClicked || props.sq.revealed) {\r\n      //do nothing if game is over, if user is mobile, or if square is already revealed\r\n      return;\r\n    } else if (eventString === \"start\") {\r\n      wasTouched = true;\r\n      console.log(\"touch started on \" + props.id);\r\n      props.changeFace(squareHandler.touchStart(props.sq.flagged).face);\r\n      countRef.current = setInterval(() => {\r\n        touchLength++;\r\n        console.log(touchLength);\r\n      }, 800);\r\n    } else if (eventString === \"end\") {\r\n      console.log(\"touch ended on \" + props.id);\r\n      //stops timer\r\n      clearInterval(countRef.current);\r\n      //returns which: left or right click\r\n      let endResult = squareHandler.touchEnd(touchLength);\r\n      //\"left clicks\" shouldn't impact a flagged square\r\n      if (props.sq.flagged && endResult.which === \"left\") {\r\n        props.changeFace(endResult.face); //flagged squares don't get processed by Board\r\n        return;\r\n      } else {\r\n        updateSquare(endResult.which);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateSquare = (leftOrRight) => {\r\n    //reset defaults for this square, but not wasClicked/wasTouched\r\n    //because that should stay the same across the game\r\n    clickType = \"left\";\r\n    touchLength = 0;\r\n    props.onClick(props.sq.row, props.sq.col, leftOrRight);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`\r\n        windows95 \r\n        ${styles.grid_square} \r\n        ${props.sq.revealed && styles.clicked_square} \r\n        ${styles[assessDigit(\"nearbys\", props.sq.nearbyAnts)]}\r\n        ${(props.sq.revealed && props.sq.ant && !props.sq.unclickedAnt) && styles.first_ant} \r\n      `}\r\n      onMouseDown={(e) => parseClick(e, \"down\")}\r\n      onMouseUp={!wasTouched ? (e) => parseClick(e, \"up\") : undefined}\r\n      onTouchStart={() => parseTouch(\"start\")}\r\n      onTouchEnd={!wasClicked ? () => parseTouch(\"end\") : undefined}\r\n      onContextMenu={(e) => e.preventDefault()}\r\n    >\r\n      {Array.isArray(props.sq.display)\r\n        ? String.fromCharCode(props.sq.display[0], props.sq.display[1])\r\n        : props.sq.display}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import Square from \"../Square/Square\";\r\nimport styles from \"./SquaresWrapper.module.css\";\r\n\r\nconst SquaresWrapper = (props) => {\r\n  return props.boardGrid.map((row, index) => (\r\n    <div className={styles.board_row} key={`row-${index}`}>\r\n      {row.map((square) => (\r\n        <Square\r\n          key={square.key}\r\n          id={square.key}\r\n          sq={square}\r\n          onClick={props.handleSquareClick}\r\n          changeFace={props.setFace}\r\n          gameOver={!props.gameInProgress}\r\n        />\r\n      ))}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default SquaresWrapper;\r\n","import { squares } from \"./icons\";\r\nimport { shuffle, buildNeighborhood } from \"./helpers\";\r\n\r\n//define what each \"square\" should start out with in Board state\r\nconst buildSquare = (row, col) => {\r\n  return {\r\n    key: \"cell-\" + row + \"-\" + col,\r\n    row: row,\r\n    col: col,\r\n    ant: false,\r\n    revealed: false,\r\n    display: squares.unclicked,\r\n    flagged: false,\r\n    nearbyAnts: 0,\r\n    neighbors: [],\r\n  };\r\n};\r\n\r\n//make an array of arrays of \"squares\"\r\nconst buildBlankBoard = (rows, cols) => {\r\n  return Array.from(Array(rows), (row, rowIndex) => {\r\n    return Array.from(Array(cols), (col, colIndex) =>\r\n      buildSquare(rowIndex, colIndex)\r\n    );\r\n  });\r\n};\r\n\r\n//make an array of true bools\r\n//with falses equal to the number of ants shuffled in\r\nconst buildAnthill = (length, ants) => {\r\n  let starterArray = Array.from(Array(length), (square, idx) => {\r\n    return { id: idx + 1, ant: false };\r\n  });\r\n  for (let i = 0; i < ants; i++) {\r\n    starterArray[i].ant = true;\r\n  }\r\n  return shuffle(starterArray);\r\n};\r\n\r\n//spread ants randomly through new board\r\nconst assignAnts = (initBoard, cellCount, numAnts) => {\r\n  let antArray = buildAnthill(cellCount, numAnts);\r\n  let counter = cellCount - 1;\r\n  let antMasterlist = [];\r\n  initBoard.forEach((row) => {\r\n    row.forEach((cell) => {\r\n      cell.ant = antArray[counter].ant;\r\n      counter--;\r\n      if (cell.ant) {\r\n        antMasterlist.push(cell.key)\r\n      }\r\n    });\r\n  });\r\n  return [initBoard, antMasterlist];\r\n};\r\n\r\n//count adjacent ants\r\n//and keep track of which all adjacent squares\r\nconst findNeighbors = (board) => {\r\n  board.forEach((row, thisRow) => {\r\n    row.forEach((cell, thisCol) => {\r\n      let numAnts = 0;\r\n      let neighborhood = buildNeighborhood(board, thisRow, thisCol);\r\n      neighborhood.forEach((square) => {\r\n        if (square && square.ant) {\r\n          numAnts++;\r\n        }\r\n      });\r\n      cell.nearbyAnts = numAnts;\r\n      cell.neighbors = neighborhood.filter((el) => el !== null);\r\n    });\r\n  });\r\n  return board;\r\n};\r\n\r\n//called by Board\r\nexport const boardBuilder = ({ rows, cols, ants }) => {\r\n  let starterBoard = buildBlankBoard(rows, cols);\r\n  let [newGame, allAnts] = assignAnts(starterBoard, rows * cols, ants);\r\n  let finalizedBoard = findNeighbors(newGame);\r\n  console.log(finalizedBoard);\r\n  return [finalizedBoard, allAnts];\r\n};\r\n","import { squares } from \"./icons\";\r\n\r\nexport const uncoverNeighbors = (startingSquare, board) => {\r\n  //assumes a nearbyAnts === 0 starting square\r\n  let updatedBoard = board;\r\n  startingSquare.neighbors.forEach((sq) => {\r\n    if (!board[sq.row][sq.col].revealed) {\r\n      board[sq.row][sq.col] = {\r\n        ...sq,\r\n        revealed: true,\r\n        display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n      };\r\n      if (sq.nearbyAnts === 0) {\r\n        board = recursiveUncover(sq, board);\r\n      }\r\n    }\r\n  });\r\n  return updatedBoard;\r\n};\r\n\r\nexport const recursiveUncover = (centerSquare, board) => {\r\n  centerSquare.neighbors.forEach((sq) => {\r\n    if (!board[sq.row][sq.col].revealed) {\r\n      board[sq.row][sq.col] = {\r\n        ...sq,\r\n        revealed: true,\r\n        display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n      };\r\n      if (sq.nearbyAnts === 0) {\r\n        board = recursiveUncover(sq, board);\r\n      }\r\n    }\r\n  });\r\n  return board;\r\n};\r\n\r\nexport const checkForWin = (board, gameParams) => {\r\n  let unclickedSafe = gameParams.rows * gameParams.cols - gameParams.ants;\r\n  board.forEach((row, rowIndex) => {\r\n    board.forEach((col, colIndex) => {\r\n      if (\r\n        !board[rowIndex][colIndex].ant &&\r\n        board[rowIndex][colIndex].revealed\r\n      ) {\r\n        unclickedSafe--;\r\n      }\r\n    });\r\n  });\r\n  if (unclickedSafe === 0) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const detonateAnts = (board, allAnts) => {\r\n  board.forEach((row, rowIndex) => {\r\n    board.forEach((col, colIndex) => {\r\n      if (\r\n        (allAnts.indexOf(board[rowIndex][colIndex].key) !== -1) &&\r\n        !board[rowIndex][colIndex].revealed &&\r\n        !board[rowIndex][colIndex].flagged\r\n      ) {\r\n        board[rowIndex][colIndex] = {\r\n          ...board[rowIndex][colIndex],\r\n          display: squares.ant,\r\n          revealed: true,\r\n          unclickedAnt: true,\r\n        };\r\n      }\r\n    });\r\n  });\r\n  return board;\r\n};\r\n","import { useState, useCallback } from \"react\";\r\n\r\nimport Controls from \"../Controls/Controls\";\r\nimport SquaresWrapper from \"../SquaresWrapper/SquaresWrapper\";\r\n\r\nimport { faces } from \"../utils/icons\";\r\nimport { boardBuilder } from \"../utils/create\";\r\nimport { boardHandler } from \"../utils/read\";\r\nimport { uncoverNeighbors, checkForWin, detonateAnts } from \"../utils/update\";\r\n\r\nimport styles from \"./Board.module.css\";\r\n\r\nconst Board = () => {\r\n  const [boardGrid, setBoardGrid] = useState([]);\r\n  const [gameInProgress, setGameInProgress] = useState(false);\r\n  const [gameParams, setGameParams] = useState({\r\n    rows: 8,\r\n    cols: 8,\r\n    ants: 10,\r\n    antList: [],\r\n  });\r\n  const [face, setFace] = useState(faces.sleeping);\r\n  const [flags, setFlags] = useState(0);\r\n\r\n  const onStart = () => {\r\n    setBoardGrid([]);\r\n    let [board, ants] = boardBuilder(gameParams);\r\n    setBoardGrid(board);\r\n    setGameParams({ ...gameParams, antList: ants });\r\n    setGameInProgress(true);\r\n    setFace(faces.smiling);\r\n    setFlags(gameParams.ants);\r\n  };\r\n\r\n  const handleSquareClick = useCallback(\r\n    (rowIndex, colIndex, whichClick) => {\r\n      let updateGrid = [...boardGrid];\r\n      let clickedSquare = boardGrid[rowIndex][colIndex];\r\n      console.log(\"handling a \" + whichClick + \" click for:\");\r\n      console.log(clickedSquare);\r\n      let updateAction = boardHandler.routeClick(\r\n        clickedSquare,\r\n        whichClick,\r\n        flags\r\n      );\r\n      updateGrid[rowIndex][colIndex] = updateAction.square;\r\n      if (updateAction.square.revealed) {\r\n        //if the first ant was uncovered\r\n        if (updateAction.square.ant) {\r\n          setGameInProgress(false);\r\n          updateGrid = detonateAnts(updateGrid, gameParams.antList);\r\n        }\r\n        //if the last non-ant was uncovered\r\n        if (checkForWin(updateGrid, gameParams) && !updateAction.square.ant) {\r\n          updateAction.face = faces.shades;\r\n          setGameInProgress(false);\r\n        }\r\n        //if a square with no nearby ants was uncovered\r\n        if (updateAction.square.nearbyAnts === 0) {\r\n          updateGrid = uncoverNeighbors(updateAction.square, updateGrid);\r\n        }\r\n      }\r\n      setBoardGrid(updateGrid);\r\n      setFace(updateAction.face);\r\n      setFlags(updateAction.flags);\r\n    },\r\n    [boardGrid, flags, gameParams]\r\n  );\r\n\r\n  return (\r\n    <section className={styles.window__inner}>\r\n      <div className={styles.board__outer}>\r\n        <Controls\r\n          startGame={onStart}\r\n          inProgress={gameInProgress}\r\n          face={face}\r\n          flags={flags}\r\n        />\r\n        <section className={styles.board__inner}>\r\n          {boardGrid ? (\r\n            <SquaresWrapper\r\n              boardGrid={boardGrid}\r\n              handleSquareClick={handleSquareClick}\r\n              setFace={setFace}\r\n              gameInProgress={gameInProgress}\r\n            />\r\n          ) : null}\r\n        </section>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import Nav from \"../Nav/Nav\";\r\nimport Board from \"../../Game/Board/Board\";\r\n\r\nimport styles from \"./Window.module.css\";\r\n\r\nconst Window = () => {\r\n  return (\r\n    <main className={`windows95 ${styles.main_window}`}>\r\n      <Nav />\r\n      <Board />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Window;\r\n","import styles from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={`windows95 ${styles.windows_footer}`}>\r\n      <span></span>\r\n      <span></span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Window from './Components/Background/Window/Window';\nimport Footer from './Components/Background/Footer/Footer';\n\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <Window />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}