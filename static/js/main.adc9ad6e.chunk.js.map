{"version":3,"sources":["Components/Game/CalcScreen/CalcScreen.module.css","Components/WindowHeader/OptionDropdown/OptionDropdown.module.css","Components/Game/Square/Square.module.css","Components/WindowHeader/TitleBar/TitleBar.module.css","Components/WindowHeader/OptionWrapper/OptionWrapper.module.css","Components/Background/Footer/Footer.module.css","Components/Background/Overlay/Overlay.module.css","Components/Game/Board/Board.module.css","Components/WindowHeader/OptionsBar/OptionsBar.module.css","Components/Game/FaceButton/FaceButton.module.css","Components/Game/Controls/Controls.module.css","Components/Game/RowWrapper/RowWrapper.module.css","Components/Background/Window/Window.module.css","utils/store/initialState/paramLevels.js","utils/reducers/roundReducer.js","utils/store/initialState/round.js","utils/store/roundContext.js","utils/store/overlayContext.js","utils/store/paramsContext.js","Components/Background/Overlay/Overlay.js","utils/logic/icons.js","Components/WindowHeader/TitleBar/TitleBar.js","Components/WindowHeader/GameMenu/GameMenu.js","Components/WindowHeader/OptionDropdown/OptionDropdown.js","Components/WindowHeader/OptionWrapper/OptionWrapper.js","Components/WindowHeader/OptionsBar/OptionsBar.js","Components/WindowHeader/MenuBar/MenuBar.js","utils/reducers/boardReducer.js","utils/store/initialState/board.js","Components/Game/FaceButton/FaceButton.js","utils/logic/helpers.js","Components/Game/CalcScreen/CalcScreen.js","Components/Game/Controls/Controls.js","utils/logic/read.js","Components/Game/Square/Square.js","Components/Game/RowWrapper/RowWrapper.js","utils/logic/setup/buildBlankBoard.js","utils/logic/setup/buildNeighborhood.js","utils/logic/setup/addAnts.js","utils/logic/update.js","Components/Game/Board/Board.js","Components/Background/Window/Window.js","imgs/win98Logo.png","Components/Background/Footer/Footer.js","Components/Background/App/App.js","index.js"],"names":["module","exports","levels","beginner","rows","cols","ants","level","intermediate","expert","roundReducer","state","action","type","console","log","ready","started","payload","initialRound","defaultContext","set","start","lost","won","reset","roundContext","React","createContext","RoundCtxProvider","props","useReducer","roundState","dispatchRound","Provider","value","children","display","hide","show","overlayContext","OverlayCtxProvider","useState","overlayState","setOverlayState","setParameters","params","paramContext","ParamCtxProvider","setParams","newParam","Overlay","overlayCtx","useContext","className","styles","overlay","overlay_hide","onClick","squares","unclicked","clicked","ant","flag","faces","sleeping","smiling","yelling","upsideDown","exploded","shades","xEyes","sweating","winking","TitleBar","titleBar","titleBar__left","String","fromCharCode","titleBar__right","GameMenu","paramCtx","roundCtx","dropdown__section","map","lvl","handleSelect","charAt","toUpperCase","slice","OptionDropdown","dropdown","which","OptionWrapper","buttonStyle","optionButton","optionButton__wrapper","handleClick","buttonText","OptionsBar","game","help","setDropDown","showGameMenu","showHelpMenu","hideBoth","useEffect","optionsBar","MenuBar","boardReducer","board","face","getInitialBoard","paramContextOBJ","parameters","antList","flags","FaceButton","faceButton","assessDigit","string","num","toString","CalcScreen","displayNum","padStart","split","calcScreen","id","digit","digitIdx","digit__top","digit__half","digit__bottom","Controls","clock","setClock","firstClick","clockStarted","setClockStarted","timer","inProgress","setInterval","prevTime","clearInterval","controls","startGame","squareHandler","squareResponse","whichClick","whichFace","touchStart","flagged","touchEnd","count","mouseDown","whichNum","squareProps","boardHandler","routeClick","clickedSquare","remFlags","leftClick","rightClick","sq","revealed","square","nearbyAnts","wasClicked","clickType","wasTouched","touchLength","Square","countRef","useRef","parseClick","event","eventString","gameOver","nativeEvent","downResult","changeFace","updateSquare","parseTouch","current","endResult","leftOrRight","row","col","unclickedAnt","firstAnt","onMouseDown","e","onMouseUp","undefined","onTouchStart","onTouchEnd","onContextMenu","preventDefault","Array","isArray","RowWrapper","boardGrid","index","board_row","key","handleSquareClick","setFace","gameInProgress","buildBlankBoard","from","rowIndex","colIndex","neighbors","buildSquare","buildRow","myIndex","length","buildNeighborhood","wholeBoard","thisRow","thisCol","rowAbove","myRow","rowBelow","concat","buildAnthill","starterArray","idx","i","array","j","Math","floor","random","shuffle","assignAnts","boardState","boardArea","antArray","counter","antMasterlist","forEach","cell","push","antInFirstClick","reservedNeighborhood","foundMatch","some","el","addAnts","newBoard","numAnts","neighborhood","filter","recursiveUncover","centerSquare","Board","paramsContext","dispatchBoard","restartRound","useCallback","clickedNeighborhood","boardWithAnts","allAnts","updateGrid","updateAction","indexOf","gameParams","unclickedSafe","checkForWin","startingSquare","updatedBoard","uncoverNeighbors","gameWrapper","boardWrapper","newFace","Window","window","Footer","bg__footer","startButton","src","win98logo","alt","gamewindowButton","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adc9ad6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"calcScreen\":\"CalcScreen_calcScreen__2RNgm\",\"digit\":\"CalcScreen_digit__n2xbQ\",\"digit__half\":\"CalcScreen_digit__half___C2KC\",\"digit--0\":\"CalcScreen_digit--0__JQ9uK\",\"digit__top\":\"CalcScreen_digit__top__2_eJh\",\"digit__bottom\":\"CalcScreen_digit__bottom__3IQMY\",\"digit--4\":\"CalcScreen_digit--4__1fpXy\",\"digit--1\":\"CalcScreen_digit--1__WyxL7\",\"digit--7\":\"CalcScreen_digit--7__q3bg6\",\"digit--2\":\"CalcScreen_digit--2__2OATq\",\"digit--5\":\"CalcScreen_digit--5__2ktkl\",\"digit--3\":\"CalcScreen_digit--3__1jH8p\",\"digit--9\":\"CalcScreen_digit--9__23oWL\",\"digit--6\":\"CalcScreen_digit--6__9FBRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"OptionDropdown_dropdown__hQBMN\",\"dropdown--open\":\"OptionDropdown_dropdown--open__nGfXv\",\"slideup\":\"OptionDropdown_slideup__3q_9-\",\"dropdown__section\":\"OptionDropdown_dropdown__section__LXyCN\",\"delayRender\":\"OptionDropdown_delayRender__3X5H-\",\"--selected\":\"OptionDropdown_--selected__3WX4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__3umfu\",\"square--clicked\":\"Square_square--clicked__2AQ4_\",\"nearbys--0\":\"Square_nearbys--0__32GBT\",\"nearbys--1\":\"Square_nearbys--1__Q9Cf5\",\"nearbys--2\":\"Square_nearbys--2__10nNw\",\"nearbys--3\":\"Square_nearbys--3__1YeYu\",\"nearbys--4\":\"Square_nearbys--4__3Cr8k\",\"nearbys--5\":\"Square_nearbys--5__3VFN5\",\"nearbys--6\":\"Square_nearbys--6__25uFq\",\"nearbys--7\":\"Square_nearbys--7__3V4t-\",\"nearbys--8\":\"Square_nearbys--8__2NMV7\",\"firstAnt\":\"Square_firstAnt__1BtMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleBar\":\"TitleBar_titleBar__3D0NT\",\"titleBar__left\":\"TitleBar_titleBar__left__2jmEm\",\"titleBar__right\":\"TitleBar_titleBar__right__2I_bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionButton__wrapper\":\"OptionWrapper_optionButton__wrapper__1Gk2U\",\"optionButton\":\"OptionWrapper_optionButton__5Jvpo\",\"optionButton--clicked\":\"OptionWrapper_optionButton--clicked__2AX5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg__footer\":\"Footer_bg__footer__3cwNj\",\"startButton\":\"Footer_startButton__JcZ0O\",\"gamewindowButton\":\"Footer_gamewindowButton__31l6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__y-1vO\",\"overlay_hide\":\"Overlay_overlay_hide__3nis0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameWrapper\":\"Board_gameWrapper__tDsXr\",\"boardWrapper\":\"Board_boardWrapper__3qA6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsBar\":\"OptionsBar_optionsBar__3psrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"faceButton\":\"FaceButton_faceButton__-uowv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3f1Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_row\":\"RowWrapper_board_row__2Yugp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__2bDq7\"};","const levels = {\r\n  beginner: {\r\n    rows: 8,\r\n    cols: 8,\r\n    ants: 10,\r\n    level: \"beginner\"\r\n  },\r\n  intermediate: {\r\n    rows: 16,\r\n    cols: 16,\r\n    ants: 40,\r\n    level: \"intermediate\"\r\n  },\r\n  expert: {\r\n    rows: 24,\r\n    cols: 24,\r\n    ants: 99,\r\n    level: \"expert\"\r\n  },\r\n};\r\n\r\nexport default levels;\r\n","const roundReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"BOARD_SET\":\r\n        console.log(\"ROUND REDUCER board set\")\r\n      return { ...state, ready: true, started: false };\r\n    case \"START_ROUND\":\r\n        console.log(\"ROUND REDUCER start round\")\r\n      return { ...state, started: true };\r\n    case \"WON\":\r\n    case \"LOST\":\r\n        console.log(\"ROUND REDUCER won/last\")\r\n      return { ...state, ready: false };\r\n    case \"RESET\":\r\n        console.log(\"ROUND REDUCER reset\")\r\n      return { ...action.payload };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default roundReducer;\r\n","const initialRound = {\r\n  ready: false,\r\n  started: false,\r\n};\r\n\r\nexport default initialRound;\r\n","import React, { useReducer } from \"react\";\r\nimport roundReducer from \"../reducers/roundReducer\";\r\nimport initialRound from \"./initialState/round\";\r\n\r\n//for IDE completion\r\nconst defaultContext = {\r\n  ready: null,\r\n  started: null,\r\n  set: {\r\n    ready: () => {},\r\n    start: () => {},\r\n    lost: () => {},\r\n    won: () => {},\r\n    reset: () => {},\r\n  },\r\n};\r\nconst roundContext = React.createContext(defaultContext);\r\nexport default roundContext;\r\n\r\nexport const RoundCtxProvider = (props) => {\r\n  const [roundState, dispatchRound] = useReducer(roundReducer, initialRound);\r\n\r\n  const set = {\r\n    ready: () => {\r\n      dispatchRound({ type: \"BOARD_SET\" });\r\n    },\r\n    start: () => {\r\n      dispatchRound({ type: \"START_ROUND\" });\r\n    },\r\n    lost: () => {\r\n      dispatchRound({ type: \"LOST\" });\r\n    },\r\n    won: () => {\r\n      dispatchRound({ type: \"WON\" });\r\n    },\r\n    reset: () => {\r\n      dispatchRound({ type: \"RESET\", payload: { ...initialRound } });\r\n    },\r\n  };\r\n\r\n  return (\r\n    <roundContext.Provider value={{ ...roundState, set: set }}>\r\n      {props.children}\r\n    </roundContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n//for IDE completion\r\nconst defaultContext = {\r\n  display: null,\r\n  hide: () => {},\r\n  show: () => {},\r\n};\r\nconst overlayContext = React.createContext(defaultContext);\r\nexport default overlayContext;\r\n\r\nexport const OverlayCtxProvider = (props) => {\r\n  const [overlayState, setOverlayState] = useState(false);\r\n\r\n  const hide = () => {\r\n    setOverlayState(false);\r\n    console.log(\"OVERLAY CONTEXT hiding overlay\");\r\n  };\r\n\r\n  const show = () => {\r\n    setOverlayState(true);\r\n    console.log(\"OVERLAY CONTEXT showing overlay\");\r\n  };\r\n\r\n  return (\r\n    <overlayContext.Provider\r\n      value={{\r\n        display: overlayState,\r\n        hide: hide,\r\n        show: show\r\n      }}\r\n    >\r\n      {props.children}\r\n    </overlayContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport levels from \"./initialState/paramLevels\";\r\nimport { RoundCtxProvider } from \"./roundContext\";\r\nimport { OverlayCtxProvider } from \"./overlayContext\";\r\n\r\n//for IDE completion\r\nconst defaultContext = {\r\n  rows: null,\r\n  cols: null,\r\n  ants: null,\r\n  setParameters: (params) => {},\r\n};\r\nconst paramContext = React.createContext(defaultContext);\r\nexport default paramContext;\r\n\r\nexport const ParamCtxProvider = (props) => {\r\n  const [params, setParams] = useState(levels.beginner);\r\n\r\n  const setParameters = (newParam) => {\r\n    setParams(newParam);\r\n    console.log(\"PARAMS CONTEXT changing params\");\r\n  };\r\n\r\n  return (\r\n    <paramContext.Provider\r\n      value={{\r\n        ...params,\r\n        setParameters: setParameters,\r\n      }}\r\n    >\r\n      <RoundCtxProvider>\r\n        <OverlayCtxProvider>\r\n        {props.children}\r\n        </OverlayCtxProvider>\r\n      </RoundCtxProvider>\r\n    </paramContext.Provider>\r\n  );\r\n};\r\n","import { useContext } from 'react';\r\nimport overlayContext from '../../../utils/store/overlayContext';\r\nimport styles from './Overlay.module.css';\r\n\r\nconst Overlay = () => {\r\n    const overlayCtx = useContext(overlayContext);\r\n\r\n    const handleClick = () => {\r\n        overlayCtx.hide();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={overlayCtx.display ? styles.overlay : styles.overlay_hide}\r\n            onClick={handleClick}\r\n      ></div>\r\n    )\r\n}\r\n\r\nexport default Overlay;","//img directories\r\nexport const squares = {\r\n    unclicked: \"\",\r\n    clicked: \"\",\r\n    ant: [\"0xD83D\", \"0xDC1C\"],\r\n    flag: [\"0xD83D\", \"0xDEA9\"],\r\n}\r\n\r\nexport const faces = {\r\n    sleeping: [\"0xD83D\", \"0xDE34\"],\r\n    smiling: [\"0xD83D\", \"0xDE0A\"],\r\n    yelling: [\"0xD83D\", \"0xDE31\"],\r\n    upsideDown: [\"0xD83D\", \"0xDE43\"],\r\n    exploded: [\"0xD83E\", \"0xDD2F\"],\r\n    shades: [\"0xD83D\", \"0xDE0E\"],\r\n    xEyes: [\"0xD83D\", \"0xDE35\"],\r\n    sweating: [\"0xD83D\", \"0xDE13\"],\r\n    winking: [\"0xD83D\", \"0xDE09\"]\r\n}","import { squares } from '../../../utils/logic/icons'\r\n\r\nimport styles from './TitleBar.module.css';\r\n\r\nconst TitleBar = () => {\r\n    return (\r\n    <section className={styles.titleBar}>\r\n        <span className={styles.titleBar__left}>\r\n          {String.fromCharCode(...squares.ant)}\r\n          <h1>Antsweeper</h1>\r\n        </span>\r\n        <span className={styles.titleBar__right}>\r\n          <button>&#818;</button>\r\n          <button>&#10006;</button>\r\n        </span>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default TitleBar;","import { Fragment, useContext } from \"react\";\r\nimport paramContext from \"../../../utils/store/paramsContext\";\r\nimport roundContext from \"../../../utils/store/roundContext\";\r\nimport overlayContext from \"../../../utils/store/overlayContext\";\r\nimport levels from \"../../../utils/store/initialState/paramLevels\";\r\nimport styles from \"../OptionDropdown/OptionDropdown.module.css\";\r\n// import styles from \"./GameMenu.module.css\";\r\n\r\nconst GameMenu = (props) => {\r\n  const gameLevels = [\"beginner\", \"intermediate\", \"expert\"];\r\n  const paramCtx = useContext(paramContext);\r\n  const roundCtx = useContext(roundContext);\r\n  const overlayCtx = useContext(overlayContext);\r\n\r\n  const handleSelect = (lvl) => {\r\n    overlayCtx.hide();\r\n    paramCtx.setParameters(levels[lvl]);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    overlayCtx.hide();\r\n    roundCtx.set.reset();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className={styles.dropdown__section}>\r\n        <li onClick={handleReset}>New Game</li>\r\n      </ul>\r\n      <ul className={styles.dropdown__section}>\r\n        {gameLevels.map((lvl) => {\r\n          return (\r\n            <li\r\n              key={`level-${lvl}`}\r\n              onClick={() => handleSelect(lvl)}\r\n              className={paramCtx.level === lvl ? styles[\"--selected\"] : null}\r\n            >\r\n              {lvl.charAt(0).toUpperCase() + lvl.slice(1)}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GameMenu;\r\n","import GameMenu from \"../GameMenu/GameMenu\";\r\n\r\nimport styles from \"./OptionDropdown.module.css\";\r\n\r\nconst OptionDropdown = (props) => {\r\n  return (\r\n    <aside className={styles.dropdown}>\r\n      {props.which === \"Game\" ? <GameMenu /> : null}\r\n      {props.which === \"Help\" ? null : null}\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default OptionDropdown;\r\n","import OptionDropdown from \"../OptionDropdown/OptionDropdown\";\r\nimport styles from \"./OptionWrapper.module.css\";\r\n\r\nconst OptionWrapper = (props) => {\r\n\r\n  let buttonStyle = `${styles.optionButton}`;\r\n  if (props.dropdown) {\r\n    buttonStyle+=` ${styles[\"optionButton--clicked\"]}`\r\n  }\r\n\r\n  return (\r\n    <div className={styles.optionButton__wrapper}>\r\n      <button className={buttonStyle} onClick={props.handleClick}>\r\n        {props.buttonText}\r\n        </button>\r\n      {props.dropdown ? (\r\n        <OptionDropdown which={props.buttonText} />\r\n        ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionWrapper;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport overlayContext from \"../../../utils/store/overlayContext\";\r\nimport OptionButtonWrapper from '../OptionWrapper/OptionWrapper';\r\n\r\nimport styles from './OptionsBar.module.css';\r\n\r\nconst OptionsBar = () => {\r\n  const overlayCtx = useContext(overlayContext);\r\n  const [dropdown, setDropDown] = useState({\r\n    game: false, help: false\r\n  });\r\n\r\n  const showGameMenu = () => {\r\n    setDropDown({game: true, help: false});\r\n  }\r\n\r\n  const showHelpMenu = () => {\r\n    setDropDown({game: false, help: true});\r\n  }\r\n\r\n  const hideBoth = () => {\r\n    setDropDown({game: false, help: false});\r\n  }\r\n\r\n  const handleHelpClick = () => {\r\n    //if one of the dropdowns is open\r\n    if (overlayCtx.display) {\r\n      if (dropdown.help) {\r\n        //if the help menu is already open\r\n        hideBoth();\r\n        overlayCtx.hide();\r\n      } else {\r\n        showHelpMenu();\r\n      }\r\n    }\r\n    else {\r\n      //open Help dropdown\r\n      showHelpMenu();\r\n      overlayCtx.show();\r\n    }\r\n  }\r\n\r\n  const handleGameClick = () => {\r\n    //if one of the dropdowns is open\r\n    if (overlayCtx.display) {\r\n      if (dropdown.game) {\r\n        //if the game menu is already open\r\n        hideBoth();\r\n        overlayCtx.hide();\r\n      } else {\r\n        showGameMenu();\r\n      }\r\n    }\r\n    else {\r\n      //open Game dropdown\r\n      showGameMenu();\r\n      overlayCtx.show();\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    //hide both menus whenever overlay hides\r\n    if (!overlayCtx.display) {\r\n      hideBoth();\r\n    }\r\n  }, [overlayCtx.display, setDropDown])\r\n\r\n    return (\r\n        <nav className={styles.optionsBar}>\r\n          <OptionButtonWrapper buttonText={\"Game\"} handleClick={handleGameClick} dropdown={dropdown.game}/>\r\n          <OptionButtonWrapper buttonText={\"Help\"} handleClick={handleHelpClick} dropdown={dropdown.help}/>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default OptionsBar;","import TitleBar from '../TitleBar/TitleBar';\r\nimport OptionsBar from '../OptionsBar/OptionsBar';\r\n\r\n// import styles from \"./MenuBar.module.css\";\r\n\r\nconst MenuBar = () => {\r\n  return (\r\n    <header>\r\n     <TitleBar />\r\n     <OptionsBar />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import { faces } from \"../logic/icons\";\r\n\r\nconst boardReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"RESET_BOARD\":\r\n        console.log(\"BOARD REDUCER reset board\")\r\n      return { ...action.payload };\r\n    case \"CLEAR_BOARD\":\r\n        console.log(\"BOARD REDUCER clear board\")\r\n      return { ...state, board: [] };\r\n    case \"UNCOVER_BOARD\":\r\n        console.log(\"BOARD REDUCER uncover board\")\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        face: faces.smiling,\r\n      };\r\n    case \"SET_ANTS\":\r\n        console.log(\"BOARD REDUCER set ants\")\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        face: faces.smiling,\r\n      };\r\n    case \"UPDATE_BOARD\":\r\n        console.log(\"BOARD REDUCER update board\")\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"SET_FACE\":\r\n        console.log(\"BOARD REDUCER set face\")\r\n      return {\r\n        ...state,\r\n        face: action.payload,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","import { faces } from '../../logic/icons';\r\n\r\nconst getInitialBoard = (paramContextOBJ) => {\r\n  return {\r\n    board: [],\r\n    level: paramContextOBJ.level,\r\n    parameters: {\r\n      rows: paramContextOBJ.rows,\r\n      cols: paramContextOBJ.cols,\r\n      ants: paramContextOBJ.ants,\r\n      antList: [],\r\n    },\r\n    flags: 0,\r\n    face: faces.sleeping,\r\n  };\r\n};\r\n\r\nexport default getInitialBoard;\r\n","import styles from \"./FaceButton.module.css\";\r\n\r\nconst FaceButton = (props) => {\r\n  return (\r\n    <button\r\n      className={styles.faceButton}\r\n      onClick={props.onClick}\r\n    >\r\n      {String.fromCharCode(props.face[0], props.face[1])}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FaceButton;\r\n","//the Fisher-Yates shuffle\r\nexport const shuffle = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const assessDigit = (string, num) => {\r\n  return string + \"--\" + num.toString();\r\n};\r\n","import { assessDigit } from '../../../utils/logic/helpers'\r\nimport styles from \"./CalcScreen.module.css\";\r\n\r\n\r\nconst CalcScreen = (props) => {\r\n  let displayNum = props.display.toString().padStart(3, \"0\").split(\"\");\r\n\r\n  if (!displayNum || (displayNum === \"off\")) {\r\n    displayNum = [\"8\", \"8\", \"8\"];\r\n  }\r\n  \r\n  return (\r\n    <section className={styles.calcScreen} id={props.id}>\r\n      {displayNum.map((digit, digitIdx) => (\r\n        <div\r\n          key={`${props.id}-digit-${digitIdx}`}\r\n          className={`${styles.digit} ${styles[assessDigit(\"digit\", digit)]}`}\r\n        >\r\n          <div className={`${styles.digit__top} ${styles.digit__half}`}></div>\r\n          <div className={`${styles.digit__bottom} ${styles.digit__half}`}></div>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CalcScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport FaceButton from \"../FaceButton/FaceButton\";\r\nimport CalcScreen from \"../CalcScreen/CalcScreen\";\r\nimport styles from \"./Controls.module.css\";\r\n\r\nconst Controls = (props) => {\r\n  const [clock, setClock] = useState(\"off\");\r\n  const [clockStarted, setClockStarted] = useState(props.firstClick);\r\n\r\n  const startGameHandler = () => {\r\n    setClock(0);\r\n    // setClockStarted(true);\r\n    props.startGame();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.firstClick && !clockStarted) {\r\n      setClockStarted(true);\r\n    }\r\n    if (!props.firstClick && clockStarted) {\r\n      setClockStarted(false)\r\n    }\r\n    return () => {\r\n    };\r\n  }, [props.firstClick, clockStarted]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (clockStarted && props.inProgress && props.firstClick) {\r\n      timer = setInterval(() => {\r\n        if (clock < 999) {\r\n          setClock((prevTime) => prevTime + 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n    if (!props.inProgress) {\r\n      clearInterval(timer);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [clock, clockStarted, props.firstClick, props.inProgress]);\r\n\r\n  return (\r\n    <section className={styles.controls}>\r\n        <CalcScreen\r\n          id={\"flags\"}\r\n          display={props.inProgress || clockStarted ? props.flags : \"off\"}\r\n        />\r\n      <FaceButton onClick={startGameHandler} face={props.face} />\r\n        <CalcScreen\r\n          id={\"timer\"}\r\n          display={props.inProgress || clockStarted ? clock : \"off\"}\r\n        />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import { squares, faces } from \"./icons\";\r\n\r\n// returns { which: \"left\"/\"right\", face : \"[face code]\"}\r\nexport const squareHandler = {\r\n  squareResponse: (whichClick, whichFace) => {\r\n    return { which: whichClick, face: whichFace };\r\n  },\r\n  touchStart: (flagged) => {\r\n    if (flagged) {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.winking);\r\n    } else {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.yelling);\r\n    }\r\n  },\r\n  touchEnd: (count) => {\r\n    console.log(\"touch end count is \" + count);\r\n    //since touchStart doesn't put the face back on :D like mouseDown does\r\n    //touchEnd has to do it!\r\n    if (count > 0) {\r\n      return squareHandler.squareResponse(\"right\", faces.smiling);\r\n    } else {\r\n      return squareHandler.squareResponse(\"left\", faces.smiling);\r\n    }\r\n  },\r\n  mouseDown: (whichNum, squareProps) => {\r\n    if (whichNum === 1) {\r\n      //left click\r\n      if (squareProps.flagged) {\r\n        return squareHandler.squareResponse(\"left\", faces.winking);\r\n      } else {\r\n        //yell until mouse release\r\n        return squareHandler.squareResponse(\"left\", faces.yelling);\r\n      }\r\n    } else {\r\n      if (squareProps.flagged) {\r\n        //removing flag\r\n        return squareHandler.squareResponse(\"right\", faces.sweating);\r\n      } else {\r\n        //flag placement\r\n        return squareHandler.squareResponse(\"right\", faces.smiling);\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n//returns { square: {updated square}, face: [face code] }\r\nexport const boardHandler = {\r\n  routeClick: (clickedSquare, whichClick, remFlags) => {\r\n    if (whichClick === \"left\") {\r\n      return boardHandler.leftClick(clickedSquare, remFlags);\r\n    } else if (whichClick === \"right\") {\r\n      return boardHandler.rightClick(clickedSquare, remFlags);\r\n    }\r\n  },\r\n  leftClick: (sq, remFlags) => {\r\n    if (sq.flagged || sq.revealed) {\r\n      return { square: sq, face: faces.smiling };\r\n    } else {\r\n      if (sq.ant) {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: squares.ant,\r\n            revealed: true,\r\n          },\r\n          face: faces.exploded,\r\n          flags: remFlags,\r\n        };\r\n      } else {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n            revealed: true,\r\n          },\r\n          face: faces.smiling,\r\n          flags: remFlags,\r\n        };\r\n      }\r\n    }\r\n  },\r\n  rightClick: (sq, remFlags) => {\r\n    //removing a flag\r\n    if (sq.flagged) {\r\n      return {\r\n        square: {\r\n          ...sq,\r\n          display: squares.unclicked,\r\n          revealed: false,\r\n          flagged: false,\r\n        },\r\n        face: faces.smiling,\r\n        flags: remFlags + 1,\r\n      };\r\n    } else {\r\n      if (remFlags > 0) {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: squares.flag,\r\n            revealed: false,\r\n            flagged: true,\r\n          },\r\n          face: faces.smiling,\r\n          flags: remFlags - 1,\r\n        };\r\n      } else {\r\n        //player can't place more flags than ants\r\n        return {\r\n          square: { ...sq },\r\n          face: faces.smiling,\r\n          flags: remFlags,\r\n        };\r\n      }\r\n    }\r\n  },\r\n};\r\n","import { useRef } from \"react\";\r\nimport { assessDigit } from \"../../../utils/logic/helpers\";\r\nimport { squareHandler } from \"../../../utils/logic/read\";\r\nimport styles from \"./Square.module.css\";\r\n\r\n//declared outside of the component in case it might rerender & reset to default\r\n//don't need it in state because state triggers a UI change (rerender)\r\nlet wasClicked = false;\r\nlet clickType = \"left\";\r\nlet wasTouched = false;\r\nlet touchLength = 0;\r\n\r\nfunction Square(props) {\r\n  const countRef = useRef();\r\n\r\n  const reset = () => {\r\n    wasClicked = false;\r\n    clickType = \"left\";\r\n    wasTouched = false;\r\n    touchLength = 0;\r\n  };\r\n\r\n  const parseClick = (event, eventString) => {\r\n    //restore defaults real quick for people playing multiple games\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    if (\r\n      wasTouched ||\r\n      props.sq.revealed ||\r\n      (props.sq.flagged && event.nativeEvent.which === 1)\r\n    ) {\r\n      //do nothing if user is mobile, if square is already revealed,\r\n      //or if flagged and this is a left click\r\n      return;\r\n    } else if (eventString === \"down\") {\r\n      wasClicked = true;\r\n      // console.log(\"mouse down on \" + props.id);\r\n      //returns which: left or right click\r\n      //and face: what the face button should be (just :o since this is mousedown, not up)\r\n      let downResult = squareHandler.mouseDown(event.nativeEvent.which, props);\r\n      clickType = downResult.which;\r\n      props.changeFace(downResult.face);\r\n    } else if (eventString === \"up\") {\r\n      // console.log(\"mouse up on \" + props.id);\r\n      if (!wasTouched) {\r\n        updateSquare(clickType);\r\n      }\r\n    }\r\n  };\r\n\r\n  const parseTouch = (eventString) => {\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    //prevents a \"double click\" with touch firing and then mouse click firing\r\n    if (props.gameOver || wasClicked || props.sq.revealed) {\r\n      //do nothing if game is over, if user is mobile, or if square is already revealed\r\n      return;\r\n    } else if (eventString === \"start\") {\r\n      wasTouched = true;\r\n      // console.log(\"touch started on \" + props.id);\r\n      props.changeFace(squareHandler.touchStart(props.sq.flagged).face);\r\n      countRef.current = setInterval(() => {\r\n        touchLength++;\r\n        // console.log(touchLength);\r\n      }, 800);\r\n    } else if (eventString === \"end\") {\r\n      // console.log(\"touch ended on \" + props.id);\r\n      //stops timer\r\n      clearInterval(countRef.current);\r\n      //returns which: left or right click\r\n      let endResult = squareHandler.touchEnd(touchLength);\r\n      //\"left clicks\" shouldn't impact a flagged square\r\n      if (props.sq.flagged && endResult.which === \"left\") {\r\n        props.changeFace(endResult.face); //flagged squares don't get processed by Board\r\n        return;\r\n      } else {\r\n        updateSquare(endResult.which);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateSquare = (leftOrRight) => {\r\n    //reset defaults for this square, but not wasClicked/wasTouched\r\n    //because that should stay the same across the game\r\n    clickType = \"left\";\r\n    touchLength = 0;\r\n    props.onClick(props.sq.row, props.sq.col, leftOrRight);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`\r\n        ${styles.square}\r\n        ${props.sq.revealed && styles[\"square--clicked\"]} \r\n        ${styles[assessDigit(\"nearbys\", props.sq.nearbyAnts)]}\r\n        ${(props.sq.revealed && props.sq.ant && !props.sq.unclickedAnt) ? styles.firstAnt : null} \r\n      `}\r\n      onMouseDown={(e) => parseClick(e, \"down\")}\r\n      onMouseUp={!wasTouched ? (e) => parseClick(e, \"up\") : undefined}\r\n      onTouchStart={() => parseTouch(\"start\")}\r\n      onTouchEnd={!wasClicked ? () => parseTouch(\"end\") : undefined}\r\n      onContextMenu={(e) => e.preventDefault()}\r\n    >\r\n      {Array.isArray(props.sq.display)\r\n        ? String.fromCharCode(props.sq.display[0], props.sq.display[1])\r\n        : props.sq.display}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import Square from \"../Square/Square\";\r\nimport styles from \"./RowWrapper.module.css\";\r\n\r\nconst RowWrapper = (props) => {\r\n  return props.boardGrid.map((row, index) => (\r\n    <div className={styles.board_row} key={`row-${index}`}>\r\n      {row.map((square) => (\r\n        <Square\r\n          key={square.key}\r\n          id={square.key}\r\n          sq={square}\r\n          onClick={props.handleSquareClick}\r\n          changeFace={props.setFace}\r\n          gameOver={!props.gameInProgress}\r\n        />\r\n      ))}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default RowWrapper;\r\n","import { squares } from \"../icons\";\r\n\r\n//define what each \"square\" should start out with in Board state\r\nconst buildSquare = (row, col) => {\r\n  return {\r\n    key: \"cell-\" + row + \"-\" + col,\r\n    row: row,\r\n    col: col,\r\n    ant: false,\r\n    revealed: false,\r\n    display: squares.unclicked,\r\n    flagged: false,\r\n    nearbyAnts: 0,\r\n    neighbors: [],\r\n  };\r\n};\r\n\r\n//make an array of arrays of \"squares\"\r\nconst buildBlankBoard = (rows, cols) => {\r\n  return Array.from(Array(rows), (row, rowIndex) => {\r\n    return Array.from(Array(cols), (col, colIndex) =>\r\n      buildSquare(rowIndex, colIndex)\r\n    );\r\n  });\r\n};\r\n\r\nexport default buildBlankBoard;\r\n","//takes an array and an index and returns\r\n//[the value of the index before, the specified index, and the next index]\r\n//or null if there is no index before or after\r\n// (sort of like array.slice but replacing a non-existent or negative index with null)\r\nconst buildRow = (row, myIndex) => {\r\n  return [\r\n    myIndex - 1 >= 0 ? row[myIndex - 1] : null,\r\n    row[myIndex],\r\n    myIndex + 1 < row.length ? row[myIndex + 1] : null,\r\n  ];\r\n};\r\n\r\n//takes an array of arrays and specified \"row\" and \"col\" indeces\r\n//and returns an array of nine values: essentially the value of the specified \"cell\"\r\n//and the values of all the cells that \"touch\" it in the \"grid\"\r\nexport const buildNeighborhood = (wholeBoard, thisRow, thisCol) => {\r\n  let rowAbove =\r\n    thisRow - 1 >= 0\r\n      ? buildRow(wholeBoard[thisRow - 1], thisCol)\r\n      : [null, null, null];\r\n  let myRow = buildRow(wholeBoard[thisRow], thisCol);\r\n  let rowBelow =\r\n    thisRow + 1 < wholeBoard.length\r\n      ? buildRow(wholeBoard[thisRow + 1], thisCol)\r\n      : [null, null, null];\r\n  return rowAbove.concat(myRow, rowBelow);\r\n};\r\n\r\nexport default buildNeighborhood;\r\n","import { shuffle } from \"../helpers\";\r\nimport buildNeighborhood from \"./buildNeighborhood\";\r\n\r\n//make an array of true bools\r\n//with falses equal to the number of ants shuffled in\r\nconst buildAnthill = (length, ants) => {\r\n  let starterArray = Array.from(Array(length), (square, idx) => {\r\n    return { id: idx + 1, ant: false };\r\n  });\r\n  for (let i = 0; i < ants; i++) {\r\n    starterArray[i].ant = true;\r\n  }\r\n  return shuffle(starterArray);\r\n};\r\n\r\n//spread ants randomly through new board\r\nconst assignAnts = (boardState) => {\r\n  let boardArea = boardState.parameters.rows * boardState.parameters.cols;\r\n  let antArray = buildAnthill(boardArea, boardState.parameters.ants);\r\n  let counter = boardArea - 1;\r\n  let antMasterlist = [];\r\n  boardState.board.forEach((row) => {\r\n    row.forEach((cell) => {\r\n      cell.ant = antArray[counter].ant;\r\n      counter--;\r\n      if (cell.ant) {\r\n        antMasterlist.push(cell.key);\r\n      }\r\n    });\r\n  });\r\n\r\n  return [boardState.board, antMasterlist];\r\n};\r\n\r\n//count adjacent ants\r\n//and keep track of which all adjacent squares\r\nconst findNeighbors = (board) => {\r\n  board.forEach((row, thisRow) => {\r\n    row.forEach((cell, thisCol) => {\r\n      let numAnts = 0;\r\n      let neighborhood = buildNeighborhood(board, thisRow, thisCol);\r\n      neighborhood.forEach((square) => {\r\n        if (square && square.ant) {\r\n          numAnts++;\r\n        }\r\n      });\r\n      cell.nearbyAnts = numAnts;\r\n      cell.neighbors = neighborhood.filter((el) => el !== null);\r\n    });\r\n  });\r\n  return board;\r\n};\r\n\r\nconst antInFirstClick = (antList, reservedNeighborhood) => {\r\n  let foundMatch = false;\r\n  reservedNeighborhood.forEach((sq) => {\r\n    if (sq !== null && antList.some((el) => el === sq.key)) {\r\n      foundMatch = true;\r\n    }\r\n  });\r\n  return foundMatch;\r\n};\r\n\r\nconst addAnts = (boardState, reservedNeighborhood) => {\r\n  let newBoard = boardState.board;\r\n  let antList = [];\r\n  do {\r\n    [newBoard, antList] = assignAnts(boardState);\r\n  } while (antInFirstClick(antList, reservedNeighborhood));\r\n  return [findNeighbors(newBoard), antList];\r\n};\r\n\r\nexport default addAnts;\r\n","import { squares } from \"./icons\";\r\n\r\nexport const uncoverNeighbors = (startingSquare, board) => {\r\n  //assumes a nearbyAnts === 0 starting square\r\n  let updatedBoard = board;\r\n  startingSquare.neighbors.forEach((sq) => {\r\n    if (!board[sq.row][sq.col].revealed) {\r\n      board[sq.row][sq.col] = {\r\n        ...sq,\r\n        revealed: true,\r\n        display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n      };\r\n      if (sq.nearbyAnts === 0) {\r\n        board = recursiveUncover(sq, board);\r\n      }\r\n    }\r\n  });\r\n  return updatedBoard;\r\n};\r\n\r\nexport const recursiveUncover = (centerSquare, board) => {\r\n  centerSquare.neighbors.forEach((sq) => {\r\n    if (!board[sq.row][sq.col].revealed) {\r\n      board[sq.row][sq.col] = {\r\n        ...sq,\r\n        revealed: true,\r\n        display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n      };\r\n      if (sq.nearbyAnts === 0) {\r\n        board = recursiveUncover(sq, board);\r\n      }\r\n    }\r\n  });\r\n  return board;\r\n};\r\n\r\nexport const checkForWin = (board, gameParams) => {\r\n  let unclickedSafe = gameParams.rows * gameParams.cols - gameParams.ants;\r\n  board.forEach((row, rowIndex) => {\r\n    board.forEach((col, colIndex) => {\r\n      if (\r\n        !board[rowIndex][colIndex].ant &&\r\n        board[rowIndex][colIndex].revealed\r\n      ) {\r\n        unclickedSafe--;\r\n      }\r\n    });\r\n  });\r\n  if (unclickedSafe === 0) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const detonateAnts = (board, allAnts) => {\r\n  board.forEach((row, rowIndex) => {\r\n    board.forEach((col, colIndex) => {\r\n      if (\r\n        (allAnts.indexOf(board[rowIndex][colIndex].key) !== -1) &&\r\n        !board[rowIndex][colIndex].revealed &&\r\n        !board[rowIndex][colIndex].flagged\r\n      ) {\r\n        board[rowIndex][colIndex] = {\r\n          ...board[rowIndex][colIndex],\r\n          display: squares.ant,\r\n          revealed: true,\r\n          unclickedAnt: true,\r\n        };\r\n      }\r\n    });\r\n  });\r\n  return board;\r\n};\r\n","import { useCallback, useContext, useEffect, useReducer } from \"react\";\r\n\r\nimport paramsContext from \"../../../utils/store/paramsContext\";\r\nimport boardReducer from \"../../../utils/reducers/boardReducer\";\r\nimport getInitialBoard from \"../../../utils/store/initialState/board\";\r\n\r\nimport Controls from \"../Controls/Controls\";\r\nimport RowWrapper from \"../RowWrapper/RowWrapper\";\r\n\r\nimport { faces } from \"../../../utils/logic/icons\";\r\nimport buildBlankBoard from \"../../../utils/logic/setup/buildBlankBoard\";\r\nimport buildNeighborhood from \"../../../utils/logic/setup/buildNeighborhood\";\r\nimport addAnts from \"../../../utils/logic/setup/addAnts\";\r\n\r\nimport { boardHandler } from \"../../../utils/logic/read\";\r\nimport {\r\n  uncoverNeighbors,\r\n  checkForWin,\r\n  detonateAnts,\r\n} from \"../../../utils/logic/update\";\r\n\r\nimport styles from \"./Board.module.css\";\r\nimport roundContext from \"../../../utils/store/roundContext\";\r\n\r\nconst Board = () => {\r\n  const paramCtx = useContext(paramsContext);\r\n  const roundCtx = useContext(roundContext);\r\n\r\n  const [boardState, dispatchBoard] = useReducer(\r\n    boardReducer,\r\n    getInitialBoard(paramCtx)\r\n  );\r\n\r\n  const restartRound = useCallback(() => {\r\n    dispatchBoard({\r\n      type: \"RESET_BOARD\",\r\n      payload: getInitialBoard(paramCtx),\r\n    });\r\n    roundCtx.set.reset();\r\n  }, [paramCtx, roundCtx.set]);\r\n\r\n  const onStart = () => {\r\n    //let happy onStart face restart a game in progress\r\n    if (roundCtx.started) {\r\n      restartRound();\r\n    }\r\n    //clear out previous round (if applicable)\r\n    dispatchBoard({ type: \"CLEAR_BOARD\" });\r\n    //fills out the board with uncovered squares, but no ants yet\r\n    dispatchBoard({\r\n      type: \"UNCOVER_BOARD\",\r\n      payload: {\r\n        board: buildBlankBoard(\r\n          boardState.parameters.rows,\r\n          boardState.parameters.cols\r\n        ),\r\n        parameters: { ...boardState.parameters },\r\n        flags: boardState.parameters.ants,\r\n      },\r\n    });\r\n    roundCtx.set.ready();\r\n  };\r\n\r\n  const handleSquareClick = useCallback(\r\n    (rowIndex, colIndex, whichClick) => {\r\n      //first click\r\n      if (!roundCtx.started) {\r\n        let clickedNeighborhood = buildNeighborhood(\r\n          boardState.board,\r\n          rowIndex,\r\n          colIndex\r\n        );\r\n        let [boardWithAnts, antList] = addAnts(boardState, clickedNeighborhood);\r\n        dispatchBoard({\r\n          type: \"SET_ANTS\",\r\n          payload: {\r\n            board: boardWithAnts,\r\n            parameters: {\r\n              ...boardState.parameters,\r\n              antList: antList,\r\n            },\r\n          },\r\n        });\r\n        roundCtx.set.start();\r\n      }\r\n\r\n      let updateGrid = [...boardState.board];\r\n      let clickedSquare = boardState.board[rowIndex][colIndex];\r\n      // console.log(\"handling a \" + whichClick + \" click for:\");\r\n      // console.log(clickedSquare);\r\n      let updateAction = boardHandler.routeClick(\r\n        clickedSquare,\r\n        whichClick,\r\n        boardState.flags\r\n      );\r\n      updateGrid[rowIndex][colIndex] = updateAction.square;\r\n      if (updateAction.square.revealed) {\r\n        //if an ant was uncovered\r\n        if (updateAction.square.ant) {\r\n          roundCtx.set.lost();\r\n          updateGrid = detonateAnts(updateGrid, boardState.parameters.antList);\r\n        }\r\n        //if the last non-ant was uncovered\r\n        if (\r\n          checkForWin(updateGrid, boardState.parameters) &&\r\n          !updateAction.square.ant\r\n        ) {\r\n          updateAction.face = faces.shades;\r\n          roundCtx.set.won();\r\n        }\r\n        //if a square with no nearby ants was uncovered\r\n        if (updateAction.square.nearbyAnts === 0) {\r\n          updateGrid = uncoverNeighbors(updateAction.square, updateGrid);\r\n        }\r\n      }\r\n      dispatchBoard({\r\n        type: \"UPDATE_BOARD\",\r\n        payload: {\r\n          board: updateGrid,\r\n          face: updateAction.face,\r\n          flags: updateAction.flags,\r\n        },\r\n      });\r\n    },\r\n    [boardState, roundCtx]\r\n  );\r\n\r\n  const handleFaceChange = (newFace) => {\r\n    dispatchBoard({ type: \"SET_FACE\", payload: newFace });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //reset board if the level has changed or if the round shouldn't be started\r\n    if (\r\n      paramCtx.level !== boardState.level ||\r\n      (!roundCtx.ready && !roundCtx.started && boardState.board.length > 0)\r\n    ) {\r\n      restartRound();\r\n    }\r\n  }, [paramCtx.level, boardState.level, boardState.board, roundCtx, restartRound]);\r\n  return (\r\n    <article className={styles.gameWrapper}>\r\n        <Controls\r\n          startGame={onStart}\r\n          inProgress={roundCtx.ready}\r\n          face={boardState.face}\r\n          flags={boardState.flags}\r\n          firstClick={roundCtx.started}\r\n        />\r\n        <section className={styles.boardWrapper}>\r\n          {boardState.board ? (\r\n            <RowWrapper\r\n              boardGrid={boardState.board}\r\n              handleSquareClick={handleSquareClick}\r\n              setFace={handleFaceChange}\r\n              gameInProgress={roundCtx.ready}\r\n            />\r\n          ) : null}\r\n        </section>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import Overlay from '../Overlay/Overlay';\r\nimport MenuBar from \"../../WindowHeader/MenuBar/MenuBar\";\r\nimport Board from \"../../Game/Board/Board\";\r\nimport styles from \"./Window.module.css\";\r\n\r\nconst Window = () => {\r\n\r\n  return (\r\n    <main className={styles.window}>\r\n      <Overlay />\r\n      <MenuBar />\r\n      <Board />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Window;\r\n","export default __webpack_public_path__ + \"static/media/win98Logo.c4af9ed5.png\";","import win98logo from \"../../../imgs/win98Logo.png\";\r\nimport { squares } from \"../../../utils/logic/icons\";\r\nimport styles from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={styles.bg__footer}>\r\n      <button id=\"windows_start\" className={styles.startButton}>\r\n        <img src={win98logo} alt=\"Windows 98 Logo\" /> Start\r\n      </button>\r\n      <button\r\n        id=\"antsweeper_min\"\r\n        className={`button--focus ${styles.gamewindowButton}`}\r\n      >\r\n        {String.fromCharCode(...squares.ant)} Antsweeper\r\n      </button>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Window from '../Window/Window';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport { useContext } from 'react';\r\nimport paramContext from '../../../utils/store/paramsContext';\r\nimport '../../../style/levels.css'\r\n\r\n// import styles from './App.module.css';\r\n\r\nfunction App() {\r\n  const paramCtx = useContext(paramContext)\r\n  return (\r\n    <div className={paramCtx.level}>\r\n      <Window />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style/index.css\";\r\nimport \"./style/windows98.css\";\r\nimport \"./style/levels.css\";\r\n// import \"./style/breakpoints.css\";\r\nimport { ParamCtxProvider } from \"./utils/store/paramsContext\";\r\nimport App from \"./Components/Background/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ParamCtxProvider>\r\n      <App />\r\n    </ParamCtxProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}