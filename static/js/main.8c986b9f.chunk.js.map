{"version":3,"sources":["Components/Background/Nav/Nav.module.css","Components/Game/CalcScreen/CalcScreen.module.css","Components/Game/Controls/Controls.module.css","Components/Game/Board/Board.module.css","Components/Game/Square/Square.module.css","Components/Game/FaceButton/FaceButton.module.css","Components/Game/SquaresWrapper/SquaresWrapper.module.css","Components/Background/Window/Window.module.css","Components/Background/Footer/Footer.module.css","App.module.css","Components/Background/Nav/Nav.js","Components/Game/FaceButton/FaceButton.js","Components/Game/CalcScreen/CalcScreen.js","Components/Game/Controls/Controls.js","Components/Game/utils/icons.js","Components/Game/utils/read.js","Components/Game/Square/Square.js","Components/Game/SquaresWrapper/SquaresWrapper.js","Components/Game/utils/helpers.js","Components/Game/utils/create.js","Components/Game/Board/Board.js","Components/Background/Window/Window.js","Components/Background/Footer/Footer.js","App.js","index.js"],"names":["module","exports","Nav","className","styles","page_nav","menu_bar","menu_bar__left","String","fromCharCode","game_title","menu_bar__right","wc_box","disabled","wc_minimize","wc_maximize","wc_close","dropdown_menu","dropdown_choice","FaceButton","props","control_button","onClick","face","CalcScreen","displayNum","display","toString","padStart","split","calc_screen","id","map","digit","digitIdx","calc_screen__digit","num","num_top","digit_half","num_bottom","Controls","board_controls","calc_screen__wrapper","inProgress","flags","face_button__wrapper","startGame","squares","unclicked","clicked","ant","flag","faces","sleeping","smiling","yelling","upsideDown","exploded","shades","xEyes","sweating","winking","squareHandler","squareResponse","whichClick","whichFace","which","touchStart","flagged","touchEnd","count","console","log","mouseDown","whichNum","squareProps","boardHandler","routeClick","clickedSquare","remFlags","leftClick","rightClick","sq","revealed","square","continue","nearbyAnts","wasClicked","clickType","wasTouched","touchLength","Square","countRef","useRef","reset","parseClick","event","eventString","gameOver","nativeEvent","downResult","changeFace","updateSquare","parseTouch","current","setInterval","clearInterval","endResult","leftOrRight","row","col","grid_square","clicked_square","onMouseDown","e","onMouseUp","undefined","onTouchStart","onTouchEnd","onContextMenu","preventDefault","Array","isArray","SquaresWrapper","boardGrid","index","board_row","key","handleSquareClick","setFace","gameInProgress","buildRow","myIndex","length","buildBlankBoard","rows","cols","from","rowIndex","colIndex","neighbors","buildSquare","buildAnthill","ants","starterArray","idx","i","array","j","Math","floor","random","shuffle","findNeighbors","board","forEach","thisRow","cell","thisCol","numAnts","neighborhood","wholeBoard","rowAbove","myRow","rowBelow","concat","buildNeighborhood","filter","el","boardBuilder","initBoard","cellCount","antArray","counter","assignAnts","Board","useState","setBoardGrid","setGameInProgress","gameParams","setFlags","useCallback","updateGrid","updateAction","window__inner","board__outer","board__inner","Window","main_window","Footer","windows_footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c986b9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_nav\":\"Nav_page_nav__vDmiy\",\"menu_bar\":\"Nav_menu_bar__1GFe8\",\"menu_bar__left\":\"Nav_menu_bar__left__2-N_-\",\"game_title\":\"Nav_game_title__1jH2S\",\"menu_bar__right\":\"Nav_menu_bar__right__1h9Yg\",\"windows95_button\":\"Nav_windows95_button__1EptJ\",\"wc_box\":\"Nav_wc_box__1UbMO\",\"wc_minimize\":\"Nav_wc_minimize__3_MRO\",\"wc_maximize\":\"Nav_wc_maximize__229wl\",\"wc_close\":\"Nav_wc_close__2orTD\",\"dropdown_menu\":\"Nav_dropdown_menu__FWZOg\",\"dropdown_choice\":\"Nav_dropdown_choice__1O6zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calc_screen\":\"CalcScreen_calc_screen__3tjOL\",\"calc_screen__digit\":\"CalcScreen_calc_screen__digit__pVuWc\",\"digit_half\":\"CalcScreen_digit_half__tHRsU\",\"digit_0\":\"CalcScreen_digit_0__1B8dK\",\"num_top\":\"CalcScreen_num_top__1L84O\",\"num_bottom\":\"CalcScreen_num_bottom__1Ml-A\",\"digit_4\":\"CalcScreen_digit_4__1Ng4d\",\"digit_1\":\"CalcScreen_digit_1__3hmyY\",\"digit_7\":\"CalcScreen_digit_7__fJeE-\",\"digit_2\":\"CalcScreen_digit_2__11c0d\",\"digit_5\":\"CalcScreen_digit_5__3bn83\",\"digit_3\":\"CalcScreen_digit_3__2pnmt\",\"digit_9\":\"CalcScreen_digit_9__EzkXc\",\"digit_6\":\"CalcScreen_digit_6__1tb4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_controls\":\"Controls_board_controls__Ccfad\",\"calc_screen__wrapper\":\"Controls_calc_screen__wrapper__2NflD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window__inner\":\"Board_window__inner__aoiFq\",\"board__outer\":\"Board_board__outer__3tOml\",\"board__inner\":\"Board_board__inner__3wIj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_square\":\"Square_grid_square__1bEeJ\",\"clicked_square\":\"Square_clicked_square__3OEAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control_button\":\"FaceButton_control_button__1J2Mc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_row\":\"SquaresWrapper_board_row__2C4Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_window\":\"Window_main_window___OveE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"windows_footer\":\"Footer_windows_footer__1_U7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__23Vul\"};","import styles from \"./Nav.module.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <header className={styles.page_nav}>\r\n      <section className={styles.menu_bar}>\r\n        <span className={styles.menu_bar__left}>\r\n          {String.fromCharCode(\"0xD83D\", \"0xDC1C\")}\r\n          <span className={styles.game_title}>Antsweeper</span>\r\n        </span>\r\n        <span className={`${styles.menu_bar__right} ${styles.wc_box}`} disabled>\r\n          <button className={styles.wc_minimize}></button>\r\n          <button className={styles.wc_maximize}></button>\r\n          <button className={styles.wc_close}></button>\r\n        </span>\r\n      </section>\r\n      <section className={styles.dropdown_menu}>\r\n        <button className={styles.dropdown_choice}>Game</button>\r\n        <button className={styles.dropdown_choice}>Help</button>\r\n      </section>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import styles from \"./FaceButton.module.css\";\r\n\r\nconst FaceButton = (props) => {\r\n//   const clickHandler = () => {\r\n    // currentFace = [\"0xD83D, 0xDE31\"];\r\n    // props.startGame();\r\n//   };\r\n  return (\r\n    <button\r\n      className={`windows95 ${styles.control_button}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {String.fromCharCode(props.face[0], props.face[1])}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FaceButton;\r\n","import styles from \"./CalcScreen.module.css\";\r\n\r\nconst assessDigit = (num) => {\r\n  return (\"digit_\" + num.toString());\r\n}\r\n\r\nconst CalcScreen = (props) => {\r\n  let displayNum = props.display.toString().padStart(3, \"0\").split(\"\");\r\n\r\n  if (!displayNum || (displayNum === \"off\")) {\r\n    displayNum = [\"8\", \"8\", \"8\"];\r\n  }\r\n  \r\n  return (\r\n    <section className={styles.calc_screen} id={props.id}>\r\n      {displayNum.map((digit, digitIdx) => (\r\n        <div\r\n          key={`${props.id}-digit-${digitIdx}`}\r\n          className={`${styles.calc_screen__digit} ${styles[assessDigit(digit)]}`}\r\n        >\r\n          <div className={`${styles.num_top} ${styles.digit_half}`}></div>\r\n          <div className={`${styles.num_bottom} ${styles.digit_half}`}></div>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CalcScreen;\r\n","import FaceButton from \"../FaceButton/FaceButton\";\r\nimport CalcScreen from \"../CalcScreen/CalcScreen\";\r\nimport styles from \"./Controls.module.css\";\r\nconst Controls = (props) => {\r\n  return (\r\n    <nav className={styles.board_controls}>\r\n      <div className={styles.calc_screen__wrapper}>\r\n        <CalcScreen id={\"flags\"} display={props.inProgress ? props.flags : \"off\"} />\r\n      </div>\r\n      <div className={styles.face_button__wrapper}>\r\n        <FaceButton onClick={props.startGame} face={props.face} />\r\n      </div>\r\n      <div className={styles.calc_screen__wrapper}>\r\n        <CalcScreen id={\"timer\"} display={\"off\"} />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","//img directories\r\nexport const squares = {\r\n    unclicked: \"?\",\r\n    clicked: \"\",\r\n    ant: [\"0xD83D\", \"0xDC1C\"],\r\n    flag: [\"0xD83D\", \"0xDEA9\"],\r\n}\r\n\r\nexport const faces = {\r\n    sleeping: [\"0xD83D\", \"0xDE34\"],\r\n    smiling: [\"0xD83D\", \"0xDE0A\"],\r\n    yelling: [\"0xD83D\", \"0xDE31\"],\r\n    upsideDown: [\"0xD83D\", \"0xDE43\"],\r\n    exploded: [\"0xD83E\", \"0xDD2F\"],\r\n    shades: [\"0xD83D\", \"0xDE0E\"],\r\n    xEyes: [\"0xD83D\", \"0xDE35\"],\r\n    sweating: [\"0xD83D\", \"0xDE13\"],\r\n    winking: [\"0xD83D\", \"0xDE09\"]\r\n}","import { squares, faces } from \"./icons\";\r\n\r\n// returns { which: \"left\"/\"right\", face : \"[face code]\"}\r\nexport const squareHandler = {\r\n  squareResponse: (whichClick, whichFace) => {\r\n    return { which: whichClick, face: whichFace };\r\n  },\r\n  touchStart: (flagged) => {\r\n    if (flagged) {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.winking);\r\n    } else {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.yelling);\r\n    }\r\n  },\r\n  touchEnd: (count) => {\r\n    console.log(\"touch end count is \" + count);\r\n    //since touchStart doesn't put the face back on :D like mouseDown does\r\n    //touchEnd has to do it!\r\n    if (count > 0) {\r\n      return squareHandler.squareResponse(\"right\", faces.smiling);\r\n    } else {\r\n      return squareHandler.squareResponse(\"left\", faces.smiling);\r\n    }\r\n  },\r\n  mouseDown: (whichNum, squareProps) => {\r\n    if (whichNum === 1) {\r\n      //left click\r\n      if (squareProps.flagged) {\r\n        return squareHandler.squareResponse(\"left\", faces.winking);\r\n      } else {\r\n        //yell until mouse release\r\n        return squareHandler.squareResponse(\"left\", faces.yelling);\r\n      }\r\n    } else {\r\n      if (squareProps.flagged) {\r\n        //removing flag\r\n        return squareHandler.squareResponse(\"right\", faces.sweating);\r\n      } else {\r\n        //flag placement\r\n        return squareHandler.squareResponse(\"right\", faces.smiling);\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n//returns { square: {updated square}, face: [face code], continue: bool }\r\nexport const boardHandler = {\r\n  routeClick: (clickedSquare, whichClick, remFlags) => {\r\n    if (whichClick === \"left\") {\r\n      return boardHandler.leftClick(clickedSquare, remFlags);\r\n    } else if (whichClick === \"right\") {\r\n      return boardHandler.rightClick(clickedSquare, remFlags);\r\n    }\r\n  },\r\n  leftClick: (sq, remFlags) => {\r\n    if (sq.flagged || sq.revealed) {\r\n      return { square: sq, face: faces.smiling, continue: true };\r\n    } else {\r\n      if (sq.ant) {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: squares.ant,\r\n            revealed: true,\r\n          },\r\n          face: faces.exploded,\r\n          continue: false,\r\n          flags: remFlags,\r\n        };\r\n      } else {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n            revealed: true,\r\n          },\r\n          face: faces.smiling,\r\n          continue: true,\r\n          flags: remFlags,\r\n        };\r\n      }\r\n    }\r\n  },\r\n  rightClick: (sq, remFlags) => {\r\n    //removing a flag\r\n    if (sq.flagged) {\r\n      return {\r\n        square: {\r\n          ...sq,\r\n          display: squares.unclicked,\r\n          revealed: false,\r\n          flagged: false,\r\n        },\r\n        face: faces.smiling,\r\n        continue: true,\r\n        flags: remFlags + 1,\r\n      };\r\n    } else {\r\n      if (remFlags > 0) {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: squares.flag,\r\n            revealed: false,\r\n            flagged: true,\r\n          },\r\n          face: faces.smiling,\r\n          continue: true,\r\n          flags: remFlags - 1,\r\n        };\r\n      } else {\r\n        //player can't place more flags than ants\r\n        return {\r\n          square: { ...sq },\r\n          face: faces.smiling,\r\n          continue: true,\r\n          flags: remFlags,\r\n        };\r\n      }\r\n    }\r\n  },\r\n};\r\n","import { useRef/*, useEffect*/ } from \"react\";\r\nimport { squareHandler } from \"../utils/read\";\r\nimport styles from \"./Square.module.css\";\r\n\r\n//declared outside of the component in case it might rerender & reset to default\r\n//don't need it in state because state triggers a UI change (rerender)\r\nlet wasClicked = false;\r\nlet clickType = \"left\";\r\nlet wasTouched = false;\r\nlet touchLength = 0;\r\n\r\nfunction Square(props) {\r\n  const countRef = useRef();\r\n\r\n  const reset = () => {\r\n    wasClicked = false;\r\n    clickType = \"left\";\r\n    wasTouched = false;\r\n    touchLength = 0;\r\n  };\r\n\r\n  const parseClick = (event, eventString) => {\r\n    //restore defaults real quick for people playing multiple games\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    if (\r\n      wasTouched ||\r\n      props.sq.revealed ||\r\n      (props.sq.flagged && event.nativeEvent.which === 1)\r\n    ) {\r\n      //do nothing if user is mobile, if square is already revealed,\r\n      //or if flagged and this is a left click\r\n      return;\r\n    } else if (eventString === \"down\") {\r\n      wasClicked = true;\r\n      console.log(\"mouse down on \" + props.id);\r\n      //returns which: left or right click\r\n      //and face: what the face button should be (just :o since this is mousedown, not up)\r\n      let downResult = squareHandler.mouseDown(event.nativeEvent.which, props);\r\n      clickType = downResult.which;\r\n      props.changeFace(downResult.face);\r\n    } else if (eventString === \"up\") {\r\n      console.log(\"mouse up on \" + props.id);\r\n      if (!wasTouched) {\r\n        updateSquare(clickType);\r\n      }\r\n    }\r\n  };\r\n\r\n  const parseTouch = (eventString) => {\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    //prevents a \"double click\" with touch firing and then mouse click firing\r\n    if (props.gameOver || wasClicked || props.sq.revealed) {\r\n      //do nothing if game is over, if user is mobile, or if square is already revealed\r\n      return;\r\n    } else if (eventString === \"start\") {\r\n      wasTouched = true;\r\n      console.log(\"touch started on \" + props.id);\r\n      props.changeFace(squareHandler.touchStart(props.sq.flagged).face);\r\n      countRef.current = setInterval(() => {\r\n        touchLength++;\r\n        console.log(touchLength);\r\n      }, 800);\r\n    } else if (eventString === \"end\") {\r\n      console.log(\"touch ended on \" + props.id);\r\n      //stops timer\r\n      clearInterval(countRef.current);\r\n      //returns which: left or right click\r\n      let endResult = squareHandler.touchEnd(touchLength);\r\n      //\"left clicks\" shouldn't impact a flagged square\r\n      if (props.sq.flagged && endResult.which === \"left\") {\r\n        props.changeFace(endResult.face); //flagged squares don't get processed by Board\r\n        return;\r\n      } else {\r\n        updateSquare(endResult.which);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateSquare = (leftOrRight) => {\r\n    //reset defaults for this square, but not wasClicked/wasTouched\r\n    //because that should stay the same across the game\r\n    clickType = \"left\";\r\n    touchLength = 0;\r\n    props.onClick(props.sq.row, props.sq.col, leftOrRight);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`${styles.grid_square} windows95 ${\r\n        props.sq.revealed && styles.clicked_square\r\n      }`}\r\n      onMouseDown={(e) => parseClick(e, \"down\")}\r\n      onMouseUp={!wasTouched ? (e) => parseClick(e, \"up\") : undefined}\r\n      onTouchStart={() => parseTouch(\"start\")}\r\n      onTouchEnd={!wasClicked ? () => parseTouch(\"end\") : undefined}\r\n      onContextMenu={(e) => e.preventDefault()}\r\n    >\r\n      {Array.isArray(props.sq.display)\r\n        ? String.fromCharCode(props.sq.display[0], props.sq.display[1])\r\n        : props.sq.display}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import Square from \"../Square/Square\";\r\nimport styles from \"./SquaresWrapper.module.css\";\r\n\r\nconst SquaresWrapper = (props) => {\r\n  return props.boardGrid.map((row, index) => (\r\n    <div className={styles.board_row} key={`row-${index}`}>\r\n      {row.map((square) => (\r\n        <Square\r\n          key={square.key}\r\n          id={square.key}\r\n          sq={square}\r\n          onClick={props.handleSquareClick}\r\n          changeFace={props.setFace}\r\n          gameOver={!props.gameInProgress}\r\n        />\r\n      ))}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default SquaresWrapper;\r\n","//the Fisher-Yates shuffle\r\nexport const shuffle = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\n//takes an array and an index and returns\r\n//[the value of the index before, the specified index, and the next index]\r\n//or null if there is no index before or after\r\n// (sort of like array.slice but replacing a non-existent or negative index with null)\r\nconst buildRow = (row, myIndex) => {\r\n  return [\r\n    myIndex - 1 >= 0 ? row[myIndex - 1] : null,\r\n    row[myIndex],\r\n    myIndex + 1 < row.length ? row[myIndex + 1] : null,\r\n  ];\r\n};\r\n\r\n//takes an array of arrays and specified \"row\" and \"col\" indeces\r\n//and returns an array of nine values: essentially the value of the specified \"cell\"\r\n//and the values of all the cells that \"touch\" it in the \"grid\"\r\nexport const buildNeighborhood = (wholeBoard, thisRow, thisCol) => {\r\n  let rowAbove =\r\n    thisRow - 1 >= 0\r\n      ? buildRow(wholeBoard[thisRow - 1], thisCol)\r\n      : [null, null, null];\r\n  let myRow = buildRow(wholeBoard[thisRow], thisCol);\r\n  let rowBelow =\r\n    thisRow + 1 < wholeBoard.length\r\n      ? buildRow(wholeBoard[thisRow + 1], thisCol)\r\n      : [null, null, null];\r\n  return rowAbove.concat(myRow, rowBelow);\r\n};\r\n","import { squares } from \"./icons\";\r\nimport { shuffle, buildNeighborhood } from \"./helpers\";\r\n\r\n//define what each \"square\" should start out with in Board state\r\nconst buildSquare = (row, col) => {\r\n  return {\r\n    key: \"cell-\" + row + \"-\" + col,\r\n    row: row,\r\n    col: col,\r\n    ant: false,\r\n    revealed: false,\r\n    display: squares.unclicked,\r\n    flagged: false,\r\n    nearbyAnts: 0,\r\n    neighbors: [],\r\n  };\r\n};\r\n\r\n//make an array of arrays of \"squares\"\r\nconst buildBlankBoard = (rows, cols) => {\r\n  return Array.from(Array(rows), (row, rowIndex) => {\r\n    return Array.from(Array(cols), (col, colIndex) =>\r\n      buildSquare(rowIndex, colIndex)\r\n    );\r\n  });\r\n};\r\n\r\n//make an array of true bools\r\n//with falses equal to the number of ants shuffled in\r\nconst buildAnthill = (length, ants) => {\r\n  let starterArray = Array.from(Array(length), (square, idx) => {\r\n    return { id: idx + 1, ant: false };\r\n  });\r\n  for (let i = 0; i < ants; i++) {\r\n    starterArray[i].ant = true;\r\n  }\r\n  return shuffle(starterArray);\r\n};\r\n\r\nconst assignAnts = (initBoard, cellCount, numAnts) => {\r\n  let antArray = buildAnthill(cellCount, numAnts);\r\n  let counter = cellCount - 1;\r\n  initBoard.forEach((row) => {\r\n    row.forEach((cell) => {\r\n      cell.ant = antArray[counter].ant;\r\n      counter--;\r\n    });\r\n  });\r\n  return findNeighbors(initBoard);\r\n};\r\n\r\nconst findNeighbors = (board) => {\r\n  board.forEach((row, thisRow) => {\r\n    row.forEach((cell, thisCol) => {\r\n      let numAnts = 0;\r\n      let neighborhood = buildNeighborhood(board, thisRow, thisCol);\r\n      neighborhood.forEach((square) => {\r\n        if (square && square.ant) {\r\n          numAnts++;\r\n        }\r\n      });\r\n      cell.nearbyAnts = numAnts;\r\n      cell.neighbors = neighborhood.filter((el) => el !== null);\r\n    });\r\n  });\r\n  return board;\r\n};\r\n\r\n//called by Board\r\nexport const boardBuilder = ({ rows, cols, ants }) => {\r\n  let starterBoard = buildBlankBoard(rows, cols)\r\n  return assignAnts(starterBoard, rows * cols, ants);\r\n};\r\n","import { useState, useCallback } from \"react\";\r\n\r\nimport Controls from \"../Controls/Controls\";\r\nimport SquaresWrapper from \"../SquaresWrapper/SquaresWrapper\";\r\n\r\nimport { faces } from \"../utils/icons\";\r\nimport { boardBuilder } from \"../utils/create\";\r\nimport { boardHandler } from \"../utils/read\";\r\n// import { uncoverNeighbors } from \"../utils/update\";\r\n\r\nimport styles from \"./Board.module.css\";\r\n\r\nconst Board = () => {\r\n  const [boardGrid, setBoardGrid] = useState([]);\r\n  const [gameInProgress, setGameInProgress] = useState(false);\r\n  const [gameParams, setGameParams] = useState({\r\n    rows: 8,\r\n    cols: 8,\r\n    ants: 10,\r\n  });\r\n  const [face, setFace] = useState(faces.sleeping);\r\n  const [flags, setFlags] = useState(0);\r\n\r\n  const onStart = () => {\r\n    setBoardGrid([]);\r\n    setBoardGrid(boardBuilder(gameParams));\r\n    setGameInProgress(true);\r\n    setFace(faces.smiling);\r\n    setFlags(gameParams.ants);\r\n  };\r\n\r\n  const handleSquareClick = useCallback(\r\n    (rowIndex, colIndex, whichClick) => {\r\n      let updateGrid = [...boardGrid];\r\n      let clickedSquare = boardGrid[rowIndex][colIndex];\r\n      console.log(\"handling a \" + whichClick + \" click for:\");\r\n      console.log(clickedSquare);\r\n      let updateAction = boardHandler.routeClick(\r\n        clickedSquare,\r\n        whichClick,\r\n        flags\r\n      );\r\n      updateGrid[rowIndex][colIndex] = updateAction.square;\r\n      if (updateAction.square.nearbyAnts === 0) {\r\n        // updateAction.square.neighbors.forEach((neighborsq) => {\r\n          // updateGrid = uncoverNeighbors(updateGrid[neighborsq.row][neighborsq.col], updateGrid)\r\n        // })\r\n      }\r\n      setBoardGrid(updateGrid);\r\n      setFace(updateAction.face);\r\n      setFlags(updateAction.flags);\r\n      setGameInProgress(updateAction.continue);\r\n    },\r\n    [boardGrid, flags]\r\n  );\r\n\r\n  return (\r\n    <section className={styles.window__inner}>\r\n      <div className={styles.board__outer}>\r\n        <Controls\r\n          startGame={onStart}\r\n          inProgress={gameInProgress}\r\n          face={face}\r\n          flags={flags}\r\n        />\r\n        <section className={styles.board__inner}>\r\n          {boardGrid ? (\r\n            <SquaresWrapper\r\n              boardGrid={boardGrid}\r\n              handleSquareClick={handleSquareClick}\r\n              setFace={setFace}\r\n              gameInProgress={gameInProgress}\r\n            />\r\n          ) : null}\r\n        </section>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import Nav from \"../Nav/Nav\";\r\nimport Board from \"../../Game/Board/Board\";\r\n\r\nimport styles from \"./Window.module.css\";\r\n\r\nconst Window = () => {\r\n  return (\r\n    <main className={`windows95 ${styles.main_window}`}>\r\n      <Nav />\r\n      <Board />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Window;\r\n","import styles from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={`windows95 ${styles.windows_footer}`}>\r\n      <span></span>\r\n      <span></span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Window from './Components/Background/Window/Window';\nimport Footer from './Components/Background/Footer/Footer';\n\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <Window />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}