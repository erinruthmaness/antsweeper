{"version":3,"sources":["Components/Background/Nav/Nav.module.css","Components/Game/Controls/Controls.module.css","Components/Game/Board/Board.module.css","Components/Game/Square/Square.module.css","Components/Game/FaceButton/FaceButton.module.css","Components/Game/CalcScreen/CalcScreen.module.css","Components/Game/SquaresWrapper/SquaresWrapper.module.css","Components/Background/Window/Window.module.css","Components/Background/Footer/Footer.module.css","App.module.css","Components/Background/Nav/Nav.js","Components/Game/FaceButton/FaceButton.js","Components/Game/CalcScreen/CalcScreen.js","Components/Game/Controls/Controls.js","Components/Game/utils/icons.js","Components/Game/utils/read.js","Components/Game/Square/Square.js","Components/Game/SquaresWrapper/SquaresWrapper.js","Components/Game/utils/helpers.js","Components/Game/utils/create.js","Components/Game/Board/Board.js","Components/Background/Window/Window.js","Components/Background/Footer/Footer.js","App.js","index.js"],"names":["module","exports","Nav","className","styles","page_nav","menu_bar","menu_bar__left","String","fromCharCode","game_title","menu_bar__right","wc_box","disabled","wc_minimize","wc_maximize","wc_close","dropdown_menu","dropdown_choice","FaceButton","props","control_button","onClick","face","CalcScreen","calc_screen","id","Controls","board_controls","calc_screen__wrapper","face_button__wrapper","startGame","squares","unclicked","clicked","ant","flag","faces","sleeping","smiling","yelling","upsideDown","exploded","shades","xEyes","sweating","winking","squareHandler","squareResponse","whichClick","whichFace","which","touchStart","flagged","touchEnd","count","console","log","mouseDown","whichNum","squareProps","sq","boardHandler","routeClick","clickedSquare","leftClick","rightClick","revealed","square","continue","display","neighbors","wasClicked","clickType","wasTouched","touchLength","Square","countRef","useRef","reset","parseClick","event","eventString","gameOver","nativeEvent","downResult","changeFace","updateSquare","parseTouch","current","setInterval","clearInterval","endResult","leftOrRight","col","row","grid_square","clicked_square","onMouseDown","e","onMouseUp","undefined","onTouchStart","onTouchEnd","onContextMenu","preventDefault","Array","isArray","SquaresWrapper","boardGrid","map","index","board_row","key","handleSquareClick","setFace","gameInProgress","buildRow","myIndex","length","buildBlankBoard","cols","rows","from","colIndex","rowIndex","buildSquare","buildAnthill","ants","starterArray","idx","i","array","j","Math","floor","random","shuffle","findNeighbors","board","forEach","thisRow","cell","thisCol","numAnts","neighborhood","wholeBoard","rowAbove","myRow","rowBelow","concat","buildNeighborhood","boardBuilder","blankBoard","boardWAnts","initBoard","cellCount","antArray","counter","assignAnts","finalBoard","gameParams","Board","useState","setBoardGrid","setGameInProgress","useCallback","updateGrid","updateAction","window__inner","board__outer","inProgress","board__inner","Window","main_window","Footer","windows_footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9865faa6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_nav\":\"Nav_page_nav__vDmiy\",\"menu_bar\":\"Nav_menu_bar__1GFe8\",\"menu_bar__left\":\"Nav_menu_bar__left__2-N_-\",\"game_title\":\"Nav_game_title__1jH2S\",\"menu_bar__right\":\"Nav_menu_bar__right__1h9Yg\",\"windows95_button\":\"Nav_windows95_button__1EptJ\",\"wc_box\":\"Nav_wc_box__1UbMO\",\"wc_minimize\":\"Nav_wc_minimize__3_MRO\",\"wc_maximize\":\"Nav_wc_maximize__229wl\",\"wc_close\":\"Nav_wc_close__2orTD\",\"dropdown_menu\":\"Nav_dropdown_menu__FWZOg\",\"dropdown_choice\":\"Nav_dropdown_choice__1O6zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_controls\":\"Controls_board_controls__Ccfad\",\"calc_screen__wrapper\":\"Controls_calc_screen__wrapper__2NflD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window__inner\":\"Board_window__inner__aoiFq\",\"board__outer\":\"Board_board__outer__3tOml\",\"board__inner\":\"Board_board__inner__3wIj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_square\":\"Square_grid_square__1bEeJ\",\"clicked_square\":\"Square_clicked_square__3OEAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control_button\":\"FaceButton_control_button__1J2Mc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calc_screen\":\"CalcScreen_calc_screen__3tjOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_row\":\"SquaresWrapper_board_row__2C4Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_window\":\"Window_main_window___OveE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"windows_footer\":\"Footer_windows_footer__1_U7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__23Vul\"};","import styles from \"./Nav.module.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <header className={styles.page_nav}>\r\n      <section className={styles.menu_bar}>\r\n        <span className={styles.menu_bar__left}>\r\n          {String.fromCharCode(\"0xD83D\", \"0xDC1C\")}\r\n          <span className={styles.game_title}>Antsweeper</span>\r\n        </span>\r\n        <span className={`${styles.menu_bar__right} ${styles.wc_box}`} disabled>\r\n          <button className={styles.wc_minimize}></button>\r\n          <button className={styles.wc_maximize}></button>\r\n          <button className={styles.wc_close}></button>\r\n        </span>\r\n      </section>\r\n      <section className={styles.dropdown_menu}>\r\n        <button className={styles.dropdown_choice}>Game</button>\r\n        <button className={styles.dropdown_choice}>Help</button>\r\n      </section>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import styles from \"./FaceButton.module.css\";\r\n\r\nconst FaceButton = (props) => {\r\n//   const clickHandler = () => {\r\n    // currentFace = [\"0xD83D, 0xDE31\"];\r\n    // props.startGame();\r\n//   };\r\n  return (\r\n    <button\r\n      className={`windows95 ${styles.control_button}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {String.fromCharCode(props.face[0], props.face[1])}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FaceButton;\r\n","import styles from \"./CalcScreen.module.css\";\r\n\r\nconst CalcScreen = (props) => {\r\n  return <section className={styles.calc_screen} id={props.id}></section>;\r\n};\r\n\r\nexport default CalcScreen;\r\n","import FaceButton from \"../FaceButton/FaceButton\";\r\nimport CalcScreen from '../CalcScreen/CalcScreen';\r\nimport styles from \"./Controls.module.css\";\r\nconst Controls = (props) => {\r\n  return (\r\n    <nav className={styles.board_controls}>\r\n      <div className={styles.calc_screen__wrapper}>\r\n      <CalcScreen id={\"score\"} />\r\n      </div>\r\n      <div className={styles.face_button__wrapper}>\r\n      <FaceButton onClick={props.startGame} face={props.face} />\r\n      </div>\r\n      <div className={styles.calc_screen__wrapper}>\r\n        <CalcScreen id={\"timer\"} />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","//img directories\r\nexport const squares = {\r\n    unclicked: \"?\",\r\n    clicked: \"\",\r\n    ant: [\"0xD83D\", \"0xDC1C\"],\r\n    flag: [\"0xD83D\", \"0xDEA9\"],\r\n}\r\n\r\nexport const faces = {\r\n    sleeping: [\"0xD83D\", \"0xDE34\"],\r\n    smiling: [\"0xD83D\", \"0xDE0A\"],\r\n    yelling: [\"0xD83D\", \"0xDE31\"],\r\n    upsideDown: [\"0xD83D\", \"0xDE43\"],\r\n    exploded: [\"0xD83E\", \"0xDD2F\"],\r\n    shades: [\"0xD83D\", \"0xDE0E\"],\r\n    xEyes: [\"0xD83D\", \"0xDE35\"],\r\n    sweating: [\"0xD83D\", \"0xDE13\"],\r\n    winking: [\"0xD83D\", \"0xDE09\"]\r\n}","import { squares, faces } from \"./icons\";\r\n\r\n// returns { which: \"left\"/\"right\", face : \"[face code]\"}\r\nexport const squareHandler = {\r\n  squareResponse: (whichClick, whichFace) => {\r\n    return { which: whichClick, face: whichFace };\r\n  },\r\n  touchStart: (flagged) => {\r\n    if (flagged) {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.winking);\r\n    } else {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.yelling);\r\n    }\r\n  },\r\n  touchEnd: (count) => {\r\n    console.log(\"touch end count is \" + count);\r\n    //since touchStart doesn't put the face back on :D like mouseDown does\r\n    //touchEnd has to do it!\r\n    if (count > 0) {\r\n      return squareHandler.squareResponse(\"right\", faces.smiling);\r\n    } else {\r\n      return squareHandler.squareResponse(\"left\", faces.smiling);\r\n    }\r\n  },\r\n  mouseDown: (whichNum, squareProps) => {\r\n    console.log(\"clicking \" + squareProps.id);\r\n    console.log(squareProps.sq);\r\n    if (whichNum === 1) {\r\n      //left click\r\n      if (squareProps.flagged) {\r\n        return squareHandler.squareResponse(\"left\", faces.winking);\r\n      } else {\r\n        //yell until mouse release\r\n        return squareHandler.squareResponse(\"left\", faces.yelling);\r\n      }\r\n    } else {\r\n      if (squareProps.flagged) {\r\n        //removing flag\r\n        return squareHandler.squareResponse(\"right\", faces.sweating);\r\n      } else {\r\n        //flag placement\r\n        return squareHandler.squareResponse(\"right\", faces.smiling);\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n//returns { square: {updated square}, face: [face code], continue: bool }\r\nexport const boardHandler = {\r\n  routeClick: (clickedSquare, whichClick) => {\r\n    console.log(\"handling a \" + whichClick + \" click for:\");\r\n    console.log(clickedSquare);\r\n    if (whichClick === \"left\") {\r\n      return boardHandler.leftClick(clickedSquare);\r\n    } else if (whichClick === \"right\") {\r\n      return boardHandler.rightClick(clickedSquare);\r\n    }\r\n  },\r\n  leftClick: (sq) => {\r\n    if (sq.flagged || sq.revealed) {\r\n      return { square: sq, face: faces.smiling, continue: true };\r\n    } else {\r\n      if (sq.ant) {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: squares.ant,\r\n            revealed: true,\r\n          },\r\n          face: faces.exploded,\r\n          continue: false,\r\n        };\r\n      } else {\r\n        return {\r\n          square: {\r\n            ...sq,\r\n            display: sq.neighbors,\r\n            revealed: true,\r\n          },\r\n          face: faces.smiling,\r\n          continue: true,\r\n        };\r\n      }\r\n    }\r\n  },\r\n  rightClick: (sq) => {\r\n    if (sq.flagged) {\r\n      return {\r\n        square: {\r\n          ...sq,\r\n          display: squares.unclicked,\r\n          revealed: false,\r\n          flagged: false,\r\n        },\r\n        face: faces.smiling,\r\n        continue: true,\r\n      };\r\n    } else {\r\n      return {\r\n        square: {\r\n          ...sq,\r\n          display: squares.flag,\r\n          revealed: false,\r\n          flagged: true,\r\n        },\r\n        face: faces.smiling,\r\n        continue: true,\r\n      };\r\n    }\r\n  },\r\n};\r\n","import { useRef/*, useEffect*/ } from \"react\";\r\nimport { squareHandler } from \"../utils/read\";\r\nimport styles from \"./Square.module.css\";\r\n\r\n//declared outside of the component in case it might rerender & reset to default\r\n//don't need it in state because state triggers a UI change (rerender)\r\nlet wasClicked = false;\r\nlet clickType = \"left\";\r\nlet wasTouched = false;\r\nlet touchLength = 0;\r\n\r\nfunction Square(props) {\r\n  const countRef = useRef();\r\n\r\n  const reset = () => {\r\n    wasClicked = false;\r\n    clickType = \"left\";\r\n    wasTouched = false;\r\n    touchLength = 0;\r\n  };\r\n\r\n  const parseClick = (event, eventString) => {\r\n    //restore defaults real quick for people playing multiple games\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    if (\r\n      wasTouched ||\r\n      props.sq.revealed ||\r\n      (props.sq.flagged && event.nativeEvent.which === 1)\r\n    ) {\r\n      //do nothing if user is mobile, if square is already revealed,\r\n      //or if flagged and this is a left click\r\n      return;\r\n    } else if (eventString === \"down\") {\r\n      wasClicked = true;\r\n      console.log(\"mouse down on \" + props.id);\r\n      //returns which: left or right click\r\n      //and face: what the face button should be (just :o since this is mousedown, not up)\r\n      let downResult = squareHandler.mouseDown(event.nativeEvent.which, props);\r\n      clickType = downResult.which;\r\n      props.changeFace(downResult.face);\r\n    } else if (eventString === \"up\") {\r\n      console.log(\"mouse up on \" + props.id);\r\n      if (!wasTouched) {\r\n        updateSquare(clickType);\r\n      }\r\n    }\r\n  };\r\n\r\n  const parseTouch = (eventString) => {\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    //prevents a \"double click\" with touch firing and then mouse click firing\r\n    if (props.gameOver || wasClicked || props.sq.revealed) {\r\n      //do nothing if game is over, if user is mobile, or if square is already revealed\r\n      return;\r\n    } else if (eventString === \"start\") {\r\n      wasTouched = true;\r\n      console.log(\"touch started on \" + props.id);\r\n      props.changeFace(squareHandler.touchStart(props.sq.flagged).face);\r\n      countRef.current = setInterval(() => {\r\n        touchLength++;\r\n        console.log(touchLength);\r\n      }, 800);\r\n    } else if (eventString === \"end\") {\r\n      console.log(\"touch ended on \" + props.id);\r\n      //stops timer\r\n      clearInterval(countRef.current);\r\n      //returns which: left or right click\r\n      let endResult = squareHandler.touchEnd(touchLength);\r\n      //\"left clicks\" shouldn't impact a flagged square\r\n      if (props.sq.flagged && endResult.which === \"left\") {\r\n        props.changeFace(endResult.face); //flagged squares don't get processed by Board\r\n        return;\r\n      } else {\r\n        updateSquare(endResult.which);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateSquare = (leftOrRight) => {\r\n    //reset defaults for this square, but not wasClicked/wasTouched\r\n    //because that should stay the same across the game\r\n    clickType = \"left\";\r\n    touchLength = 0;\r\n    props.onClick(props.sq.col, props.sq.row, leftOrRight);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`${styles.grid_square} windows95 ${\r\n        props.sq.revealed && styles.clicked_square\r\n      }`}\r\n      onMouseDown={(e) => parseClick(e, \"down\")}\r\n      onMouseUp={!wasTouched ? (e) => parseClick(e, \"up\") : undefined}\r\n      onTouchStart={() => parseTouch(\"start\")}\r\n      onTouchEnd={!wasClicked ? () => parseTouch(\"end\") : undefined}\r\n      onContextMenu={(e) => e.preventDefault()}\r\n    >\r\n      {Array.isArray(props.sq.display)\r\n        ? String.fromCharCode(props.sq.display[0], props.sq.display[1])\r\n        : props.sq.display}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import Square from \"../Square/Square\";\r\nimport styles from \"./SquaresWrapper.module.css\";\r\n\r\nconst SquaresWrapper = (props) => {\r\n  return props.boardGrid.map((row, index) => (\r\n    <div className={styles.board_row} key={`row-${index}`}>\r\n      {row.map((square) => (\r\n        <Square\r\n          key={square.key}\r\n          id={square.key}\r\n          sq={square}\r\n          onClick={props.handleSquareClick}\r\n          changeFace={props.setFace}\r\n          gameOver={!props.gameInProgress}\r\n        />\r\n      ))}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default SquaresWrapper;\r\n","//the Fisher-Yates shuffle\r\nexport const shuffle = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\n//takes an array and an index and returns\r\n//[the value of the index before, the specified index, and the next index]\r\n//or null if there is no index before or after\r\n// (sort of like array.slice but replacing a non-existent or negative index with null)\r\nconst buildRow = (row, myIndex) => {\r\n  return [\r\n    myIndex - 1 >= 0 ? row[myIndex - 1] : null,\r\n    row[myIndex],\r\n    myIndex + 1 < row.length ? row[myIndex + 1] : null,\r\n  ];\r\n};\r\n\r\n//takes an array of arrays and specified \"row\" and \"col\" indeces\r\n//and returns an array of nine values: essentially the value of the specified \"cell\"\r\n//and the values of all the cells that \"touch\" it in the \"grid\"\r\nexport const buildNeighborhood = (wholeBoard, thisRow, thisCol) => {\r\n  let rowAbove =\r\n    thisRow - 1 >= 0\r\n      ? buildRow(wholeBoard[thisRow - 1], thisCol)\r\n      : [null, null, null];\r\n  let myRow = buildRow(wholeBoard[thisRow], thisCol);\r\n  let rowBelow =\r\n    thisRow + 1 < wholeBoard.length\r\n      ? buildRow(wholeBoard[thisRow + 1], thisCol)\r\n      : [null, null, null];\r\n  return rowAbove.concat(myRow, rowBelow);\r\n};\r\n","import { squares } from \"./icons\";\r\nimport { shuffle, buildNeighborhood } from \"./helpers\";\r\n\r\n//define what each \"square\" should start out with in Board state\r\nconst buildSquare = (col, row) => {\r\n  return {\r\n    key: \"cell-\" + col + \"-\" + row,\r\n    col: col,\r\n    row: row,\r\n    ant: false,\r\n    revealed: false,\r\n    display: squares.unclicked,\r\n    flagged: false,\r\n    neighbors: 0,\r\n  };\r\n};\r\n\r\n//make an array of arrays of \"squares\"\r\nconst buildBlankBoard = (cols, rows) => {\r\n  return Array.from(Array(cols), (col, colIndex) => {\r\n    return Array.from(Array(rows), (row, rowIndex) =>\r\n      buildSquare(colIndex, rowIndex)\r\n    );\r\n  });\r\n};\r\n\r\n//make an array of true bools\r\n//with falses equal to the number of ants shuffled in\r\nconst buildAnthill = (length, ants) => {\r\n  let starterArray = Array.from(Array(length), (square, idx) => {\r\n    return { id: idx + 1, ant: false };\r\n  });\r\n  for (let i = 0; i < ants; i++) {\r\n    starterArray[i].ant = true;\r\n  }\r\n  return shuffle(starterArray);\r\n};\r\n\r\nconst assignAnts = (initBoard, cellCount, numAnts) => {\r\n  let antArray = buildAnthill(cellCount, numAnts);\r\n  let counter = cellCount - 1;\r\n  initBoard.forEach((row) => {\r\n    row.forEach((cell) => {\r\n      cell.ant = antArray[counter].ant;\r\n      counter--;\r\n    });\r\n  });\r\n  return initBoard;\r\n};\r\n\r\nconst findNeighbors = (board) => {\r\n  console.log(\"hold up\");\r\n  board.forEach((row, thisRow) => {\r\n    console.log(\"row #\" + thisRow);\r\n    row.forEach((cell, thisCol) => {\r\n      console.log(\"col #\" + thisCol);\r\n      console.log(cell);\r\n      let numAnts = 0;\r\n      let neighborhood = buildNeighborhood(board, thisRow, thisCol);\r\n      console.log(neighborhood);\r\n      neighborhood.forEach((square) => {\r\n        if (square && square.ant) {\r\n          numAnts++;\r\n        }\r\n      });\r\n      cell.neighbors = numAnts;\r\n      console.log(cell);\r\n    });\r\n  });\r\n  return board;\r\n};\r\n\r\n//called by Board\r\nexport const boardBuilder = ({ cols, rows, ants }) => {\r\n  let blankBoard = buildBlankBoard(cols, rows);\r\n  console.log(blankBoard);\r\n  let boardWAnts = assignAnts(blankBoard, cols * rows, ants);\r\n  console.log(boardWAnts);\r\n  let finalBoard = findNeighbors(boardWAnts);\r\n  console.log(finalBoard);\r\n  return finalBoard;\r\n};\r\n","import { useState, useCallback } from \"react\";\r\n\r\nimport Controls from \"../Controls/Controls\";\r\nimport SquaresWrapper from \"../SquaresWrapper/SquaresWrapper\";\r\n\r\nimport { faces } from \"../utils/icons\";\r\nimport { boardBuilder } from \"../utils/create\";\r\nimport { boardHandler } from \"../utils/read\";\r\n\r\nimport styles from \"./Board.module.css\";\r\n\r\nlet gameParams = {\r\n  rows: 8,\r\n  cols: 8,\r\n  ants: 10,\r\n};\r\n\r\nconst Board = () => {\r\n  const [boardGrid, setBoardGrid] = useState([]);\r\n  const [gameInProgress, setGameInProgress] = useState(false);\r\n  const [face, setFace] = useState(faces.sleeping);\r\n\r\n  const onStart = () => {\r\n    setBoardGrid([]);\r\n    setBoardGrid(boardBuilder(gameParams));\r\n    setGameInProgress(true);\r\n    setFace(faces.smiling);\r\n  };\r\n\r\n  const handleSquareClick = useCallback(\r\n    (colIndex, rowIndex, whichClick) => {\r\n      let updateGrid = [...boardGrid];\r\n      let clickedSquare = boardGrid[colIndex][rowIndex];\r\n      console.log(\"handling a \" + whichClick + \" click for:\");\r\n      console.log(clickedSquare);\r\n      let updateAction = boardHandler.routeClick(clickedSquare, whichClick);\r\n      updateGrid[colIndex][rowIndex] = updateAction.square;\r\n      setBoardGrid(updateGrid);\r\n      setFace(updateAction.face);\r\n      setGameInProgress(updateAction.continue);\r\n    },\r\n    [boardGrid]\r\n  );\r\n\r\n  return (\r\n    <section className={styles.window__inner}>\r\n      <div className={styles.board__outer}>\r\n        <Controls startGame={onStart} inProgress={gameInProgress} face={face} />\r\n        <section className={styles.board__inner}>\r\n          {boardGrid ? (\r\n            <SquaresWrapper\r\n            boardGrid={boardGrid}\r\n              handleSquareClick={handleSquareClick}\r\n              setFace={setFace}\r\n              gameInProgress={gameInProgress}\r\n            />\r\n          ) : null}\r\n        </section>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import Nav from \"../Nav/Nav\";\r\nimport Board from \"../../Game/Board/Board\";\r\n\r\nimport styles from \"./Window.module.css\";\r\n\r\nconst Window = () => {\r\n  return (\r\n    <main className={`windows95 ${styles.main_window}`}>\r\n      <Nav />\r\n      <Board />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Window;\r\n","import styles from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={`windows95 ${styles.windows_footer}`}>\r\n      <span></span>\r\n      <span></span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Window from './Components/Background/Window/Window';\nimport Footer from './Components/Background/Footer/Footer';\n\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <Window />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}