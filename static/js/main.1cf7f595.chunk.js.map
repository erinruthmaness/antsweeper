{"version":3,"sources":["Components/WindowHeader/OptionDropdown/OptionDropdown.module.css","Components/Game/CalcScreen/CalcScreen.module.css","Components/Game/Square/Square.module.css","Components/Background/Footer/Footer.module.css","Components/WindowHeader/TitleBar/TitleBar.module.css","Components/WindowHeader/OptionWrapper/OptionWrapper.module.css","Components/Background/Window/Window.module.css","Components/Background/Overlay/Overlay.module.css","Components/Game/Board/Board.module.css","Components/WindowHeader/OptionsBar/OptionsBar.module.css","Components/Game/FaceButton/FaceButton.module.css","Components/Game/Controls/Controls.module.css","Components/Game/RowWrapper/RowWrapper.module.css","Components/Background/App/App.module.css","utils/store/initialState/paramLevels.js","utils/reducers/roundReducer.js","utils/store/initialState/round.js","utils/store/roundContext.js","utils/store/windowContext.js","utils/store/paramsContext.js","Components/Background/Overlay/Overlay.js","imgs/icons.js","Components/WindowHeader/TitleBar/TitleBar.js","Components/WindowHeader/GameMenu/GameMenu.js","Components/WindowHeader/HelpMenu/HelpMenu.js","Components/WindowHeader/OptionDropdown/OptionDropdown.js","Components/WindowHeader/OptionWrapper/OptionWrapper.js","Components/WindowHeader/OptionsBar/OptionsBar.js","Components/WindowHeader/MenuBar/MenuBar.js","utils/reducers/boardReducer.js","utils/store/initialState/board.js","Components/Game/FaceButton/FaceButton.js","utils/logic/helpers.js","Components/Game/CalcScreen/CalcScreen.js","Components/Game/Controls/Controls.js","utils/logic/read.js","Components/Game/Square/Square.js","Components/Game/RowWrapper/RowWrapper.js","utils/store/initialState/square.js","Components/Game/Board/logic/newRound.js","Components/Game/Board/logic/startRound.js","Components/Game/Board/logic/endRound.js","Components/Game/Board/logic/clickHandler.js","Components/Game/Board/Board.js","Components/Background/Window/Window.js","imgs/win98Logo.png","Components/Background/Footer/Footer.js","Components/Background/App/App.js","index.js"],"names":["module","exports","levels","beginner","rows","cols","ants","level","intermediate","expert","roundReducer","state","action","type","console","log","ready","started","payload","initialRound","defaultContext","set","start","lost","won","reset","roundContext","React","createContext","RoundCtxProvider","props","useReducer","roundState","dispatchRound","Provider","value","children","overlay","display","hide","show","dragMove","translate","x","y","isDragging","grab","drag","e","drop","minimize","isMinimized","down","up","windowContext","WindowCtxProvider","useState","overlayState","setOverlayState","setIsMinimized","setTranslate","setIsDragging","clientY","clientX","view","innerWidth","prevState","movementX","movementY","setParameters","params","paramContext","ParamCtxProvider","setParams","newParam","Overlay","windowCtx","useContext","className","styles","overlay_hide","onClick","squares","unclicked","clicked","ant","flag","faces","sleeping","smiling","yelling","upsideDown","exploded","shades","xEyes","sweating","winking","TitleBar","cursorStyle","titleBar","onPointerDown","onPointerUp","onPointerOut","onPointerMove","onMouseOver","style","cursor","titleBar__left","String","fromCharCode","titleBar__right","disabled","GameMenu","paramCtx","roundCtx","dropdown__section","map","lvl","handleSelect","charAt","toUpperCase","slice","HelpMenu","href","target","rel","OptionDropdown","dropdown","which","OptionWrapper","buttonStyle","optionButton","optionButton__wrapper","handleClick","buttonText","OptionsBar","game","help","setDropDown","showGameMenu","showHelpMenu","hideBoth","useEffect","optionsBar","MenuBar","boardReducer","board","face","getInitialBoard","paramContextOBJ","parameters","antList","flags","FaceButton","faceButton","assessDigit","string","num","toString","CalcScreen","displayNum","padStart","split","calcScreen","id","digit","digitIdx","digit__top","digit__half","digit__bottom","Controls","clock","setClock","firstClick","clockStarted","setClockStarted","timer","inProgress","setInterval","prevTime","clearInterval","controls","startGame","squareHandler","squareResponse","whichClick","whichFace","touchStart","flagged","touchEnd","count","mouseDown","whichNum","squareProps","wasClicked","clickType","wasTouched","touchLength","Square","countRef","useRef","parseClick","event","eventString","gameOver","sq","revealed","nativeEvent","downResult","changeFace","updateSquare","parseTouch","current","endResult","leftOrRight","square","nearbyAnts","unclickedAnt","firstAnt","onMouseDown","onMouseUp","undefined","onTouchStart","onTouchEnd","onContextMenu","preventDefault","Array","isArray","RowWrapper","boardGrid","row","index","board_row","key","handleSquareClick","setFace","gameInProgress","buildSquare","neighbors","newRound","from","col","buildAnthill","boardArea","numAnts","starterArray","idx","i","array","length","j","Math","floor","random","shuffle","assignAnts","boardState","antArray","counter","antMasterlist","forEach","cell","push","antInFirstClick","reservedNeighborhood","foundMatch","some","el","horizontalNeighbors","myIndex","buildNeighborhood","wholeBoard","rowAbove","myRow","rowBelow","concat","startRound","newBoard","neighborhood","filter","addAnts","endRound","recursiveUncover","centerSquare","uncoverNeighbors","startingSquare","updatedBoard","replaceSquareInBoard","newSquare","tempBoard","playerMoveReducer","newBoardState","allAnts","indexOf","tempFace","tempGameOver","gameParams","unclickedSafe","checkForWin","Board","paramsContext","dispatchBoard","restartRound","useCallback","boardWithAnts","gameWrapper","boardWrapper","newFace","Window","animation","setAnimation","minComplete","setMinComplete","maxComplete","setMaxComplete","window","transform","onAnimationEnd","onAnimationStart","Footer","gameWindowButtonStyle","gameWindowButton","bg__footer","startButton","src","win98logo","alt","App","window_container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cf7f595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"OptionDropdown_dropdown__hQBMN\",\"dropdown--open\":\"OptionDropdown_dropdown--open__nGfXv\",\"slideup\":\"OptionDropdown_slideup__3q_9-\",\"dropdown__section\":\"OptionDropdown_dropdown__section__LXyCN\",\"delayRender\":\"OptionDropdown_delayRender__3X5H-\",\"--selected\":\"OptionDropdown_--selected__3WX4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calcScreen\":\"CalcScreen_calcScreen__2RNgm\",\"digit\":\"CalcScreen_digit__n2xbQ\",\"digit__half\":\"CalcScreen_digit__half___C2KC\",\"digit--0\":\"CalcScreen_digit--0__JQ9uK\",\"digit__top\":\"CalcScreen_digit__top__2_eJh\",\"digit__bottom\":\"CalcScreen_digit__bottom__3IQMY\",\"digit--4\":\"CalcScreen_digit--4__1fpXy\",\"digit--1\":\"CalcScreen_digit--1__WyxL7\",\"digit--7\":\"CalcScreen_digit--7__q3bg6\",\"digit--2\":\"CalcScreen_digit--2__2OATq\",\"digit--5\":\"CalcScreen_digit--5__2ktkl\",\"digit--3\":\"CalcScreen_digit--3__1jH8p\",\"digit--9\":\"CalcScreen_digit--9__23oWL\",\"digit--6\":\"CalcScreen_digit--6__9FBRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__3umfu\",\"square--clicked\":\"Square_square--clicked__2AQ4_\",\"nearbys--0\":\"Square_nearbys--0__32GBT\",\"nearbys--1\":\"Square_nearbys--1__Q9Cf5\",\"nearbys--2\":\"Square_nearbys--2__10nNw\",\"nearbys--3\":\"Square_nearbys--3__1YeYu\",\"nearbys--4\":\"Square_nearbys--4__3Cr8k\",\"nearbys--5\":\"Square_nearbys--5__3VFN5\",\"nearbys--6\":\"Square_nearbys--6__25uFq\",\"nearbys--7\":\"Square_nearbys--7__3V4t-\",\"nearbys--8\":\"Square_nearbys--8__2NMV7\",\"firstAnt\":\"Square_firstAnt__1BtMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg__footer\":\"Footer_bg__footer__3cwNj\",\"startButton\":\"Footer_startButton__JcZ0O\",\"gameWindowButton\":\"Footer_gameWindowButton__Tm1NX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleBar\":\"TitleBar_titleBar__3D0NT\",\"titleBar__left\":\"TitleBar_titleBar__left__2jmEm\",\"titleBar__right\":\"TitleBar_titleBar__right__2I_bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionButton__wrapper\":\"OptionWrapper_optionButton__wrapper__1Gk2U\",\"optionButton\":\"OptionWrapper_optionButton__5Jvpo\",\"optionButton--clicked\":\"OptionWrapper_optionButton--clicked__2AX5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__2bDq7\",\"window--minimizing\":\"Window_window--minimizing__1nMYy\",\"minimize\":\"Window_minimize__qGc0M\",\"window--maximizing\":\"Window_window--maximizing__1jUPc\",\"window--minimized\":\"Window_window--minimized__dwSEX\",\"maximize\":\"Window_maximize__2cz-r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__y-1vO\",\"overlay_hide\":\"Overlay_overlay_hide__3nis0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameWrapper\":\"Board_gameWrapper__tDsXr\",\"boardWrapper\":\"Board_boardWrapper__3qA6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsBar\":\"OptionsBar_optionsBar__3psrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"faceButton\":\"FaceButton_faceButton__-uowv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3f1Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_row\":\"RowWrapper_board_row__2Yugp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window_container\":\"App_window_container__3q1BU\"};","const levels = {\r\n  beginner: {\r\n    rows: 8,\r\n    cols: 8,\r\n    ants: 10,\r\n    level: \"beginner\"\r\n  },\r\n  intermediate: {\r\n    rows: 16,\r\n    cols: 16,\r\n    ants: 40,\r\n    level: \"intermediate\"\r\n  },\r\n  expert: {\r\n    rows: 24,\r\n    cols: 24,\r\n    ants: 99,\r\n    level: \"expert\"\r\n  },\r\n};\r\n\r\nexport default levels;\r\n","const roundReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"BOARD_SET\":\r\n        console.log(\"ROUND REDUCER board set\")\r\n      return { ...state, ready: true, started: false };\r\n    case \"START_ROUND\":\r\n        console.log(\"ROUND REDUCER start round\")\r\n      return { ...state, started: true };\r\n    case \"WON\":\r\n    case \"LOST\":\r\n        console.log(\"ROUND REDUCER won/lost\")\r\n      return { ...state, ready: false };\r\n    case \"RESET\":\r\n        console.log(\"ROUND REDUCER reset\")\r\n      return { ...action.payload };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default roundReducer;\r\n","const initialRound = {\r\n  ready: false,\r\n  started: false,\r\n};\r\n\r\nexport default initialRound;\r\n","import React, { useReducer } from \"react\";\r\nimport roundReducer from \"../reducers/roundReducer\";\r\nimport initialRound from \"./initialState/round\";\r\n\r\n//for IDE completion\r\nconst defaultContext = {\r\n  ready: null,\r\n  started: null,\r\n  set: {\r\n    ready: () => {},\r\n    start: () => {},\r\n    lost: () => {},\r\n    won: () => {},\r\n    reset: () => {},\r\n  },\r\n};\r\nconst roundContext = React.createContext(defaultContext);\r\nexport default roundContext;\r\n\r\nexport const RoundCtxProvider = (props) => {\r\n  const [roundState, dispatchRound] = useReducer(roundReducer, initialRound);\r\n\r\n  const set = {\r\n    ready: () => {\r\n      dispatchRound({ type: \"BOARD_SET\" });\r\n    },\r\n    start: () => {\r\n      dispatchRound({ type: \"START_ROUND\" });\r\n    },\r\n    lost: () => {\r\n      dispatchRound({ type: \"LOST\" });\r\n    },\r\n    won: () => {\r\n      dispatchRound({ type: \"WON\" });\r\n    },\r\n    reset: () => {\r\n      dispatchRound({ type: \"RESET\", payload: { ...initialRound } });\r\n    },\r\n  };\r\n\r\n  return (\r\n    <roundContext.Provider value={{ ...roundState, set: set }}>\r\n      {props.children}\r\n    </roundContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n//for IDE completion\r\nconst defaultContext = {\r\n  overlay: {\r\n    display: null,\r\n    hide: () => {},\r\n    show: () => {},\r\n  },\r\n  dragMove: {\r\n    translate: {\r\n      x: null,\r\n      y: null,\r\n    },\r\n    isDragging: null,\r\n    grab: () => {},\r\n    drag: (e) => {},\r\n    drop: () => {},\r\n  },\r\n  minimize: {\r\n    isMinimized: null,\r\n    down: () => {},\r\n    up: () => {},\r\n  },\r\n};\r\nconst windowContext = React.createContext(defaultContext);\r\nexport default windowContext;\r\n\r\nexport const WindowCtxProvider = (props) => {\r\n  //------overlay------\r\n  const [overlayState, setOverlayState] = useState(false);\r\n  const hide = () => {\r\n    setOverlayState(false);\r\n    console.log(\"WINDOW CONTEXT hiding overlay\");\r\n  };\r\n  const show = () => {\r\n    setOverlayState(true);\r\n    console.log(\"WINDOW CONTEXT showing overlay\");\r\n  };\r\n  //------minimize------\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const down = () => {\r\n    setIsMinimized(true);\r\n  };\r\n  const up = () => {\r\n    setIsMinimized(false);\r\n  };\r\n  //------dragMove------\r\n  const [translate, setTranslate] = useState({ x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const grab = () => {\r\n    console.log(\"WINDOW CONTEXT grabbing\");\r\n    setIsDragging(true);\r\n  };\r\n  const drag = (e) => {\r\n    if (isDragging && !isMinimized) {\r\n      console.log(\"WINDOW CONTEXT is dragging\");\r\n      const minMargin = 20;\r\n      if (\r\n        e.clientY > minMargin &&\r\n        e.clientX > minMargin &&\r\n        e.clientX < e.view.innerWidth - minMargin\r\n      ) {\r\n        setTranslate((prevState) => {\r\n          return {\r\n            x: prevState.x + e.movementX,\r\n            y: prevState.y + e.movementY,\r\n          };\r\n        });\r\n      } else {\r\n        setTranslate({\r\n          x: 0,\r\n          y: 0,\r\n        });\r\n        drop();\r\n      }\r\n    }\r\n  };\r\n  const drop = () => {\r\n    console.log(\"WINDOW CONTEXT dropping\");\r\n    setIsDragging(false);\r\n  };\r\n\r\n  return (\r\n    <windowContext.Provider\r\n      value={{\r\n        overlay: {\r\n          display: overlayState,\r\n          hide,\r\n          show,\r\n        },\r\n        dragMove: {\r\n          isDragging,\r\n          grab,\r\n          drag,\r\n          drop,\r\n          translate,\r\n        },\r\n        minimize: {\r\n          isMinimized,\r\n          down,\r\n          up,\r\n        },\r\n      }}\r\n    >\r\n      {props.children}\r\n    </windowContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport levels from \"./initialState/paramLevels\";\r\nimport { RoundCtxProvider } from \"./roundContext\";\r\nimport { WindowCtxProvider } from \"./windowContext\";\r\n\r\n//for IDE completion\r\nconst defaultContext = {\r\n  rows: null,\r\n  cols: null,\r\n  ants: null,\r\n  setParameters: (params) => {},\r\n};\r\nconst paramContext = React.createContext(defaultContext);\r\nexport default paramContext;\r\n\r\nexport const ParamCtxProvider = (props) => {\r\n  const [params, setParams] = useState(levels.beginner);\r\n\r\n  const setParameters = (newParam) => {\r\n    setParams(newParam);\r\n    console.log(\"PARAMS CONTEXT changing params\");\r\n  };\r\n\r\n  return (\r\n    <paramContext.Provider\r\n      value={{\r\n        ...params,\r\n        setParameters: setParameters,\r\n      }}\r\n    >\r\n      <RoundCtxProvider>\r\n        <WindowCtxProvider>\r\n        {props.children}\r\n        </WindowCtxProvider>\r\n      </RoundCtxProvider>\r\n    </paramContext.Provider>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport windowContext from \"../../../utils/store/windowContext\";\r\nimport styles from \"./Overlay.module.css\";\r\n\r\nconst Overlay = () => {\r\n  const windowCtx = useContext(windowContext);\r\n\r\n  const handleClick = () => {\r\n    windowCtx.overlay.hide();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        windowCtx.overlay.display ? styles.overlay : styles.overlay_hide\r\n      }\r\n      onClick={handleClick}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","//img directories\r\nexport const squares = {\r\n    unclicked: \"\",\r\n    clicked: \"\",\r\n    ant: [\"0xD83D\", \"0xDC1C\"],\r\n    flag: [\"0xD83D\", \"0xDEA9\"],\r\n}\r\n\r\nexport const faces = {\r\n    sleeping: [\"0xD83D\", \"0xDE34\"],\r\n    smiling: [\"0xD83D\", \"0xDE0A\"],\r\n    yelling: [\"0xD83D\", \"0xDE31\"],\r\n    upsideDown: [\"0xD83D\", \"0xDE43\"],\r\n    exploded: [\"0xD83E\", \"0xDD2F\"],\r\n    shades: [\"0xD83D\", \"0xDE0E\"],\r\n    xEyes: [\"0xD83D\", \"0xDE35\"],\r\n    sweating: [\"0xD83D\", \"0xDE13\"],\r\n    winking: [\"0xD83D\", \"0xDE09\"]\r\n}","import { useContext } from \"react\";\r\nimport { squares } from \"../../../imgs/icons\";\r\nimport windowContext from \"../../../utils/store/windowContext\";\r\n\r\nimport styles from \"./TitleBar.module.css\";\r\n\r\nconst TitleBar = () => {\r\n  const windowCtx = useContext(windowContext);\r\n  const cursorStyle = windowCtx.dragMove.isDragging ? \"grabbing\" : \"grab\";\r\n  return (\r\n    <section\r\n      className={styles.titleBar}\r\n      onPointerDown={windowCtx.dragMove.grab}\r\n      onPointerUp={windowCtx.dragMove.drop}\r\n      onPointerOut={windowCtx.dragMove.drop}\r\n      onPointerMove={windowCtx.dragMove.drag}\r\n      onMouseOver={null}\r\n      style={{ cursor: cursorStyle }}\r\n    >\r\n      <span className={styles.titleBar__left}>\r\n        {String.fromCharCode(...squares.ant)}\r\n        <h1>Antsweeper</h1>\r\n      </span>\r\n      <span className={styles.titleBar__right}>\r\n        <button onClick={windowCtx.minimize.down}>&#818;</button>\r\n        <button disabled>&#10006;</button>\r\n      </span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import { Fragment, useContext } from \"react\";\r\nimport paramContext from \"../../../utils/store/paramsContext\";\r\nimport roundContext from \"../../../utils/store/roundContext\";\r\nimport windowContext from \"../../../utils/store/windowContext\";\r\nimport levels from \"../../../utils/store/initialState/paramLevels\";\r\nimport styles from \"../OptionDropdown/OptionDropdown.module.css\";\r\n// import styles from \"./GameMenu.module.css\";\r\n\r\nconst GameMenu = (props) => {\r\n  const gameLevels = [\"beginner\", \"intermediate\", \"expert\"];\r\n  const paramCtx = useContext(paramContext);\r\n  const roundCtx = useContext(roundContext);\r\n  const windowCtx = useContext(windowContext);\r\n\r\n  const handleSelect = (lvl) => {\r\n    windowCtx.overlay.hide();\r\n    paramCtx.setParameters(levels[lvl]);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    windowCtx.overlay.hide();\r\n    roundCtx.set.reset();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className={styles.dropdown__section}>\r\n        <li onClick={handleReset}>New Game</li>\r\n      </ul>\r\n      <ul className={styles.dropdown__section}>\r\n        {gameLevels.map((lvl) => {\r\n          return (\r\n            <li\r\n              key={`level-${lvl}`}\r\n              onClick={() => handleSelect(lvl)}\r\n              className={paramCtx.level === lvl ? styles[\"--selected\"] : null}\r\n            >\r\n              {lvl.charAt(0).toUpperCase() + lvl.slice(1)}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GameMenu;\r\n","import { Fragment } from \"react\";\r\nimport styles from \"../OptionDropdown/OptionDropdown.module.css\";\r\n\r\nconst HelpMenu = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className={styles.dropdown__section}>\r\n        <a href=\"https://github.com/erinruthmaness/antsweeper\">\r\n          <li>Contents</li>\r\n        </a>\r\n      </ul>\r\n      <ul className={styles.dropdown__section}>\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          href=\"http://www.minesweeper.info/wiki/Windows_Minesweeper\"\r\n        >\r\n          <li>About Minesweeper...</li>\r\n        </a>\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HelpMenu;\r\n","import GameMenu from \"../GameMenu/GameMenu\";\r\nimport HelpMenu from \"../HelpMenu/HelpMenu\";\r\n\r\nimport styles from \"./OptionDropdown.module.css\";\r\n\r\nconst OptionDropdown = (props) => {\r\n  return (\r\n    <aside className={styles.dropdown}>\r\n      {props.which === \"Game\" ? <GameMenu /> : null}\r\n      {props.which === \"Help\" ? <HelpMenu /> : null}\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default OptionDropdown;\r\n","import OptionDropdown from \"../OptionDropdown/OptionDropdown\";\r\nimport styles from \"./OptionWrapper.module.css\";\r\n\r\nconst OptionWrapper = (props) => {\r\n\r\n  let buttonStyle = `${styles.optionButton}`;\r\n  if (props.dropdown) {\r\n    buttonStyle+=` ${styles[\"optionButton--clicked\"]}`\r\n  }\r\n\r\n  return (\r\n    <div className={styles.optionButton__wrapper}>\r\n      <button className={buttonStyle} onClick={props.handleClick}>\r\n        {props.buttonText}\r\n        </button>\r\n      {props.dropdown ? (\r\n        <OptionDropdown which={props.buttonText} />\r\n        ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionWrapper;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport windowContext from \"../../../utils/store/windowContext\";\r\nimport OptionButtonWrapper from \"../OptionWrapper/OptionWrapper\";\r\n\r\nimport styles from \"./OptionsBar.module.css\";\r\n\r\nconst OptionsBar = () => {\r\n  const windowCtx = useContext(windowContext);\r\n  const [dropdown, setDropDown] = useState({\r\n    game: false,\r\n    help: false,\r\n  });\r\n\r\n  const showGameMenu = () => {\r\n    setDropDown({ game: true, help: false });\r\n  };\r\n\r\n  const showHelpMenu = () => {\r\n    setDropDown({ game: false, help: true });\r\n  };\r\n\r\n  const hideBoth = () => {\r\n    setDropDown({ game: false, help: false });\r\n  };\r\n\r\n  const handleHelpClick = () => {\r\n    //if one of the dropdowns is open\r\n    if (windowCtx.overlay.display) {\r\n      if (dropdown.help) {\r\n        //if the help menu is already open\r\n        hideBoth();\r\n        windowCtx.overlay.hide();\r\n      } else {\r\n        showHelpMenu();\r\n      }\r\n    } else {\r\n      //open Help dropdown\r\n      showHelpMenu();\r\n      windowCtx.overlay.show();\r\n    }\r\n  };\r\n\r\n  const handleGameClick = () => {\r\n    //if one of the dropdowns is open\r\n    if (windowCtx.overlay.display) {\r\n      if (dropdown.game) {\r\n        //if the game menu is already open\r\n        hideBoth();\r\n        windowCtx.overlay.hide();\r\n      } else {\r\n        showGameMenu();\r\n      }\r\n    } else {\r\n      //open Game dropdown\r\n      showGameMenu();\r\n      windowCtx.overlay.show();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //hide both menus whenever overlay hides\r\n    if (!windowCtx.overlay.display) {\r\n      hideBoth();\r\n    }\r\n  }, [windowCtx.overlay.display, setDropDown]);\r\n\r\n  return (\r\n    <nav className={styles.optionsBar}>\r\n      <OptionButtonWrapper\r\n        buttonText={\"Game\"}\r\n        handleClick={handleGameClick}\r\n        dropdown={dropdown.game}\r\n      />\r\n      <OptionButtonWrapper\r\n        buttonText={\"Help\"}\r\n        handleClick={handleHelpClick}\r\n        dropdown={dropdown.help}\r\n      />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default OptionsBar;\r\n","import TitleBar from '../TitleBar/TitleBar';\r\nimport OptionsBar from '../OptionsBar/OptionsBar';\r\n\r\n// import styles from \"./MenuBar.module.css\";\r\n\r\nconst MenuBar = () => {\r\n  return (\r\n    <header>\r\n     <TitleBar />\r\n     <OptionsBar />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import { faces } from \"../../imgs/icons\";\r\n\r\nconst boardReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"RESET_BOARD\":\r\n        console.log(\"BOARD REDUCER reset board\")\r\n      return { ...action.payload };\r\n    case \"CLEAR_BOARD\":\r\n        console.log(\"BOARD REDUCER clear board\")\r\n      return { ...state, board: [] };\r\n    case \"UNCOVER_BOARD\":\r\n        console.log(\"BOARD REDUCER uncover board\")\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        face: faces.smiling,\r\n      };\r\n    case \"SET_ANTS\":\r\n        console.log(\"BOARD REDUCER set ants\")\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        face: faces.smiling,\r\n      };\r\n    case \"UPDATE_BOARD\":\r\n        console.log(\"BOARD REDUCER update board\")\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"SET_FACE\":\r\n        console.log(\"BOARD REDUCER set face\")\r\n      return {\r\n        ...state,\r\n        face: action.payload,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","import { faces } from '../../../imgs/icons';\r\n\r\nconst getInitialBoard = (paramContextOBJ) => {\r\n  return {\r\n    board: [],\r\n    level: paramContextOBJ.level,\r\n    parameters: {\r\n      rows: paramContextOBJ.rows,\r\n      cols: paramContextOBJ.cols,\r\n      ants: paramContextOBJ.ants,\r\n      antList: [],\r\n    },\r\n    flags: 0,\r\n    face: faces.sleeping,\r\n  };\r\n};\r\n\r\nexport default getInitialBoard;\r\n","import styles from \"./FaceButton.module.css\";\r\n\r\nconst FaceButton = (props) => {\r\n  return (\r\n    <button\r\n      className={styles.faceButton}\r\n      onClick={props.onClick}\r\n    >\r\n      {String.fromCharCode(props.face[0], props.face[1])}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FaceButton;\r\n","//the Fisher-Yates shuffle\r\nexport const shuffle = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const assessDigit = (string, num) => {\r\n  return string + \"--\" + num.toString();\r\n};\r\n","import { assessDigit } from '../../../utils/logic/helpers'\r\nimport styles from \"./CalcScreen.module.css\";\r\n\r\n\r\nconst CalcScreen = (props) => {\r\n  let displayNum = props.display.toString().padStart(3, \"0\").split(\"\");\r\n\r\n  if (!displayNum || (displayNum === \"off\")) {\r\n    displayNum = [\"8\", \"8\", \"8\"];\r\n  }\r\n  \r\n  return (\r\n    <section className={styles.calcScreen} id={props.id}>\r\n      {displayNum.map((digit, digitIdx) => (\r\n        <div\r\n          key={`${props.id}-digit-${digitIdx}`}\r\n          className={`${styles.digit} ${styles[assessDigit(\"digit\", digit)]}`}\r\n        >\r\n          <div className={`${styles.digit__top} ${styles.digit__half}`}></div>\r\n          <div className={`${styles.digit__bottom} ${styles.digit__half}`}></div>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CalcScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport FaceButton from \"../FaceButton/FaceButton\";\r\nimport CalcScreen from \"../CalcScreen/CalcScreen\";\r\nimport styles from \"./Controls.module.css\";\r\n\r\nconst Controls = (props) => {\r\n  const [clock, setClock] = useState(\"off\");\r\n  const [clockStarted, setClockStarted] = useState(props.firstClick);\r\n\r\n  const startGameHandler = () => {\r\n    setClock(0);\r\n    // setClockStarted(true);\r\n    props.startGame();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.firstClick && !clockStarted) {\r\n      setClockStarted(true);\r\n    }\r\n    if (!props.firstClick && clockStarted) {\r\n      setClockStarted(false)\r\n    }\r\n    return () => {\r\n    };\r\n  }, [props.firstClick, clockStarted]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (clockStarted && props.inProgress && props.firstClick) {\r\n      timer = setInterval(() => {\r\n        if (clock < 999) {\r\n          setClock((prevTime) => prevTime + 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n    if (!props.inProgress) {\r\n      clearInterval(timer);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [clock, clockStarted, props.firstClick, props.inProgress]);\r\n\r\n  return (\r\n    <section className={styles.controls}>\r\n        <CalcScreen\r\n          id={\"flags\"}\r\n          display={props.inProgress || clockStarted ? props.flags : \"off\"}\r\n        />\r\n      <FaceButton onClick={startGameHandler} face={props.face} />\r\n        <CalcScreen\r\n          id={\"timer\"}\r\n          display={props.inProgress || clockStarted ? clock : \"off\"}\r\n        />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import { faces } from \"../../imgs/icons\";\r\n\r\n// returns { which: \"left\"/\"right\", face : \"[face code]\"}\r\nexport const squareHandler = {\r\n  squareResponse: (whichClick, whichFace) => {\r\n    return { which: whichClick, face: whichFace };\r\n  },\r\n  touchStart: (flagged) => {\r\n    if (flagged) {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.winking);\r\n    } else {\r\n      return squareHandler.squareResponse(\"touchStart\", faces.yelling);\r\n    }\r\n  },\r\n  touchEnd: (count) => {\r\n    console.log(\"touch end count is \" + count);\r\n    //since touchStart doesn't put the face back on :D like mouseDown does\r\n    //touchEnd has to do it!\r\n    if (count > 0) {\r\n      return squareHandler.squareResponse(\"right\", faces.smiling);\r\n    } else {\r\n      return squareHandler.squareResponse(\"left\", faces.smiling);\r\n    }\r\n  },\r\n  mouseDown: (whichNum, squareProps) => {\r\n    if (whichNum === 1) {\r\n      //left click\r\n      if (squareProps.flagged) {\r\n        return squareHandler.squareResponse(\"left\", faces.winking);\r\n      } else {\r\n        //yell until mouse release\r\n        return squareHandler.squareResponse(\"left\", faces.yelling);\r\n      }\r\n    } else {\r\n      if (squareProps.flagged) {\r\n        //removing flag\r\n        return squareHandler.squareResponse(\"right\", faces.sweating);\r\n      } else {\r\n        //flag placement\r\n        return squareHandler.squareResponse(\"right\", faces.smiling);\r\n      }\r\n    }\r\n  },\r\n};","import { useRef } from \"react\";\r\nimport { assessDigit } from \"../../../utils/logic/helpers\";\r\nimport { squareHandler } from \"../../../utils/logic/read\";\r\nimport styles from \"./Square.module.css\";\r\n\r\n//declared outside of the component in case it might rerender & reset to default\r\n//don't need it in state because state triggers a UI change (rerender)\r\nlet wasClicked = false;\r\nlet clickType = \"left\";\r\nlet wasTouched = false;\r\nlet touchLength = 0;\r\n\r\nfunction Square(props) {\r\n  const countRef = useRef();\r\n\r\n  const reset = () => {\r\n    wasClicked = false;\r\n    clickType = \"left\";\r\n    wasTouched = false;\r\n    touchLength = 0;\r\n  };\r\n\r\n  const parseClick = (event, eventString) => {\r\n    //restore defaults real quick for people playing multiple games\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    if (\r\n      wasTouched ||\r\n      props.sq.revealed ||\r\n      (props.sq.flagged && event.nativeEvent.which === 1)\r\n    ) {\r\n      //do nothing if user is mobile, if square is already revealed,\r\n      //or if flagged and this is a left click\r\n      return;\r\n    } else if (eventString === \"down\") {\r\n      wasClicked = true;\r\n      // console.log(\"mouse down on \" + props.id);\r\n      //returns which: left or right click\r\n      //and face: what the face button should be (just :o since this is mousedown, not up)\r\n      let downResult = squareHandler.mouseDown(event.nativeEvent.which, props);\r\n      clickType = downResult.which;\r\n      props.changeFace(downResult.face);\r\n    } else if (eventString === \"up\") {\r\n      // console.log(\"mouse up on \" + props.id);\r\n      if (!wasTouched) {\r\n        updateSquare(clickType);\r\n      }\r\n    }\r\n  };\r\n\r\n  const parseTouch = (eventString) => {\r\n    if (props.gameOver) {\r\n      reset();\r\n      return;\r\n    }\r\n    //prevents a \"double click\" with touch firing and then mouse click firing\r\n    if (props.gameOver || wasClicked || props.sq.revealed) {\r\n      //do nothing if game is over, if user is mobile, or if square is already revealed\r\n      return;\r\n    } else if (eventString === \"start\") {\r\n      wasTouched = true;\r\n      // console.log(\"touch started on \" + props.id);\r\n      props.changeFace(squareHandler.touchStart(props.sq.flagged).face);\r\n      countRef.current = setInterval(() => {\r\n        touchLength++;\r\n        // console.log(touchLength);\r\n      }, 800);\r\n    } else if (eventString === \"end\") {\r\n      // console.log(\"touch ended on \" + props.id);\r\n      //stops timer\r\n      clearInterval(countRef.current);\r\n      //returns which: left or right click\r\n      let endResult = squareHandler.touchEnd(touchLength);\r\n      //\"left clicks\" shouldn't impact a flagged square\r\n      if (props.sq.flagged && endResult.which === \"left\") {\r\n        props.changeFace(endResult.face); //flagged squares don't get processed by Board\r\n        return;\r\n      } else {\r\n        updateSquare(endResult.which);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateSquare = (leftOrRight) => {\r\n    //reset defaults for this square, but not wasClicked/wasTouched\r\n    //because that should stay the same across the game\r\n    clickType = \"left\";\r\n    touchLength = 0;\r\n    props.onClick(\r\n      props.sq.y,\r\n      props.sq.x,\r\n      leftOrRight.toUpperCase() + \"_CLICK\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`\r\n        ${styles.square}\r\n        ${props.sq.revealed && styles[\"square--clicked\"]} \r\n        ${styles[assessDigit(\"nearbys\", props.sq.nearbyAnts)]}\r\n        ${\r\n          props.sq.revealed && props.sq.ant && !props.sq.unclickedAnt\r\n            ? styles.firstAnt\r\n            : null\r\n        } \r\n      `}\r\n      onMouseDown={(e) => parseClick(e, \"down\")}\r\n      onMouseUp={!wasTouched ? (e) => parseClick(e, \"up\") : undefined}\r\n      onTouchStart={() => parseTouch(\"start\")}\r\n      onTouchEnd={!wasClicked ? () => parseTouch(\"end\") : undefined}\r\n      onContextMenu={(e) => e.preventDefault()}\r\n    >\r\n      {Array.isArray(props.sq.display)\r\n        ? String.fromCharCode(props.sq.display[0], props.sq.display[1])\r\n        : props.sq.display}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import Square from \"../Square/Square\";\r\nimport styles from \"./RowWrapper.module.css\";\r\n\r\nconst RowWrapper = (props) => {\r\n  return props.boardGrid.map((row, index) => (\r\n    <div className={styles.board_row} key={`row-${index}`}>\r\n      {row.map((square) => (\r\n        <Square\r\n          key={square.key}\r\n          id={square.key}\r\n          sq={square}\r\n          onClick={props.handleSquareClick}\r\n          changeFace={props.setFace}\r\n          gameOver={!props.gameInProgress}\r\n        />\r\n      ))}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default RowWrapper;\r\n","import { squares } from '../../../imgs/icons';\r\n\r\nconst buildSquare = (x, y) => {\r\n  return {\r\n    key: \"cell-x\" + x + \"-y\" + y,\r\n    x: x,\r\n    y: y,\r\n    ant: false,\r\n    revealed: false,\r\n    display: squares.unclicked,\r\n    flagged: false,\r\n    nearbyAnts: 0,\r\n    neighbors: [],\r\n  };\r\n};\r\n\r\nexport default buildSquare;\r\n","import buildSquare from \"../../../../utils/store/initialState/square\";\r\n\r\n//make an array of arrays of \"squares\"\r\nconst newRound = (rows, cols) => {\r\n  return Array.from(Array(rows), (row, y) => {\r\n    return Array.from(Array(cols), (col, x) =>\r\n      buildSquare(x, y)\r\n    );\r\n  });\r\n};\r\n\r\nexport default newRound;\r\n","import { shuffle } from \"../../../../utils/logic/helpers\";\r\n\r\n//make an array of true bools\r\n//with falses equal to the number of ants shuffled in\r\nconst buildAnthill = (boardArea, numAnts) => {\r\n  let starterArray = Array.from(Array(boardArea), (square, idx) => {\r\n    return { id: idx + 1, ant: false };\r\n  });\r\n  for (let i = 0; i < numAnts; i++) {\r\n    starterArray[i].ant = true;\r\n  }\r\n  return shuffle(starterArray);\r\n};\r\n\r\n//spread ants randomly through new board\r\nconst assignAnts = (boardState) => {\r\n  let boardArea = boardState.parameters.rows * boardState.parameters.cols;\r\n  let antArray = buildAnthill(boardArea, boardState.parameters.ants);\r\n  let counter = boardArea - 1;\r\n  let antMasterlist = [];\r\n  boardState.board.forEach((row) => {\r\n    row.forEach((cell) => {\r\n      cell.ant = antArray[counter].ant;\r\n      counter--;\r\n      if (cell.ant) {\r\n        antMasterlist.push(cell.key);\r\n      }\r\n    });\r\n  });\r\n\r\n  return [boardState.board, antMasterlist];\r\n};\r\n\r\n//count adjacent ants\r\n//and keep track of which all adjacent squares\r\nconst findNeighbors = (board) => {\r\n  board.forEach((row, y) => {\r\n    row.forEach((cell, x) => {\r\n      let numAnts = 0;\r\n      let neighborhood = buildNeighborhood(board, y, x);\r\n      neighborhood.forEach((square) => {\r\n        if (square && square.ant) {\r\n          numAnts++;\r\n        }\r\n      });\r\n      cell.nearbyAnts = numAnts;\r\n      cell.neighbors = neighborhood.filter((el) => el !== null);\r\n    });\r\n  });\r\n  return board;\r\n};\r\n\r\nconst antInFirstClick = (antList, reservedNeighborhood) => {\r\n  let foundMatch = false;\r\n  reservedNeighborhood.forEach((sq) => {\r\n    if (sq !== null && antList.some((el) => el === sq.key)) {\r\n      foundMatch = true;\r\n    }\r\n  });\r\n  return foundMatch;\r\n};\r\n\r\nconst addAnts = (boardState, reservedNeighborhood) => {\r\n  let newBoard = boardState.board;\r\n  let antList = [];\r\n  do {\r\n    [newBoard, antList] = assignAnts(boardState);\r\n  } while (antInFirstClick(antList, reservedNeighborhood));\r\n  return [findNeighbors(newBoard), antList];\r\n};\r\n\r\n//takes an array and an index and returns\r\n//[the value of the index before, the specified index, and the next index]\r\n//or null if there is no index before or after\r\n// (sort of like array.slice but replacing a non-existent or negative index with null)\r\nconst horizontalNeighbors = (y, myIndex) => {\r\n  return [\r\n    myIndex - 1 >= 0 ? y[myIndex - 1] : null,\r\n    y[myIndex],\r\n    myIndex + 1 < y.length ? y[myIndex + 1] : null,\r\n  ];\r\n};\r\n\r\n//takes an array of arrays and specified \"row\" and \"col\" indeces\r\n//and returns an array of nine values: essentially the value of the specified \"cell\"\r\n//and the values of all the cells that \"touch\" it in the \"grid\"\r\nexport const buildNeighborhood = (wholeBoard, y, x) => {\r\n  let rowAbove =\r\n    y - 1 >= 0 ? horizontalNeighbors(wholeBoard[y - 1], x) : [null, null, null];\r\n  let myRow = horizontalNeighbors(wholeBoard[y], x);\r\n  let rowBelow =\r\n    y + 1 < wholeBoard.length\r\n      ? horizontalNeighbors(wholeBoard[y + 1], x)\r\n      : [null, null, null];\r\n  return rowAbove.concat(myRow, rowBelow);\r\n};\r\n\r\nconst startRound = (boardState, y, x) => {\r\n  let clickedNeighborhood = buildNeighborhood(\r\n    boardState.board,\r\n    y,\r\n    x\r\n  );\r\n  return addAnts(boardState, clickedNeighborhood);\r\n};\r\n\r\nexport default startRound;\r\n","import { squares } from \"../../../../imgs/icons\";\r\n\r\nexport const detonateAnts = (board, allAnts) => {\r\n  board.forEach((row, y) => {\r\n    board.forEach((col, x) => {\r\n      if (\r\n        allAnts.indexOf(board[y][x].key) !== -1 &&\r\n        !board[y][x].revealed &&\r\n        !board[y][x].flagged\r\n      ) {\r\n        board[y][x] = {\r\n          ...board[y][x],\r\n          display: squares.ant,\r\n          revealed: true,\r\n          unclickedAnt: true,\r\n        };\r\n      }\r\n    });\r\n  });\r\n  return board;\r\n};\r\n\r\nconst endRound = {\r\n  won: () => {\r\n    console.log(\"yeah\");\r\n  },\r\n  lost: () => {\r\n    console.log(\"oh no\");\r\n    // return {\r\n    //   ...boardState,\r\n    //   board: detonateAnts(boardState.board, boardState.parameters.antList),\r\n    // };\r\n  },\r\n};\r\n\r\nexport default endRound;\r\n","import { detonateAnts } from \"./endRound\";\r\nimport { squares, faces } from \"../../../../imgs/icons\";\r\n\r\n//returns { square: {updated square}, face: [face code] }\r\n// const clickHandler = {\r\n//   routeClick: (clickedSquare, whichClick, remFlags) => {\r\n//     if (whichClick === \"left\") {\r\n//       return clickHandler.leftClick(clickedSquare, remFlags);\r\n//     } else if (whichClick === \"right\") {\r\n//       return clickHandler.rightClick(clickedSquare, remFlags);\r\n//     }\r\n//   },\r\n//   leftClick: (sq, remFlags) => {\r\n//     if (sq.flagged || sq.revealed) {\r\n//       return { square: sq, face: faces.smiling };\r\n//     } else {\r\n//       if (sq.ant) {\r\n//         return {\r\n//           square: {\r\n//             ...sq,\r\n//             display: squares.ant,\r\n//             revealed: true,\r\n//           },\r\n//           face: faces.exploded,\r\n//           flags: remFlags,\r\n//         };\r\n//       } else {\r\n//         return {\r\n//           square: {\r\n//             ...sq,\r\n//             display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n//             revealed: true,\r\n//           },\r\n//           face: faces.smiling,\r\n//           flags: remFlags,\r\n//         };\r\n//       }\r\n//     }\r\n//   },\r\n//   rightClick: (sq, remFlags) => {\r\n//     //removing a flag\r\n//     if (sq.flagged) {\r\n//       return {\r\n//         square: {\r\n//           ...sq,\r\n//           display: squares.unclicked,\r\n//           revealed: false,\r\n//           flagged: false,\r\n//         },\r\n//         face: faces.smiling,\r\n//         flags: remFlags + 1,\r\n//       };\r\n//     } else {\r\n//       if (remFlags > 0) {\r\n//         return {\r\n//           square: {\r\n//             ...sq,\r\n//             display: squares.flag,\r\n//             revealed: false,\r\n//             flagged: true,\r\n//           },\r\n//           face: faces.smiling,\r\n//           flags: remFlags - 1,\r\n//         };\r\n//       } else {\r\n//         //player can't place more flags than ants\r\n//         return {\r\n//           square: { ...sq },\r\n//           face: faces.smiling,\r\n//           flags: remFlags,\r\n//         };\r\n//       }\r\n//     }\r\n//   },\r\n// };\r\n\r\nconst checkForWin = (board, gameParams) => {\r\n  let unclickedSafe = gameParams.rows * gameParams.cols - gameParams.ants;\r\n  board.forEach((row, y) => {\r\n    board.forEach((col, x) => {\r\n      if (!board[y][x].ant && board[y][x].revealed) {\r\n        unclickedSafe--;\r\n      }\r\n    });\r\n  });\r\n  if (unclickedSafe === 0) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst recursiveUncover = (centerSquare, board) => {\r\n  centerSquare.neighbors.forEach((sq) => {\r\n    if (!board[sq.y][sq.x].revealed) {\r\n      board[sq.y][sq.x] = {\r\n        ...sq,\r\n        revealed: true,\r\n        display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n      };\r\n      if (sq.nearbyAnts === 0) {\r\n        board = recursiveUncover(sq, board);\r\n      }\r\n    }\r\n  });\r\n  return board;\r\n};\r\n\r\nconst uncoverNeighbors = (startingSquare, board) => {\r\n  //assumes a nearbyAnts === 0 starting square\r\n  let updatedBoard = board;\r\n  startingSquare.neighbors.forEach((sq) => {\r\n    if (!board[sq.y][sq.x].revealed) {\r\n      board[sq.y][sq.x] = {\r\n        ...sq,\r\n        revealed: true,\r\n        display: sq.nearbyAnts === 0 ? \"\" : sq.nearbyAnts,\r\n      };\r\n      if (sq.nearbyAnts === 0) {\r\n        board = recursiveUncover(sq, board);\r\n      }\r\n    }\r\n  });\r\n  return updatedBoard;\r\n};\r\n\r\nconst replaceSquareInBoard = (board, newSquare) => {\r\n  console.log(\"new square:\");\r\n  console.log(newSquare);\r\n  let tempBoard = [...board];\r\n  tempBoard[newSquare.y][newSquare.x] = newSquare;\r\n  return [...tempBoard];\r\n};\r\n\r\nconst playerMoveReducer = (boardState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"LEFT_CLICK\":\r\n      if (action.payload.flagged || action.payload.revealed) {\r\n        //flagged or revealed square clicked (no action)\r\n        return {\r\n          newBoardState: {\r\n            ...boardState,\r\n            face: faces.smiling,\r\n          },\r\n          gameOver: false,\r\n        };\r\n      } else if (action.payload.ant) {\r\n        //ant uncovered (game over)\r\n        const tempBoard = replaceSquareInBoard(boardState.board, {\r\n          ...action.payload,\r\n          display: squares.ant,\r\n          revealed: true,\r\n        });\r\n        return {\r\n          newBoardState: {\r\n            ...boardState,\r\n            board: detonateAnts(tempBoard, boardState.parameters.antList),\r\n            face: faces.exploded,\r\n          },\r\n          gameOver: true,\r\n        };\r\n      } else {\r\n        //non-ant uncovered\r\n        let tempFace = faces.smiling;\r\n        let tempGameOver = false;\r\n        let tempBoard = replaceSquareInBoard(boardState.board, {\r\n          ...action.payload,\r\n          display:\r\n            action.payload.nearbyAnts === 0 ? \"\" : action.payload.nearbyAnts,\r\n          revealed: true,\r\n        });\r\n        if (checkForWin(boardState.board, boardState.parameters)) {\r\n          tempFace = faces.shades;\r\n          tempGameOver = true;\r\n        }\r\n        if (action.payload.nearbyAnts === 0) {\r\n          tempBoard = uncoverNeighbors(action.payload, tempBoard);\r\n        }\r\n        return {\r\n          newBoardState: {\r\n            ...boardState,\r\n            board: tempBoard,\r\n            face: tempFace,\r\n          },\r\n          gameOver: tempGameOver,\r\n        };\r\n      }\r\n    case \"RIGHT_CLICK\":\r\n      if (action.payload.flagged) {\r\n        //removing a flag\r\n        return {\r\n          newBoardState: {\r\n            ...boardState,\r\n            board: replaceSquareInBoard(boardState.board, {\r\n              ...action.payload,\r\n              display: squares.unclicked,\r\n              revealed: false,\r\n              flagged: false,\r\n            }),\r\n            face: faces.smiling,\r\n            flags: boardState.flags + 1,\r\n          },\r\n          gameOver: false,\r\n        };\r\n      } else if (boardState.flags > 0) {\r\n        //placing a flag\r\n        return {\r\n          newBoardState: {\r\n            ...boardState,\r\n            board: replaceSquareInBoard(boardState.board, {\r\n              ...action.payload,\r\n              display: squares.flag,\r\n              revealed: false,\r\n              flagged: true,\r\n            }),\r\n            face: faces.smiling,\r\n            flags: boardState.flags - 1,\r\n          },\r\n          gameOver: false,\r\n        };\r\n      } else {\r\n        //player can't place more flags than ants\r\n        return {\r\n          newBoardState: {\r\n            ...boardState,\r\n            face: faces.smiling,\r\n          },\r\n          gameOver: false,\r\n        };\r\n      }\r\n    default:\r\n      console.log(\"squareClick reducer error: \", action.type);\r\n      return;\r\n  }\r\n};\r\n\r\nexport default playerMoveReducer;\r\n","import { useCallback, useContext, useEffect, useReducer } from \"react\";\r\n\r\nimport paramsContext from \"../../../utils/store/paramsContext\";\r\nimport boardReducer from \"../../../utils/reducers/boardReducer\";\r\nimport getInitialBoard from \"../../../utils/store/initialState/board\";\r\n\r\nimport Controls from \"../Controls/Controls\";\r\nimport RowWrapper from \"../RowWrapper/RowWrapper\";\r\n\r\nimport { faces } from \"../../../imgs/icons\";\r\nimport newRound from \"./logic/newRound\";\r\nimport startRound from \"./logic/startRound\";\r\n\r\nimport playerMoveReducer from \"./logic/clickHandler\";\r\n// import clickHandler from \"./logic/clickHandler\";\r\n// import { checkForWin } from \"../../../utils/logic/playerMove/checkForWin\";\r\n// import uncoverNeighbors from \"../../../utils/logic/playerMove/uncoverNeighbors\";\r\n// import { detonateAnts } from \"../../../utils/logic/gameOver/detonateAnts\";\r\n\r\nimport styles from \"./Board.module.css\";\r\nimport roundContext from \"../../../utils/store/roundContext\";\r\nimport endRound from \"./logic/endRound\";\r\n\r\nconst Board = () => {\r\n  const paramCtx = useContext(paramsContext);\r\n  const roundCtx = useContext(roundContext);\r\n\r\n  const [boardState, dispatchBoard] = useReducer(\r\n    boardReducer,\r\n    getInitialBoard(paramCtx)\r\n  );\r\n\r\n  const restartRound = useCallback(() => {\r\n    dispatchBoard({\r\n      type: \"RESET_BOARD\",\r\n      payload: getInitialBoard(paramCtx),\r\n    });\r\n    roundCtx.set.reset();\r\n  }, [paramCtx, roundCtx.set]);\r\n\r\n  const onStart = () => {\r\n    //let happy onStart face restart a game in progress\r\n    if (roundCtx.started) {\r\n      restartRound();\r\n    }\r\n    //clear out previous round (if applicable)\r\n    dispatchBoard({ type: \"CLEAR_BOARD\" });\r\n    //fills out the board with uncovered squares, but no ants yet\r\n    dispatchBoard({\r\n      type: \"UNCOVER_BOARD\",\r\n      payload: {\r\n        board: newRound(boardState.parameters.rows, boardState.parameters.cols),\r\n        parameters: { ...boardState.parameters },\r\n        flags: boardState.parameters.ants,\r\n      },\r\n    });\r\n    roundCtx.set.ready();\r\n  };\r\n\r\n  const handleSquareClick = useCallback(\r\n    (y, x, clickType) => {\r\n      //first click\r\n      if (!roundCtx.started) {\r\n        let [boardWithAnts, antList] = startRound(boardState, y, x);\r\n        console.log(boardWithAnts);\r\n        dispatchBoard({\r\n          type: \"SET_ANTS\",\r\n          payload: {\r\n            board: boardWithAnts,\r\n            parameters: {\r\n              ...boardState.parameters,\r\n              antList: antList,\r\n            },\r\n          },\r\n        });\r\n        roundCtx.set.start();\r\n      }\r\n      // console.log(rowIndex, colIndex, whichClick);\r\n      console.log(boardState.board[y][x]);\r\n      // let updateGrid = [...boardState.board];\r\n      let { newBoardState, gameOver } = playerMoveReducer(\r\n        { ...boardState },\r\n        { type: clickType, payload: boardState.board[y][x] }\r\n      );\r\n      // let newClickedSquare =\r\n      // newBoardState[clickedSquare.row][clickedSquare.col];\r\n      // let updateAction = clickHandler.routeClick(\r\n      //   clickedSquare,\r\n      //   whichClick,\r\n      //   boardState.flags\r\n      // );\r\n\r\n      // updateGrid[rowIndex][colIndex] = updateAction.square;\r\n      // if (updateAction.square.revealed) {\r\n      //if an ant was uncovered\r\n      // if (updateAction.square.ant) {\r\n      // if (newClickedSquare.ant) {\r\n      if (gameOver && newBoardState.face === faces.exploded) {\r\n        roundCtx.set.lost();\r\n        endRound.lost();\r\n        // updateGrid = detonateAnts(updateGrid, boardState.parameters.antList);\r\n      } else if (gameOver && newBoardState.face === faces.shades) {\r\n        //if the last non-ant was uncovered\r\n        // updateAction.face = faces.shades;\r\n        roundCtx.set.won();\r\n        endRound.won();\r\n      }\r\n      //if a square with no nearby ants was uncovered\r\n      // if (updateAction.square.nearbyAnts === 0) {\r\n      //   updateGrid = uncoverNeighbors(updateAction.square, updateGrid);\r\n      // }\r\n      // }\r\n      dispatchBoard({\r\n        type: \"UPDATE_BOARD\",\r\n        payload: {\r\n          board: newBoardState.board,\r\n          face: newBoardState.face,\r\n          flags: newBoardState.flags,\r\n        },\r\n      });\r\n    },\r\n    [boardState, roundCtx]\r\n  );\r\n\r\n  const handleFaceChange = (newFace) => {\r\n    dispatchBoard({ type: \"SET_FACE\", payload: newFace });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //reset board if the level has changed or if the round shouldn't be started\r\n    if (\r\n      paramCtx.level !== boardState.level ||\r\n      (!roundCtx.ready && !roundCtx.started && boardState.board.length > 0)\r\n    ) {\r\n      restartRound();\r\n    }\r\n  }, [\r\n    paramCtx.level,\r\n    boardState.level,\r\n    boardState.board,\r\n    roundCtx,\r\n    restartRound,\r\n  ]);\r\n  return (\r\n    <article className={styles.gameWrapper}>\r\n      <Controls\r\n        startGame={onStart}\r\n        inProgress={roundCtx.ready}\r\n        face={boardState.face}\r\n        flags={boardState.flags}\r\n        firstClick={roundCtx.started}\r\n      />\r\n      <section className={styles.boardWrapper}>\r\n        {boardState.board ? (\r\n          <RowWrapper\r\n            boardGrid={boardState.board}\r\n            handleSquareClick={handleSquareClick}\r\n            setFace={handleFaceChange}\r\n            gameInProgress={roundCtx.ready}\r\n          />\r\n        ) : null}\r\n      </section>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import Overlay from \"../Overlay/Overlay\";\r\nimport MenuBar from \"../../WindowHeader/MenuBar/MenuBar\";\r\nimport { Fragment, useContext, useCallback, useState } from \"react\";\r\nimport windowContext from \"../../../utils/store/windowContext\";\r\nimport Board from \"../../Game/Board/Board\";\r\nimport styles from \"./Window.module.css\";\r\n\r\nconst Window = () => {\r\n  const windowCtx = useContext(windowContext);\r\n  const [animation, setAnimation] = useState(\"\");\r\n  const [minComplete, setMinComplete] = useState(false);\r\n  const [maxComplete, setMaxComplete] = useState(false);\r\n\r\n  const animationEndHandler = () => {\r\n    console.log(\"animation ended\");\r\n    if (animation === \"window--minimizing\") {\r\n      //if the animation that just ran was minimize\r\n      setAnimation(\"\");\r\n      setMinComplete(true);\r\n      setMaxComplete(false);\r\n    } else if (animation === \"window--maximizing\") {\r\n      setAnimation(\"\");\r\n      setMaxComplete(true);\r\n      setMinComplete(false);\r\n    }\r\n    // setAnimation(null);\r\n  };\r\n\r\n  const animationStartHandler = () => {\r\n    console.log(\"animation started\");\r\n  };\r\n\r\n  useCallback(() => {\r\n    console.log(\"window usecallback\");\r\n    if (windowCtx.minimize.isMinimized && !minComplete) {\r\n      setAnimation(\"window--minimizing\");\r\n    }\r\n    if (!windowCtx.minimize.isMinimized && !maxComplete) {\r\n      setAnimation(\"window--maximizing\");\r\n    }\r\n  }, [windowCtx.minimize.isMinimized, minComplete, maxComplete]);\r\n\r\n  return (\r\n    <main\r\n      className={`${styles.window} ${animation ? styles[animation] : \"\"} ${\r\n        windowCtx.minimize.isMinimized ? styles[\"window--minimized\"] : \"\"\r\n      }`}\r\n      style={{\r\n        transform: windowCtx.minimize.isMinimized\r\n          ? \"none\"\r\n          : `translateX(${windowCtx.dragMove.translate.x}px) translateY(${windowCtx.dragMove.translate.y}px)`,\r\n      }}\r\n      onAnimationEnd={animationEndHandler}\r\n      onAnimationStart={animationStartHandler}\r\n    >\r\n      {windowCtx.minimize.isMinimized ? null : (\r\n        <Fragment>\r\n          <Overlay />\r\n          <MenuBar />\r\n          <Board />\r\n        </Fragment>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Window;\r\n","export default __webpack_public_path__ + \"static/media/win98Logo.c4af9ed5.png\";","import { useContext } from \"react\";\r\nimport win98logo from \"../../../imgs/win98Logo.png\";\r\nimport { squares } from \"../../../imgs/icons\";\r\nimport styles from \"./Footer.module.css\";\r\nimport windowContext from \"../../../utils/store/windowContext\";\r\n\r\nconst Footer = () => {\r\n  const windowCtx = useContext(windowContext);\r\n  let gameWindowButtonStyle = styles.gameWindowButton;\r\n  if (!windowCtx.minimize.isMinimized) {\r\n    gameWindowButtonStyle = `${styles.gameWindowButton} button--focus`;\r\n  }\r\n  const clickHandler = () => {\r\n    if (windowCtx.minimize.isMinimized) {\r\n      windowCtx.minimize.up();\r\n    } else {\r\n      windowCtx.minimize.down();\r\n    }\r\n  };\r\n  return (\r\n    <footer className={styles.bg__footer}>\r\n      <button id=\"windows_start\" className={styles.startButton}>\r\n        <img src={win98logo} alt=\"Windows 98 Logo\" /> Start\r\n      </button>\r\n      <button\r\n        id=\"antsweeper_min\"\r\n        className={gameWindowButtonStyle}\r\n        onClick={clickHandler}\r\n      >\r\n        {String.fromCharCode(...squares.ant)} Antsweeper\r\n      </button>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Window from \"../Window/Window\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nimport { useContext } from \"react\";\r\nimport paramContext from \"../../../utils/store/paramsContext\";\r\nimport \"../../../style/levels.css\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nfunction App() {\r\n  const paramCtx = useContext(paramContext);\r\n\r\n  return (\r\n    <div className={`${paramCtx.level} ${styles.window_container}`}>\r\n      <Window />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style/index.css\";\r\nimport \"./style/windows98.css\";\r\nimport \"./style/levels.css\";\r\nimport { ParamCtxProvider } from \"./utils/store/paramsContext\";\r\nimport App from \"./Components/Background/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ParamCtxProvider>\r\n      <App />\r\n    </ParamCtxProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}